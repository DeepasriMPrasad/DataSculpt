{
  "crawl_summary": {
    "start_source": "Local PDF: ACD_Cloud-Native_Development_in_CXS (2).pdf",
    "total_pages": 5,
    "successful_pages": 5,
    "failed_pages": 0,
    "total_words": 16862,
    "unique_links": 132,
    "unique_images": 0,
    "max_depth_reached": 1
  },
  "pages": [
    {
      "success": true,
      "title": "<Program/Project/ Topic/Integration Scenario>",
      "content": "Page 1:\nProduct Architects \n \n \nAndreas Löbel  \nKlaus Dickgiesser \nSundaresan Krishnamurthy \nEbru Polat \nThomas Paulus \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nSAP INTERNAL \nCustomer Services & Delivery  \nCustomer Experience and Solutions (CXS) \n \nSAP Cloud ALM  \n \nArchitecture Concept Document\n\nPage 2:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 2 of 66 \n \nInformation Classification:  \nSAP INTERNAL \n \nDISCLAIMER  \n \n© 2024 SAP SE or an SAP affiliate company. All rights reserved.  \n \nThis internal document provides SAP-internal information about the architecture and concepts of the SAP Cloud Application \nLifecycle Management Application and platform. It contains current and intended strategies, developments, or functionalities \nof SAP® solutions, applications, and technologies and is not intended to be binding upon SAP to any particular course of \nbusiness, product strategy, and development; its content is subject to change without notice.  \n \nNo part of this publication may be reproduced or transmitted in any form or for any purpose without the express permission of \nSAP SE or an SAP affiliate company.  \n \nThe information contained herein may be changed without prior notice. Some software products marketed by SAP SE and its \ndistributors contain proprietary software components of other software vendors. National product specifications may vary.  \n \nThese materials are provided by SAP SE or an SAP affiliate company for informational purposes only, without representation \nor warranty of any kind . SAP SE or its affiliated companies shall not be liable for errors or omissions with respect to the \nmaterials. The only warranties for SAP SE or SAP affiliate company products and services are those that are set forth in the \nexpress warranty statements accompa nying such products and services, if any. Nothing herein should be construed as \nconstituting an additional warranty.  \n \nIn particular, SAP SE or its affiliated companies have no obligation to pursue any course of business outlined in this document \nor any related presentation, or to develop or release any functionality mentioned therein. This document, or any related \npresentation, and SAP SE's or its affiliated companies' strategy and possible future developments, products, or platform \ndirections and functionality are all subject to change and may be changed by SAP SE or its affiliated companies at any time \nfor any reason without notice. The information in this document is not a commitment, promise, or legal obligation to deliver any \nmaterial, code, or functionality. All forward -looking statements are subject to various risks and uncertainties that could cause \nactual results t o differ materially from expectations. Readers are cautioned not to rely on these forward-looking statements, \nwhich speak only as of their dates, and they should not be relied upon in making purchasing decisions.  \n \nSAP and other SAP products and services mentioned herein and their respective logos are trademarks or registered \ntrademarks of SAP SE (or an SAP affiliate company) in Germany and other countries. All other product and service names \nmentioned are the trademarks of their respective companies.  \nPlease see http://global12.sap.com/corporate-en/legal/copyright/index.epx for additional trademark information and \nnotices. \nDocument History \nDate Version Name Change/Enhancement \n2019-07-24 0.94 Andreas Löbel \nKlaus Dickgiesser \nFirst Published Version  \nUpdated detail diagrams \n2020-11-15 0.99 Andreas Löbel \nKlaus Dickgiesser \nChanges of service delivery market, reuse service \nlist, K8S \n2022-03-21 1.01 Andreas Löbel \nKlaus Dickgiesser \nSundaresan Krishnamurthy \nEbru Polat \nThomas Paulus \nUpdated all info to the latest state, new foreword \n2023-02 1.1 Adding PALM and Powered by CALM.  \nAll chapters are updated to the latest news \n2024-02 1.2 GenAI/LLM, DataLake, APIs, BTC, updated all info \nCurrent Published Version: https://github.tools.sap/CALM/design >> Download \n \nWork in progress version (CXS-Architecture-Internal): Sharepoint  \nRelated: SAPCloudALMinRegulatedEnvironments_draft.docx\n\nPage 3:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 3 of 66 \n \nContents \n1 Abstract .................................................................................................... 7 \n1.1 Business Target .................................................................................................. 8 \n1.2 Engineering Culture - Deployment with Confidence........................................... 9 \n1.3 Architecture ....................................................................................................... 10 \n2 Business Requirements for SAP Cloud ALM .................................... 14 \n3 Powered by CALM................................................................................. 17 \n4 Engineering Culture, Process, Tools ................................................. 20 \n4.1 Single Trunk Delivery Model ............................................................................. 22 \n4.2 Release Feature Toggles .................................................................................. 23 \n4.3 Daily Delivery to Production .............................................................................. 24 \n4.4 Feature-Driven Development Process.............................................................. 25 \n4.5 Feature-Driven Development Process at SAP Cloud ALM .............................. 27 \n4.6 Daily Delivery Process for CALM Engineers .................................................... 28 \n4.7 Engineering View on Tools for Delivery ............................................................ 28 \n4.8 Tools for DevOps Monitoring ............................................................................ 30 \n4.9 Carpe Diem – Our DevOps Model .................................................................... 30 \n5 Architecture Guiding Principles.......................................................... 32 \n6 Architecture Decisions ......................................................................... 39 \n6.1 Data Persistency: HANA Cloud as Default ....................................................... 41 \n6.2 Data Separation in Customer Subscription Model ........................................... 41 \n6.3 Subscription Model ............................................................................................ 43 \n6.4 CALM@DwC Account Setup ............................................................................ 44 \n6.5 XALM - Cross Customer SAP Cloud ALM ........................................................ 45 \n6.6 PALM - Public ALM ........................................................................................... 53 \n6.7 Asynchronous Messaging and Eventing with Kafka......................................... 56 \n6.8 Embedded Analytics in CALM .......................................................................... 57 \n6.9 SAP Analytics Cloud (SAC) – Integration Option ............................................. 57 \n6.10 Service & Support Data Lake ............................................................................ 58 \n6.11 Metering and Usage Analysis ........................................................................... 58 \n6.12 Backing Services and Scalability ...................................................................... 59 \n6.13 Identity and Access Management ..................................................................... 60 \n6.14 User Role Assignment (Authorization Management) ....................................... 60 \n6.15 SAP Cloud ALM Commercialization ................................................................. 61 \n6.16 SAP Cloud ALM Customer Onboarding ........................................................... 63 \n6.17 Hyperscaler Strategy / Region Strategy ........................................................... 64 \n6.18 DevOps and Operations Processes ................................................................. 65 \n6.19 PPMS Model ..................................................................................................... 65 \n6.20 Product Standards............................................................................................. 65 \n6.21 Cloud Native KPIs Score - Assessment ........................................................... 65\n\nPage 4:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 4 of 66 \n \nTarget Audience \nThis document is intended to inform and guide our colleagues from Customer Experiences and \nSolutions (CXS) regarding our cloud strategy and the related architecture. The paper focuses on the \ncloud-native subscription model using the SAP Business Technology Platform. Hence, SAP Cloud \nALM is in the center. ADD MORE ON DATA LAKE /LLM HERE. \nClassical backend infrastructures like SAP Solution Manager, Focused Run, W71, and CBX are not \nin focus here. \nIf you are a new engineer in CXS, please check our onboarding WorkZone. \n \nDocument Structure \n• Chapter 1: The document starts with a high-level abstract on SAP Cloud ALM… \no Business Requirements \no Engineering Culture \no Architecture \n \n• Chapters 2 to 5: Describing the aspects in detail. \no Business Requirements for SAP Cloud ALM \no Engineering Culture, Processes, and Tools \no Architecture Guiding Principles \no Architecture Decisions \n \n \n \nCXS Architecture Contacts \nSee https://wiki.one.int.sap/wiki/display/CXSDEV/HOME#HOME-ContactsforEngineersinCXS for the \nlatest status. \n \n \n \n \n \n \n \n \n \n \n \nThis document uses the terms SHALL and SHOULD as described in IETF RFC 2119: \n \nSHALL   This word means that the definition is an absolute requirement of the software \n(synonyms are the terms \"REQUIRED\" or \"MUST\", but this document uses SHALL only. \n \nSHOULD   This word, or the adjective \"RECOMMENDED\", means that there may exist valid \nreasons in particular circumstances to ignore a particular item, but the full implications must be \nunderstood and carefully weighed before choosing a different course.\n\nPage 5:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 5 of 66 \n \nForeword \nThe Intelligent Enterprise will consume the ultimate scalability and automation capabilities of the cloud \nto gain the maximum insight from its highest company value, the data accessible for this Intelligent \nEnterprise. Consequently, all applications will run in the cloud. An Intelligent Enterprise will also differ \nfrom others in that it manages and supports all these cloud applications with one application lifecycle \nmanagement (ALM) in the Cloud, the SAP Cloud ALM. \nWith thousands of live SAP Solution Managers, SAP has already proven the importance of one ALM \nin our installed base and continues to delight our customers regarding the service and support \nlifecycle. With SAP Cloud ALM's ease of consumption of SAP applications in the cloud, hybrid and \non-premise is the focus. Consequently, SAP Cloud ALM is enabled to cope with the much higher \nfrequency of innovation cycles in the cloud. Our mantra is DAILY! \nWe, the engineers, have fundamentally changed the development and deployment processes – all \nbased on the core belief of \"only one valid version of the code, no bifurcation of code , and \nconsequently no older releases anymore .\" A simplified code lifecycle  powered by Deploy with \nConfidence (https://dwc.tools.sap/). We cont inuously deliver and deploy to our live customers , \nDAILY. \nThe engineering experience has become a sustainable cloud journey for all of us, which drives \ncustomer satisfaction and employee engagement, all based on high , instantaneous adoption of the \nnewest features and robust automation , improving quality every day. We have reached a totally \ndifferent level of quality already, knowing that we will have to get much better at running > 50'000 \ncustomers soon. \nThe vision of \"powered by CALM \" goes beyond this. All transformation enablers from Business \nProcess Management and Business Transformation Services (incl . data transformation, mergers & \nand carve-outs) are powered by SAP Cloud ALM , e2e quality ensured and integrated with SAP \nService & Support.\n\nPage 6:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 6 of 66 \n \n \n     Figure 1 – Evolution of SAP Application Lifecycle Management to Business Transformation Suite\n\nPage 7:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 7 of 66 \n \n1 Abstract \nThis document provides guidance and rules for cloud development in CSUP-CXS (Customer \nExperience and Solutions). SAP Cloud ALM is SAP's cloud-based application lifecycle management \noffering. https://support.sap.com/en/alm/sap-cloud-alm.html  \nSAP Cloud ALM is built on the SAP Business Technology Platform. Implementation follows a cloud-\nnative, micro-service architecture pattern. The software is deployed into several provider accounts \nacross the globe and consumed by the customer per Software as a Service (SaaS) subscription.  \nSAP Cloud ALM is a \"Customer managed SaaS application \" and contains more than 80 \nmicroservices. Microservices are implemented in Java (node.js is possible too, but so far we avoided \nlimiting DevOps complexity). We use Deploy with Confidence (DwC), Cloud Application Programming \nModel (CAP), and SAP Cloud SDK (more details on these tools are provided in this document). \nWe use  domain-driven design  to model the microservices.  Data separation is done by creating \nseparate database schemas (HDI container) in SAP HANA Cloud - per customer tenant and domain. \nDepending on the criticality of the microservices, we can run the services on a standard SAP HANA \nservice plan or a high-availability SAP HANA instance. For resilience reasons, the HDI containers of \nthe 80 microservices are distributed across (currently) 20 SAP HANA Cloud Instances per SAP Cloud \nALM deployment. \nThis ACD … \n• Provides a summary of the business requirements of SAP Cloud ALM \n• Describe our engineering culture and process \n• Lists architecture guiding principles and  \n• Architecture decisions that we have made based on the business needs and principles \nThe document is a summary of all aspects.  Details and more frequently changing information can be \nfound via the various links in this document. \n \n \nFigure 2 - Business Target, Engineering Culture and Architecture\n\nPage 8:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 8 of 66 \n \n1.1 Business Target \nDeliver the best customer support experience in the industry. Minimize the customer effort to \nimplement (Build) and operate (Run) the Intelligent Enterprise Suite. The focus is on cloud-first and \nhybrid-cloud customers. \nThe three areas of SAP Cloud ALM and their key capabilities: \n \nFigure 3 - SAP Cloud ALM - Product Description (original slide) \n \nCurrently, we are working on onboarding the SAP Business Transformation Center (BTC) into CALM \n(wiki). That will likely be a fourth pillar besides Build, Run, and Service.\n\nPage 9:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 9 of 66 \n \n1.2 Engineering Culture - Deployment with Confidence \nSAP Cloud ALM supported the rise of Deploy with Confidence (DwC) to manage SaaS Software \ndelivery because we saw the need for such culture, processes, and tools early on. Meanwhile, DwC \nis the established Golden Path to engineer business applications on BTP. We continue to contribute \nand inner source towards DwC and related tools. More info: \n• Golden Path: Guiding Engineers to Successfully Built SAP BTP Cloud Applications \n• SAP Cloud ALM – Culture Transformation Guide \n• Deploy with Confidence (DwC) \n• More info on CALM@DwC: https://wiki.one.int.sap/wiki/x/p02-fw  \n• DORA QuickChek for CALM: https://www.devops-research.com/quickcheck.html \n \nChapter 4 – “Engineering Culture, Process, Tools” provides more details on DwC.\n\nPage 10:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 10 of 66 \n \n1.3 Architecture \nThis ACD, in combination with the wiki, is the basis for all cloud-native developments in CXS. \nThe following figure illustrates the overall architecture for CXS Cloud Services in the context of SAP \nCloud ALM. \n \nFigure 4 - High-Level Architecture CXS Cloud Services - SAP's Cloud Native Support platform  \n \n \n \nAll CALM microservices are deployed/operated in one provider sub-account per data center where \nCALM is available for customer subscription. \nThe CXS Cloud Architecture is based on multi-tenancy-enabled microservices. Multi-tenancy refers \nto software architecture in which tenants share the same technical resources but isolate data and\n\nPage 11:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 11 of 66 \n \nusers. In SAP BTP - Cloud Foundry, we have a single instance of the application that serves \nmultiple customers (tenants). See the BTP Multi-tenancy wiki page at \nhttps://wiki.wdf.sap.corp/wiki/x/dg5rbQ. We develop adhering to the 12 Factor Apps principle \nhttps://12factor.net. \n \nBuild, Run, and Service are represented by currently ~50 microservices. There are a few more to \ncome, so maybe we reach about 65 in 2022.  \nAll CALM microservices are consumed by customers in customer-owned BTP Sub-accounts. \nThis type of subscription scenario, on top of a customer-owned BTP account, is called a customer-\nmanaged SaaS application. \nLike for all customer-managed SaaS applications, the customer is responsible for the global \naccount, the subaccounts, the assignment of the IAS Tenant, the subscription, the configuration of \nthe cloud services, etc. However, where possible, we provide setup automation capabilities to \nsimplify and streamline customer tasks. \nThere is an automated CALM-customer-tenant onboarding process. Interested customers can \ntrigger it from a corresponding SAP for Me application. This will create one global account with a \nsub-account subscribed to CALM. The customer could define additional sub-accounts and \nsubscribe to SAP Cloud ALM manually multiple times. However, this is not in focus now. We head \nto the fact that each customer needs just a single subscription to CALM. \nWe head for a common architecture in SAP Cloud ALM Build, Run, and Service Delivery Cloud. \n \n  \nNumber of Customers \nexpected  \n2019:        50 \n2020:      300 \n2021:   1.000 \n2022:   3.000 \n2023:   5.000 \n2024:   8.000 \n2027: 50.000 \nUnderlying \nPlatform/Application Server  \nSAP BTP / Cloud Foundry environment; more than 50 microservices \nimplemented in Java. CAP and HANA Cloud. Cloud SDK is \nrecommended but not mandatory \nProduct Type Customer-managed SaaS Application \nDelivery Cloud Delivery: no deployment into customer accounts; consumption \nvia subscription; no on-premise delivery \nCommercialization: \nSAP Cloud ALM and Cloud Service Delivery are part of the customer's SAP Cloud Subscription contract. \nMain Use Cases / Functional Scope \nThe software provides all features so that the customers can manage their cloud and hybrid solutions.\n\nPage 12:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 12 of 66 \n \nCXS Cloud-Development Stack - Built-on BTP \nTo implement the microservices, we decided for the Built-on SAP BTP technology stack. It is Open \nand Opinionated and supports SAP-centric cloud-native solutions.  \n \nFigure 5 - CXS Cloud Stack based on SAP BTP Strategy Paper - Slides \n \nThe software stack enables programming services with the so-called Cloud Application Programming \nModel of SAP BTP. \n \nThe SAP Cloud Application Programming model is SAP's way of guiding you through cloud \napplication development by offering a consistent end -to-end programming model that includes SAP \nand open -source tools, languages, libraries, and APIs tailored for service and application \ndevelopment on the SAP Business Technology Platform.  \nYou can say it is both \"open\" and \"opinionated\", because while it does give you flexibility and choice, \nit also marks a clear golden path through best practices & guidelines. For example, you can use \nSAP Business Application Studio , Eclipse, Visual Studio Code , IntelliJ IDEA , or any other \ndevelopment tool you choose. \nThe cloud application programming model saves from adding boilerplate code and lets you focus on \ndifferentiating and personalized features specific to your business needs.  \nFor more information, see help.sap.com and Golden Path: Guiding Engineers to Successfully Built \nSAP BTP Cloud Applications \nFollowing the CAP model, each CXS microservice has the following high-level integration \narchitecture:\n\nPage 13:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 13 of 66 \n \n  \nFigure 6 - CALM microservice architecture \n \n \nDetails on investigated alternative architecture stacks can be found in the architecture decision \nrecord ADR-0010 Choice of Technology Platform & Runtime for SAP Cloud ALM SaaS Application\n\nPage 14:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 14 of 66 \n \n2 Business Requirements for SAP Cloud ALM \n \nThe scope of SAP Cloud ALM is to: \n• Deliver the best customer support experience in the industry. \n• Minimize customer effort to adopt and operate the Intelligent Enterprise Suite. \n• Reduced total cost of implementation and end-to-end Operation. \n• Consolidate all the solutions that help SAP customers implement faster and operate \nbetter. \nThe characteristics of SAP Cloud ALM are:  \n• It is cloud-based to achieve an exceptional end-to-end support experience for multi-cloud \nand hybrid SAP solutions.   \n• Free of charge for the customer. Usage rights are already included with SAP Enterprise \nSupport. \n• Support SAP to attract cloud-only and cloud-first customers and to keep customers for life.  \nThe new cloud offering s can be better understood when bringing them into the relation/context of \nSAP Solution Manager. SAP Solution Manager 7.2 is the tool of choice to provide application lifecycle \nmanagement for all SAP on -premise products, partially also hybrid landscapes.  We assume cloud-\nonly- and cloud-first customers have only low or no  on-premise footprint. Such customers will not \noperate an on-premise SAP Solution Manager system. \nTherefore, SAP Cloud ALM, including Cloud Service Delivery, was introduced to cover that area. SAP \nCloud ALM capabilities can be grouped into Build (Implementation), Run (Operation), and Service. \n1. SAP Cloud ALM Build (CBuild / Implementation) covers the business process \"Requirements \nto Deploy\". It consists of several features, for example, process management, implementation \nprojects, change and deployment management, test management, etc.  \n \nCALM Build – Process Model  \nCALM Build – Overview Screen \n \n2. SAP Cloud ALM Run (CRUN / Operations) covers the business process \"Predict to Avoid\". It \nconsists of features like integration monitoring, business process monitoring, user monitoring, \netc.  \nCRUN is handled by Technology Guideline 11 (TG11); Slides and Demo recording from \nS/4HANA Cloud Day.\n\nPage 15:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 15 of 66 \n \n \nCALM Run Integration Monitoring \n \nIntegration Monitoring - Analytics \n \n3. SAP Cloud ALM Service covers the service delivery center, service execution engine, \nservice/check authoring, template asset management, issue and action management, and \nservice results. SAP Cloud ALM Service offers features for SAP employees (internal facing) as \nwell as for SAP Cloud ALM customer users (external users). There are several communication \nand integration scenarios between internal-facing and external-facing applications.  \n \n \nCALM Service – Launchpad Tiles \n   \n  Service Explorer – Services \n \n \nService Delivery Center – Overview\n\nPage 16:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 16 of 66 \n \nPress Release: SAP Cloud ALM Enhances Support for Cloud-Based Solutions on 05/2020 \n \nWALLDORF — SAP SE (NYSE: SAP) announced multiple updates to the SAP Cloud ALM \nsolution today. The cloud-based application lifecycle management (ALM) solution helps \ntrack and manage the needs of customers of cloud solutions from SAP.    \nhttps://news.sap.com/2020/05/sap-cloud-alm-enhances-support-for-cloud-based-solutions/ \nAs a result of the update, SAP Cloud ALM will support additional SAP \nsolutions – including SAP S/4HANA Cloud, SAP SuccessFactors solutions, \nSAP Customer Experience solutions, and SAP Ariba solutions. SAP Cloud \nALM was redesigned with improved capabilities to simplify the \nimplementation and operations experience as more customers move to the \ncloud. \n\"As the cloud landscape advances and cloud solutions become more important, it's critical to continuously \nupdate SAP Cloud ALM to meet expectations of a cloud customer mindset,\" said Marc Thier, SVP of \nApplication Lifecycle Management, SAP. \"Over the last year and a half, we've focused on simplicity and \nevolving SAP Cloud ALM so the platform can be used by business and IT roles with no need for technical \nknowledge.\" \nSAP Cloud ALM benefits customers during various innovation cycles, including: \n• Easy deployment for companies that choose SAP S/4HANA Cloud and SAP \nSuccessFactors solutions: SAP Cloud ALM helps with team onboarding and fit-to-\nstandard workshops for configuring the customer's cloud solution. It tracks project progress \nby guiding customers through the implementation process and reports project status \nautomatically. \n• Integration for customers who use more than one cloud service: When managing \nmultiple cloud services – such as SAP S/4HANA Cloud, SAP SuccessFactors solutions, or \nSAP BTP Integration Suite – customers must monitor the integration themselves, a process \nwhich SAP Cloud ALM can help them manage. \n• Outlook for managing hybrid solutions: Customers adopting the Intelligent Enterprise \nwill see increased support for on-premise solutions like SAP S/4HANA. Monitoring the \nintegration of on-premise or other cloud products is an additional discipline SAP Cloud ALM \nwill focus on in the future. \nCustomers who subscribe to a cloud service from SAP that includes SAP Enterprise Support cloud editions \nhave access to SAP Cloud ALM at no additional cost. [Update 2022: Enterprise Support customers are entitled \nnow, too] \nSAP is dedicated to simplifying and improving users' journeys to cloud-based solutions and supporting \ncompanies of all sizes in their goal of digital transformation. In extending full ALM support, the current update \nto SAP Cloud ALM takes an important step toward a more agile, innovative future. \nRead more about SAP Cloud ALM\n\nPage 17:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 17 of 66 \n \n3 Powered by CALM \nPowered by SAP Cloud ALM is a new branding for onboarding new use cases on the SAP Cloud \nALM platform. We open our CALM platform to make integration and delivery easy for all development \nteams of SAP (so not only CXS). By this reuse we can simplify customer experience and offer all-in-\none services under SAP Cloud ALM. This is the target of Powered by CALM  is enabling any \norganization inside SAP to be part of one (or more) of the three delivery channels that are \nPowered by SAP Cloud ALM. In combination, the channels simplify the user experience (for SAP \nand Customers). \nThree examples, one for each channel that we offer, are: \n1. PALM: We target the broad adoption of SAP Cloud ALM (CALM) and continue to serve \nour customers who have not yet onboarded and started their SAP Cloud ALM journey. \nWe solve this challenge by extending our platform to a new SaaS solution \nnamed Public ALM (PALM). Our paved road approach helps to onboard scenario \nowners to Public ALM, which is then accessible by our customers' Universal ID through \nSAP for Me. Process Navigator by SAP (formerly known as Best Practice Explorer), \nReadiness Check, Roadmap Viewer, and Fiori App Library are the first use cases on \nthe Public ALM infrastructure. Those scenarios offer an easy entry point for customers \nand will guide them finally to onboard to a full CALM tenant: \n2. CALM: SAP Business Transformation Center (BTC) gets part of the CALM delivery \nchannel. BTC customers will benefit from seamless integration with CBuild \nimplementation project capabilities. So, the business and data transformation/migration \nfrom i.e., ECC to S/4HANA can be simplified based on Powered by SAP Cloud ALM. \nOur customers will benefit from seamless implementation project capabilities to plan and \nrealize their data transfer from i.e., ECC to S/4HANA. \nReadiness Check and Roadmap Viewer join beside PALM also CALM, reusing the \nmicroservice for both channels. Onboarding Content Framework from the S/4 HANA team \nwill join CALM and integrate with the SAP Cloud ALM implementation project to guide the \ncustomer with streamlined UX focusing on SME (small and medium-sized) customers. \n3. XALM: Service Delivery for SAP employees serves via one cross-Cloud ALM (X-ALM) \ntenant for all SAP-internal stakeholders from Premium Engagement, Preferred \nSuccess, and Enterprise Support, who digitize, develop, and deliver services to all SAP \ncustomers. The XALM tenant can collaborate with the customer users in the many \nCALM tenants using event-based communication (seamless between the microservices, \nacross customer tenants, and even across data centers). This can be used to centrally \nmanage/author SAP content in XALM and then distribute the content to all customers in \nCALM/PALM (content is distributed).  \nSeveral microservices that are used for XALM are also used in the CALM delivery \nchannel, for instance, Service Delivery WorkCentre. – and all integrate with task \nmanagement that was initially created as a CALM-Build microservice. \nAs PALM, CALM, and XALM are built on the same platform, all teams benefit from the same proven \nengineering principles, daily delivery, tools, and simplified processes that we invented for CALM - in \nshort, The Paved Road Approach . On top of being based on one standardized infrastructure and  \nreuse services, the integration of scenarios across and within PALM, CALM, and XALM is simplified. \nIn sum, \"Powered by SAP Cloud ALM\" is more than its parts. All teams across SAP are welcome \nto contribute application lifecycle-related capabilities. The Paved Road approach enables teams \nto deliver innovation continuously and sustainably.\n\nPage 18:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 18 of 66 \n \n \nFigure 7 – Powered by SAP Cloud ALM Building blocks \nThe picture above shows significant building blocks and layers that constitute Powered by SAP \nCloud ALM concept/branding.  \n \nIf a use-case should join PALM, CALM, XALM, or a combination of these, needs some \nexplanation: \n1. Integration with PALM: External teams often join from the SAP for Me sphere, \nneeding a replacement for NEO or ABAP-based backend implementations. The teams \nlook for ways to implement business logic in the cloud (Java/Node.js) and use HANA-\nbased persistence. They need a reliable, fast, flexible delivery process and operations \nmodel. \nHence, the likely starting point for them would be PALM. However, Powered by CALM \nisn't limited to PALM. The microservices developed for PALM can also run in CALM \nand XALM after minor adaptations that usually do not need a fork of services/repos \n(e.g. can work with operation/configuration toggles). \nCheck the PALM wiki page for more details.  \nMost applications that start in PALM will also want to join the CALM delivery channel: \n2. RECOMMENDATION: Direct integration with CALM delivery channel: The teams \ncan join CALM directly without integrating with PALM (For example, the CLM Customer \nLandscape App). \nWe target to guide all customers to their CALM tenant with the benefits of deep \nlandscape integration and a broader user base (not just restricted to ~500k S-Users \nworldwide). In most cases, apps in PALM will have a considerable benefit when \ndeployed to CALM with a much deeper integration into the customer processes. We \naim to have the most customers in CALM in the next few years (all relevant 74.000 \ncustomers are entitled already!). Reusing code/microservices across PALM and CALM \ncan mostly work (the main challenge will be the different user base and, hence, \nauthorization checks and the weaker data separation/security situation caused by the \nshared cross-customer-account setup of PALM that is inherited by SAP for Me). \nHowever, it is still an additional effort to operate and test. Therefore, a business \ndecision is made case-by-case if a PALM deployment in addition to CALM makes \nsense. In many cases, a focus on CALM can be the better approach. \n3. For scenarios that require collaboration between Customer and SAP, teams can \nleverage the combination of CALM and XALM (see the Service Delivery use case).\n\nPage 19:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 19 of 66 \n \n \n \nFigure 8 - Relation of SAP for Me, PALM, CALM and XALM. The diagram also shows the \ndifferent user bases (Universal ID / Customer IAS Tenant in CALM / SAP-internal IAS tenant) \n \nCo-Active Coaching to the Paved Road Approach \nCo-active means being in action together. SAP Cloud ALM's cloud native journey has been a success \nstory, continuously improving the solution and delivering stunning quality and innovation speed to \nbenefit SAP Cloud ALM customers. \nThe Paved Road Approach includes simplified processes, an agile toolset, and cloud engineering \nwith \"daily\" as the golden principle; defining the mantra of \"automate all you can automate\" reduces \nmanual toil for engineers, drives quality, and minimizes customer support tremendously, which then \nleaves time and capacity for continuous innovation. \nDetails and the latest updates on Powered by SAP Cloud ALM: https://wiki.one.int.sap/wiki/x/64zNug\n\nPage 20:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 20 of 66 \n \n4 Engineering Culture, Process, Tools \nThe SAP Cloud ALM Engineering Culture is based on Deploy with Confidence. An overview can be \nfound on the following slide: \n \nFigure 9 - Engineering Culture and Customer Experience \n \nDeploy with Confidence covers the whole process from Customer Requirement over build and test \nto Operation. DwC Documentation: https://dwc.tools.sap  \nTechnology is an enabler to solve problems, but it's people who truly solve problems. This aspect is \noften forgotten. DwC starts with the culture first, having three aspects: \nSingle Trunk (single code line): Eliminating long-living feature branches leads to massive \nsimplification in the development: You don't need double maintenance of the code. \nTest and integration of the new code into one SaaS application happens faster and helps to get \nimmediate feedback on the current state of the application.  As a result, we see a reduction in \ndevelopment complexity and, hence, costs. \nWhen following the single trunk approach, we have to hide incomplete functionality from customers \nbehind a feature toggle. Thus, we end up with the second principle: \nRelease feature toggles: Patches and features are delivered in one unique codeline. Hence, there \nmust be other ways than branches to control the visibility of functionality for the customer users. \nRelease-feature-toggles are the means to control software release efficiently in a cloud-native \nenvironment. \nDaily Delivery to Production: Let us assume you need to deliver a critical bugfix. Of course, you \nneed to be able to provide it as soon as possible, and the reason is that our customers expect this.  \nTherefore, the delivery is done at least daily (for urgent hotfixes, SAP Cloud ALM can deliver a\n\nPage 21:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 21 of 66 \n \nchange to production in 30 minutes, including end-to-end testing, deployment, and compliance). \nThis Daily principle drives the automation of testing and delivery activities. \nThese cultural principles have proven to be important success factors for companies like Google, \nNetflix, and Amazon. \n \nFigure 10 - Cloud Engineering Culture at SAP Cloud ALM \n \nThe feature delivery frequencies at SAP Cloud ALM \n \nFigure 11 - Feature delivery frequencies at SAP Cloud ALM\n\nPage 22:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 22 of 66 \n \n4.1 Single Trunk Delivery Model \nInto the single codeline, changes are frequently merged (\"merge-to-main\"). The visibility for customer \nusers (but also for testing) is controlled via release feature toggles. As the visibility of the changes \ncan be managed by toggles, the code can be released to production at any time. Hence, we do so as \nthis simplifies integration and lifecycle management processes. There is just one unified process for \nfeature delivery, bugfix, and hotfix needed. \n \nFigure 12 - Deploy with Confidence - Single Trunk and Daily Delivery \nA detailed explanation of how Single Trunk fosters continuous integration is provided by Martin Fowler \nat Continuous Integration (martinfowler.com). The article emphasizes the need to merge all changes \ninto the main branch often (at least daily). The daily delivery dashboard can be used to monitor how \nlong each commit takes to reach production. \n \nFigure 13 - Frequent merges to the main branch in DwC > Amalthea > Deliveries > Insights\n\nPage 23:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 23 of 66 \n \n4.2 Release Feature Toggles \nA Scrum Team (the PO usually) can decide to deliver functionality into production at any time (given \nall product standards are checked automatically and automated tests assure stability).  \nMaking the new functionality visible to all customers might need to be done in a consolidated w ay \n(Training effort, rollout, etc.). Details: https://martinfowler.com/articles/feature-toggles.html \nThat will also depend on the type of change you do. For E.g., a performance improvement can be \nactivated immediately from a Release-Management perspective. \nThe DwC Feature Cockpit helps to keep an overview of the toggles: Feature Toggles - Amalthea\n\nPage 24:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 24 of 66 \n \n4.3 Daily Delivery to Production \nThings you do more often create less stress than things you do only occasionally. \nOnly daily (or more often) delivery to production brings teams into a continuous, sustainable change \nmode. Teams will use their engineering skills to automate the process. \n \nFigure 14 - Why daily? Big waterfall | small waterfall | no waterfall \n \nOur Mission: Build Great Software Faster. \nWhy build faster at all? Answer: Because our customers expect that from us! \nBy fast, we do not mean the number of lines of code that are produced by the engineering team. \nAnd we also do not mean the number of features. These absolute numbers can be measured \neasily, but they do not provide any information about the value for our customers. We focus on the \nspeed of the feedback loop with the customer and the users because this feedback loop allows us \nto measure the value. That measurement is challenging, but the prerequisite is making a service \navailable to users. Once users can consume a service, usage measurements, net-promoter scores, \ninterviews about the experience, and more can be done. If a feature is implemented but not \ndelivered, there can be no value and no feedback! \n \nGrowing the SaaS solution daily – The Solution Vector Concept \nWhen the customer SaaS solution is updated daily, one needs a very robust update mechanism \nwith real zero downtime for the customer end users. There shall be no impact on any user session \non the update! This can only be achieved by being able to operate the old version and the new \n(daily delivered) version in parallel for some time (lifetime of user sessions) \nWhen a daily delivery is done for the day, the previous version is still active for end-users. In parallel \nto the day-1 version, the new one is deployed and tested. Tenant Lifecycle activities like database \nschema updates are performed. Once all is set, new user sessions can log in to the new version. \nThe new version is most likely slightly larger in code and feature set (feature toggles!). Only new\n\nPage 25:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 25 of 66 \n \nuser sessions will see that new functionality, including consistent switching of documentation, \nauthorizations, etc.  \nWe call the combination of toggle set, microservice versions, documentation, etc., a solution vector. \n \nThe Confidence in Deploy with Confidence is about the Interface Compatibility between the \nMicroservices, their UI, and Database: Only complete Vectors and no Intermediate States need to \nbe regarded (Exponential Test Complexity otherwise!) (External APIs must be compatible, no \nchange here! > Versioned) \nGoogle: \"There is no compatible change. There is only change! And every change can break \nsomething. Correctness is an illusion. Relevant is fitness for release.\" \n \n \n4.4 Feature-Driven Development Process \nBased on the cultural values, a cloud-native feature delivery process is defined.  \n• It starts with the definition of a feature.  \n• The features are developed behind a feature toggle and in a single codeline.  \n• Fast and compliant build pipelines are very important to achieve daily delivery.  \n• Fully automated end-to-end tests validate correctness from the customer's perspective. \n• We activate features when we are ready and when it's best for the customers, no stress. \nQuality first. \n• After the features are activated, we can measure the usage and success of the feature and  the \nvalue that the feature delivers for the customer. \nAll project members, including developers  (\"engineers\"), product owners, quality engineers, user \nassistants, and so on, are involved in the feature-driven development process.\n\nPage 26:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 26 of 66 \n \n \nFigure 15 – Feature-Driven Development Process of SAP Cloud ALM at DwC \n \nAs the process is essential to understand, here is a diagram with more details: \n \n \nFigure 16 - Feature-Driven Development Process of SAP Cloud ALM at DwC - Details\n\nPage 27:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 27 of 66 \n \n4.5 Feature-Driven Development Process at SAP Cloud ALM  \nBased on the templates co -developed by DwC and CALM, SAP Cloud ALM has the following \nlandscape setup for the daily delivery process. \n \nFigure 17 - Deploy with Confidence - CALM Landscape Setup \nMore info on CALM@DwC Landscape Setup at https://wiki.one.int.sap/wiki/x/p02-fw  \n \nThe feature delivery process at SAP Cloud ALM as a step-by-step guide: \n \nFigure 18 - Step-by-Step Guide for Feature Delivery  \nProcess details: https://wiki.one.int.sap/wiki/x/p16Ti\n\nPage 28:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 28 of 66 \n \n4.6 Daily Delivery Process for CALM Engineers \nThere is a training session for new teams at SAP Cloud ALM: \nDaily delivery Together: https://wiki.one.int.sap/wiki/x/DmSngw  \nThe session can be provided by the delivery team and shows how all engineers should work together \nfor high-quality and smooth delivery. \nThe promotion from development to production can be followed live via the Grafana Delivery \nDashboard: \n \n \nFigure 19 - Promotion Flow of PALM, CALM, and XALM.  \nCommunication between engineers and delivery team: Follow Slack channel #sap-calm-delivery \n \n4.7 Engineering View on Tools for Delivery \nDevelopers will work on their microservice GitHub repos. At SAP Cloud ALM , engineers can use \nVisual Studio Code, SAP Business Application Studio, Eclipse, or IntelliJ. \nStep 1: When a change of the microservice is ready from the developer's perspective, this change \ncan be merged to the main branch : The single trunk / main branch is updated. This should \nhappen at least once a day  to avoid big -bang merges, merge conflicts, long -living feature \nbranches, and hidden code. \nStep 2: The merge will trigger the component build pipeline. Any build tool that can do SAP-compliant \nbuilds (e.g. , xMake, including artifact upload to Nexus)  can be used . SAP Cloud ALM  \npipelines include many more steps for test automation, etc. These are independent of DwC.  \nCALM uses Piper general-purpose pipelines as  templates and optimizes them for \nperformance and throughput. Several JaaS instances exist: SERVICE  CBUILD  BTC  CRUN \nStep 3: One of the last steps in the pipeline is to inform the Deploy with Confidence infrastructure \nabout the successful build. This step will trigger the Deployment and Activation of the new \nmicroservice version within the SaaS landscape. \nStep 4: The pipeline trigger is received by Themisto, and it is evaluated where (in which stages and \nspaces) the new version needs to be available . Themisto is also called \"the brain\" behind \nDwC, as Themisto is responsible for calculating and triggering all needed landscape \nchanges. For instance , Themisto informs Autonoe about the required changes  and (not \ndepicted) also triggers a database schema lifecycle component called Euporie.\n\nPage 29:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 29 of 66 \n \nStep 5: Autonoe takes care that the needed deployments (e.g. , via MTA Deploy), unemployments, \nand routes are configured in SAP BTP Cloud Foundry. Cloud Foundry applications are \noperated in different spaces to separate DEV/TEST/PROD from each other ( significant for \nauthorization management - not every Engineer should have access to productive customer \ndata). \nStep 6: Once all deployments are done, Themisto gets the trigger to inform Jupiter about the new \nLandscape vector that can be used by SaaS users. Jupiter is an extended Application router \nthat takes care to authenticate users and route access to the relevant apps in the appropriate \nspaces. \nStep 7: SAP Engineering can configure and control this flow with a visualization tool called Amalthea: \nhttps://dashboard.dwc.tools.sap/org/CALM/landscape/overview  \nThe following figure shows the process across the DwC architecture. The image includes Cloud \nFoundry deployment. Deployment to Kubernetes is possible as well. \n \n \nFigure 20 - DwC Architecture, Runtime, and Design Time \nDetails about the Mechanics with Vectors, Routing, Deployments, etc.: \nhttps://wiki.one.int.sap/wiki/x/Gal-hQ  \n \nAnother view on DwC and CALM Architecture is in a public blog: \nhttps://blogs.sap.com/2020/06/15/quality-innovations-at-sap-cloud-alm/\n\nPage 30:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 30 of 66 \n \n4.8 Tools for DevOps Monitoring \nThere is a Grafana Dashboard providing several KPIs and links to the various monitoring-related tools \n \nFigure 21 - Engineering Dashboard of SAP Cloud ALM - Grafana \nFor colleagues new to CALM, make sure you tried out the link s, at least the ones indicated with the \nyellow star icon. There, you can also learn how to get access to the tools, etc. \nThe wiki page https://wiki.one.int.sap/wiki/x/9pO6jg provides some screenshots as a fast overview of \nwhat data we can see in what tool. \n \n4.9 Carpe Diem – Our DevOps Model \nOur DevOps culture contains four key aspects: \n1. Live Site First \nThe imperative for the whole organization – including management: If the live site is down (or \nrelated processes, like daily patch delivery, are blocked), there is no other activity more \nimportant than bringing the service back up. \n \n2. Shepherd Your Change \nAs the developer of a feature, you are responsible for getting your feature to production, \nincluding delivery and operations. \n \n3. Automation Is Key \nManual processes are error-prone, slow, and do not scale. Automation in testing, deployment, \nand operations is critical for a cloud service at a competitive cost. \n \n4. Measure and Learn \nDeliver often and learn from it. Constantly collect and proactively analyze metrics to gain \ninsights for the future backlog.\n\nPage 31:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 31 of 66 \n \nThese are sometimes too abstract rules. So, we have details of how exactly every CALM Engineer \ncan support these values. The rules are documented in  \nGuidance for CALM Engineering - Engineering Excellence by Continuous Delivery to Production, \nDaily \nRules include: \n1. Care for CALM. We are all one SaaS solution. Act with care for the overall solution. Contribute \nas a multiplier. Support the Carpe Diem Process. \n2. Support the Daily Delivery - Monday to Thursday 08:20 - 10:00 CET a Level of Stability is \nRequired \n3. Merge your branches to the main branch often. \n4. Keep your component build pipeline green! \n \nAs rules alone are not enough, we established an entity taking care of CALM: The Carpe Diem team \n \nDaily life in a live cloud-native environment creates daily opportunities but also daily \nchallenges. To simplify the lives of our Cloud Native Engineers and increase transparency and \ncollaboration, we will combine automation, daily checks, best practices, and a we-all-care-\ntogether mindset. We all will be working together as ONE team globally and taking care of \neach other – cross-location and cross-time zone – to ensure a smooth start of the business day \n– no matter where and when.  \n– Carpe Diem! \n \nOur wiki describes how the Carpe Diem team, the Manager on Duty (MoD), and the Scrum \nteam on Duty (SToD) work: https://wiki.one.int.sap/wiki/x/Y5V8hw\n\nPage 32:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 32 of 66 \n \n5 Architecture Guiding Principles \nThis chapter lists the guiding principles for CALM architecture. Whenever we make architectural \ndecisions, we validate the decision options against these principles. \nBased on these principles, many small and large architectural and design decisions are made. Many \nof these decisions can be found in this ACD.  \nAs we are in a dynamically changing environment, we use Architecture Decision Records (ADRs) to \ndocument decisions that are not inside this ACD.  \nCALM ADRs: https://wiki.one.int.sap/wiki/x/-CHdtw  \n \n1. We do Software Engineering \nWe do Software Engineering: Programming a scaling product by many humans over time! \n \nTime \nFor the life span of the product, we must be able to change all aspects. CALM is there to last for \nmany years and decades, as the customer need for lifecycle support will likely not end. Hence, \nCALM architecture and processes must be planned accordingly to be sustainable and changeable. \nWe do not provide just a PoC or Beta. We provide continuous, infinite innovation. \n \n \n \nFor CALM, we decided on Software Engineering, hence the infinite game! Thanks, Simon Sinek, for \nformulating that!  \nWe invest enough time into your culture, processes, and tools to enable your services to grow and \nevolve! For instance, Daily Delivery guides us here. Can we deliver Daily efficiently  now and in the \nfuture? If not, we invest in time.  \n \nScale \nSupporting all customer segmentations and sizes in all regions, 5-digit number of accounts \nThis support requires sub-linear scaling for any activity, especially human activity. \n \nProviding a scaling product over time is our core target and principle.  All other principles can be \nmapped back to these core principles.\n\nPage 33:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 33 of 66 \n \n2. Shift Left Principle \n \nShifting left means doing any quality-related activity as early as possible in the development process. \nAs the earlier issues are found, the easier it is to fix them or even automatically avoid that they happen \nin the first place. The earlier you can do a test (in the diagram left), the more efficient it becomes in \nthe long term. That's why it is called shift left.  \nThis finally brings scale as manual checks and operations can be avoided. \n3. Suite of Microservices  \nApplications SHALL be organized in microservices built around business capabilities; \ncommunicate mostly asynchronous, stateless, and scalable. \n \nCALM is designed as a suite of microservices. Microservice guiding principles: \n• Each service has a separate persistency that is usually not shared with other services \n(resilience, decoupling, etc.). \n• During runtime , the microservices are independent of the availability of the other \nmicroservices; communication is done via synchronous APIs and (preferred) asynchronous \nmessages (events based on Kafka infrastructure). \n• Communication from a UI SHOULD usually only need one \"hop\". Avoid synchronous \ndependencies between microservices (resilience – if a consumed service is down, avoid that \nthe calling service is not available, performance) \n• Favor asynchronous, message-driven communication patterns ( benefits are a flexible \nprocess flow, components can be exchanged, and decoupling) \nNote that there are still software lifecycle dependencies between the microservices. And since \nasynchronous communication might take some time (in worst-case scenarios, where related service \nhas an unplanned downtime), these dependencies are living even longer  than in synchronous \nscenarios.  \nExample: There is a new text field in the Notification service that can be maintained by customers \nvia the Customer UI5 app. The text field is stored in the Product Management service. Already by \nthis simple example, these services (although decoupled from a runtime perspective) get very much \nrelated on a semantical level: Only if the field is available in the notification and product service  then \nthe field should be offered to the customer (otherwise, a user would enter that field, but it cannot be \nhandled consistently). \nThis advanced dependency handling is supported by Deploy with Confidence. \nSAP Cloud ALM microservices are reviewed by the architecture board. The review process \nand list of microservices can be found at: https://wiki.one.int.sap/wiki/x/QNxxiQ\n\nPage 34:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 34 of 66 \n \n4. Domain Driven Design and API-First Methodology \nAPI first, Modeled Microservices and aligned Domain Models as best practices \nThis means APIs must be kept stable. \nWe strive for an aligned domain model for every development. \nSAP Cloud ALM adopts the Domain Driven Design approach to understand and design domains and \nbounded contexts. This is a prerequisite for us before the development design and implementation \nphases can start.  \nAn API-first approach means that for any given development project, your APIs are treated as \"first-\nclass citizens.\" Everything about a project revolves around the idea that the product and, hence, APIs \nwill be consumed by client applications. An API -first approach involves developing APIs that are \nconsistent and reusable, which can be accomplished by using an  API description language  to \nestablish a contract for how the API is supposed to behave.  Establishing a contract involves spending \nmore time thinking about the design of an API. It also often involves additional planning and \ncollaboration with the stakeholders , providing feedback on the design of an API before any code is \nwritten. \nPublic CALM APIs have already been released in the SAP API Business Hub. API Roadmap. \n \nSAP Open Connectors can be utilized to connect SAP Cloud ALM. Open Connector is a component \nof the SAP Integration Suite , which helps to interface various SAP and non -SAP products quickly. \nSAP Open Connectors comes with a large catalog of pre-built connectors, including JIRA. An example \nintegration of SAP Cloud ALM with Jira is described in this blog. \nDomain Driven Design approach and API-first methodology are detailed in the wiki page: \nhttps://wiki.wdf.sap.corp/wiki/x/dsj6q\n\nPage 35:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 35 of 66 \n \n5. Testability \nChoose architecture decisions that support good test coverage and simplify the setup of tests. \nFor example, we use the subscription model with the capability to have many independent test and \ndemo tenants for our end-to-end tests in CALM. To make that work, we use schema separation per \ncustomer per domain (only exceptionally shared schemas across tenants are allowed). \nTestability is relevant for the complete technology stack and on all layers of the test pyramid. \n \nDetails see  \n• E2E Test Wiki: https://wiki.wdf.sap.corp/wiki/x/JPWJhw  \n• Cloud Quality wiki: https://wiki.wdf.sap.corp/wiki/x/Vwime  \n \n6. Secure by Default \nSecure by Default: Built-in security is recognized as a key challenge. - No compromises!  \nWe got the feedback from Hacker Simulation: \"We see security is already from a concept point of \nview designed into the solution\". This is what we head for and want to keep! \nTechnically, Legally, and Trust-wise, we need to ensure that customers can accept our architecture \nand the risks.  \nWe follow the Secure Software Development and Operations Lifecycle: SDOL \n \n \n7. Simplicity for Customer \nA seamless, easy onboarding experience is needed. → We go the last mile (if needed, also for \nother groups at SAP). For instance, CALM has its own automated onboarding process. For details, \nsee Chapter 6.16\n\nPage 36:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 36 of 66 \n \n8. Works aligned with SAP technology guidelines \nSAP Cloud ALM is embedded in the end-to-end Technology Guidelines as an orchestration layer: \n \nFigure 22 – Technology Guideline: Overall Architecture Diagram of ALM cluster \nSee Sharepoint for a better resolution of the diagram \nDetail description of the technology guidelines: \nhttps://github.tools.sap/CentralEngineering/TechnologyGuidelines/blob/latest/tg31/README.md \n \n9. Consistent Architecture across Areas \nConsistent architecture across markets is an asset.  \nSimilar things SHOULD be done the same way across the markets.  \nWe align and decide together (Identity, Launchpad, Landscape, Connectivity, Messaging/Eventing, \nOnboarding, Commercialization Model, etc.) \n \n10. TCO \nTCO is our TCO!  \nDecisions must lead to the lowest possible infrastructure costs for customers and SAP. \nWe carefully monitor the TCO of SAP Cloud ALM and take active measures to optimize. Especially \nwith many tenants, we target a low TCO per tenant. The following diagram shows the current \nextrapolated cost per tenant when the number of tenants grows.\n\nPage 37:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 37 of 66 \n \nThe main cost drivers are HANA Memory and cloud foundry application runtime. SAP Cloud ALM \nmonitors the consumption and costs thoroughly. TCO Dashboard: \nhttps://internal-dashboards.qod.cxs.only.sap/d/iygGLzAMk/tenant-monthly-shared-cost-estimation?orgId=1  \n \n \nFigure 23 - Infrastructure Costs Dashboard for SAP Cloud ALM (2022-03-02) \n \n \nFigure 24 - Infrastructure Costs Dashboard for SAP Cloud ALM (2023-02-15) \n \nDetails: See TCO considerations for SAP Cloud ALM in the wiki: \nhttps://wiki.one.int.sap/wiki/x/VvH7jg\n\nPage 38:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 38 of 66 \n \n11. Use the most appropriate toolset \n \nUse the most appropriate toolset for the job, adapt the architecture \n \nA default architecture path is defined in this ACD. \nTeams can use different than the established technologies (since we use microservices, that is, in \nprinciple, possible). BUT maintenance, integration, and onboarding must be covered by the teams - \nwith proper TCO/TCD.  \nRemain flexible of the Technology Stack: Consider frameworks that provide flexibility \nregarding the underlying technology stack. Avoid vendor lock-ins. \n \nSignificant architecture decisions MUST be reviewed by the CXS Architecture board,\n\nPage 39:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 39 of 66 \n \n6 Architecture Decisions  \nThis chapter lists architecture and organizational decisions for SAP Cloud ALM.  \nBesides the basic decisions in this ACD document, you can find further decisions in our Architecture \nDecision Records (ADRs) at: https://wiki.one.int.sap/wiki/x/-CHdtw  \nOver time, we will streamline the decisions documented in this ACD and move more details to the \nADRs.  \n \nDesign decisions can be grouped based on the layer they influence: \n \nThe following table summarizes the main technology stack decisions. \nArchitecture Area Layer Technologies to be Used \nCloud Development \nStack \nCross Built-on SAP Business Technology Platform – Cloud Foundry \nenvironment \nDevelopment \nEnvironment \nCross Visual Studio Code, Eclipse, SAP Business Application Studio \nLifecycle \nManagement \nCross GitHub, Piper-based pipelines executed on JaaS. Deploy with \nConfidence for Daily Deployment \nClients Front End HTML 5 Clients (modern web browsers) \nPresentation Layer / \nUser Interface \nFront End SAP UI5 (Java Script), Fiori for Tools (CRUN), Fiori (Service and \nCBuild); CDM Fiori Launchpad as a central entry point. \nBusiness Logic \nLayer \nBusiness \nLogic \n• Cloud Application Programming Model (CAP)  \nHANA CDS Views with OData Services on Top, Java Applications \nbased on CAP.  \nJava Spring Boot to extend CAP  \n• Node.js for Service Delivery Cloud was discussed as a valid option. \nBut not chosen (surrounding teams were trained in Java already). \n• Reuse SAP Cloud SDK and Programming Guidance \nOther models need approval from the CXS Architecture Board. \nData Persistency Persistency • Default: HANA Cloud:  HANA with HDI container as data separation; \nBe careful with costs (1GB HANA is 10 up to 30 € / month).  \nThe recommendation is to stick to CAP/CDS (as much as possible, \nwithout introducing HANA-dependent SQL) to allow database-\nindependent design time. \n• SAP BTP Document Management Service (MongoDB) for large \nBlobs like attachments\n\nPage 40:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 40 of 66 \n \nIntegration \nMiddleware  \nConnectivity • BTP Kafka for asynchronous / Event Based communication  \n• between our microservice (service-to-service inside the mesh) \n• between our data centers (service-to-service across our \nmeshes) \n• between Cloud-LoBs & CALM \n• Jupiter Router for provisioning of external (synchronous) API. \nJupiter has a cheap way to secure, measure, meter, etc. APIs can \nbe published in SAP API Hub. (SAP API Management was not \nchosen due to weak integration with DwC, additional complexity \n(negative impact on resilience), and costs; documented in ADR) \n• For asynchronous communication with CALM outside world, \nBusiness Event Bus/Event Mesh (TG27) plays a role in connecting \nwith Business Systems. However, scalability and functional gaps are \nhuge. So, this event technology cannot be used for technical \nintegration communication as needed for Integration Monitoring, \nProcess Monitoring, etc. \nSo, we invented our own Kafka-based solution to connect managed \ntenants with CALM using the app-to-app integration pattern. Kafka \nallows scaling, buffering, and potentially logging (Event log \nArchitecture!) incoming and outgoing asynchronous messages. \nNote: We strive for an event-based, asynchronous microservice \narchitecture. Ideally, synchronous communication between \nmicroservices is to be avoided.  \nAsynchronous replication of data is an accepted pattern in case it \nsupports decoupling of the services \nReuse Tools and \nGuidance \nCross https://wiki.wdf.sap.corp/wiki/x/H1W4eQ \nprovides details on application logging, performance measurement, test \nautomation, metering, security, scalability, analytics, Workflow, etc. \nBTP Reuse Service \nusage \n The current list can be found at https://wiki.wdf.sap.corp/wiki/x/8mBTg  \n \n \nThe following sub-chapters describe several of these decisions in more detail.\n\nPage 41:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 41 of 66 \n \n6.1 Data Persistency: HANA Cloud as Default \nThe recommendation for \"Build-on SAP BTP\" products is to use HANA as the default database. We \nfollow this use-HANA guidance in SAP Cloud ALM Build, Run , and Cloud Service Delivery . HANA \nCloud is used for OLAP and OLTP-based data. \nLarge unstructured data BLOBs like attachments SHOULD NOT be saved into the HANA database \nbut into the SAP BTP document management service. \nCDS Views/annotations are recommended to be used as an abstraction layer on top of HANA.  So, \nwe are more flexible in case a move to another database is needed or to enable local testing with a \ndatabase mock.  HANA-stored procedures can be used in case CDS modeling is not advanced \nenough. \n6.2 Data Separation in Customer Subscription Model  \nIn SAP Cloud ALM , data separation is implemented by using different database schemas per \ncustomer and domain. CALM uses the recommended tenancy model of Schema Separation (=HDI \nContainer). See the architecture decision record at https://wiki.one.int.sap/wiki/x/MdOfuQ.  \nThe HANA service manager is used to create the corresponding HDI container automatically, \norchestrated by DwC. \nFor customer business data, schema separation (or HDI separation) SHALL be used. \n \nFigure 25 - Subscription Model with HDI Container - Simplified \nTo ensure resilience, we decided to have a separate HDI container per customer per domain. A \ndomain in this context is a set of logically bundled microservices (e.g., task management, change \nmanagement, integration monitoring, etc.). How the domains are modeled in detail is subject to the \nSoftware Design Documents of the corresponding areas. \nHDI stands for Hana Deployment Infrastructure and indicates that there is a bit more behind it than \njust a database schema. \n \nThe following figure shows the subscription, HANA Instance, and HDI container handling in more \ndetail.\n\nPage 42:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 42 of 66 \n \n \nFigure 26 - Subscription Model with HDI Container – Detail (Visio) \nA. Each customer has their own separate global account for SAP Cloud ALM and subscribes \nto SAP Cloud ALM into (usually one) sub-account. \nFor simplification reasons, just three single customer accounts (Customer A, B, C) and \nCALM Subscription are depicted here. \nB. Customers have multiple options for identity provider assignment. A corporate IDP can be \nreused, or a separate BTP IDP can be provided (the latter is not depicted in the diagram). \nC. SAP can have multiple demo accounts, too. Besides doing demos, this can be used for \ntesting purposes and for support reasons (reproducing errors of customer accounts) \nD. All functionality is provided by the SAP CXS Provider Account. Resources like CPU, \nMemory, and persistence are provided centrally, too. The customer accounts do not need \ntheir own runtime quota. \nE. All CXS applications are subscribed as one bundle (no individual selection of sub-services), \nF. Data Separation by HDI container per Subscription-Tenant and Application area. \nThe colored boxes on the right with the title \"HANA\" in the Provider Account illustrate the \nHDI container, which is created as a consequence of the subscription process.  \na. Each SAP HANA database instance is created manually by SAP in the provider account. \nb. The size of an existing DB instance can be increased over time. \nc. New DB instances can be created by the CALM Operations team to put new customers in \nseparate DB instances.  \nG. Very restricted SAP user access  to the provider account (only for Update/Upgrade and in \nemergency cases…) \nH. Data Exchange with the CXS Service and Support Data Lake. The Data Lake gets data from \nCALM Tenants, XALM, and any SAP Backbone infrastructure like Service Provider Cockpit \n(SPC),\n\nPage 43:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 43 of 66 \n \nThe diagram shows how much focus we spend to keep the customers and their data separated as \nmuch as possible – at a reasonable cost. \nReuse services like Workflow, etc.  SHALL  be checked not to violate that level of separation . The \nassumption is that all BTP reuse services are multi -tenant aware and provide the proper level of \nisolation. \n6.3 Subscription Model \nThe customer consumes SAP Cloud ALM exclusively per subscription. There will be no software \ndeployment into any customer account. Th e license materials must be assigned to the global \naccounts of the customer-owned SAP BTP Sub-Accounts so that the software can be subscribed to. \nThe complete costs are accumulated in the global provider account operated by SAP CXS.  \nTo better understand the BTP Subscription model, some introduction to the BTP Domain Model is \nhelpful:\n \nFigure 27 – SAP BTP Domain Model\n\nPage 44:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 44 of 66 \n \n \nFigure 28 – SAP BTP subaccounts and subscription from provider account \n \n \nFigure 29 - Subscription Model (details see Jam) \n \n6.4 CALM@DwC Account Setup \nUse the Amalthea Cockpit to check the different sub-accounts and spaces that are set up for CALM: \nhttps://dashboard.dwc.tools.sap/org/CALM/landscape/overview  \nCALM follows the standard recommendations of DwC for account setup.\n\nPage 45:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 45 of 66 \n \n6.5 XALM - Cross Customer SAP Cloud ALM \nDetails: https://wiki.wdf.sap.corp/wiki/x/lTz_nQ  \nCALM is an external customer-facing solution; all applications and features are available for all \ncustomers' tenants. \nThere are use cases where SAP-internal facing tenant(s) must be supported. SAP employees \nneed to access SAP-specific or internal tenants. Access to these applications and features must be \nprotected from external customers. And that access usually has the semantics to \nmanage ALL CALM customer tenants (across the various CALM data centers). Therefore, we \nconfigured XALM: XALM stands for Cross - X Cloud ALM. \n6.5.1 XALM Use Cases \nThere are several use cases from different SAP areas for cross-customer XALM accounts. Some of \nthe use cases are shown below. Major business requirements are from the Cloud Service Delivery \narea, where SAP consultants deliver services based on check procedures and service definitions \ncreated by service/content owners. Similarly , there are other areas where content is created, \nmanaged, and distributed to CALM customers. \nCALM Build \n▪ Standard business process content \nCALM Run \n▪ Health Monitoring authoring \nCALM Service \n▪ Service Asset Maintenance \n▪ Service Authoring \nCALM Cross \n▪ Project and Task management usage metrics extractors and SAP for Me Integration \n▪ Central Job Status Management \n▪ Cross Customer Analytics  \n▪ Machine Learning – integration with Data Lake \n6.5.2 BTP Space Setup for XALM \nThere is one shared ingress space for XALM and CALM in the EU20 data center (that will change \nonce DwC supports setting up Jupiter Instances per application CF space, then we will separate). \nThe spaces where the actual microservices are deployed are separated. So , XALM runs separated \nfrom CALM even though both are deployed in the same DC. The reason is that we make sure that in \nthe EU20 data center, we already have a similar communication using external APIs like it is when \ncalling between EU10 and EU20.\n\nPage 46:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 46 of 66 \n \n \nFigure 30 - BTP Cloud-Foundry Space Setup for XALM and CALM in EU20 and EU10 \n \nIn Amalthea, the setup looks as depicted below: \n \nFigure 31 - CALM Landscape Setup in DwC \nThe different types of services (A / B /C) are a logical grouping of where our microservices are \ndeployed. Details are described in the next chapter.\n\nPage 47:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 47 of 66 \n \n6.5.3 XALM / CALM separation of features vie toggle  \nSince we need different feature toggle set configurations in XALM and CALM, we need separate \nlandscapes with different software vectors. XALM Provider account has been configured in EU20.   \nWe have the following types of microservices:  \n▪ Common in both internal and customer-facing scenarios \n▪ Specific to XALM (internal) \n▪ Specific to CALM (customer-facing) \nThis can be illustrated as shown below: \n \nA permanent feature toggle x_xalm_cross_customer_tenant has been created to protect XALM \nand CALM features for microservices that are deployed in XALM and CALM . The following table \nillustrates different deployment options:\n\nPage 48:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 48 of 66 \n \n6.5.4 Data Separation in XALM \nIn XALM, discriminator column data separation is allowed: Discriminator column data separation will \nbe used in the SAP account, where data of different customers are persisted. In this account, only \nSAP employees have access to the application. So, in one managed HDI container, data from \nmultiple customers is included. Still, per XALM tenant, one HDI container per domain is created. \n \nFigure 32 – XALM - Cross Customer account with Discriminator Column Data Separation \nArchitecture decision regarding tenant-specific HDI container model is documented in ADR: \nhttps://github.tools.sap/CALM/design/blob/master/adr/adr-0190-hdi-schema.md. \n \nThe diagram also shows the two ways to integrate XALM with the different CALM accounts:  \n1. Asynchronous communication via our Kafka -based cross-data center communication \ninfrastructure. This is the preferred way for integration for messages up to 0.5 MB. \n2. Synchronous calls using the DwC Internal API Users  (we use the X.509 compliant setup) . \nWe use this way only if asynchronous communication is not feasible.  \n \n6.5.5 Integration of XALM with CALM \nXALM's target persona is the SAP internal employee. Related persons can be from  the service \ndelivery organization  and admin users who perform cross -customer operations , monitoring, and \nfurther integration scenarios.  \nXALM is not an isolated application. Several integration and data replication scenarios exist with SAP \nCloud ALM, SAP backbone systems, SAP for Me, etc. The below picture shows XALM communication \nwith SAP Cloud ALM and SAP Backbone systems:\n\nPage 49:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 49 of 66 \n \n \nFigure 33 – High-level block diagram: Integration CALM, XALM, SAP Support Backbone \n \nThe below diagram shows the asynchronous Kafka-based Cross Datacenter Communication: \n \n \nFigure 34 - Cross Customer Account Integration (wiki) \nThe diagram also describes a new way to integrate with SAP Managed Cloud services: App2App. \nDetails: https://wiki.wdf.sap.corp/wiki/x/IaUzkg\n\nPage 50:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 50 of 66 \n \n \nFigure 35 - Integration CALM-XALM including data separation, subscription,… - Detail (Visio) \nI. Synchronous API calls: Customer subscription tenants can exchange data with the central \nXALM account. \nJ. The Central Services can access data from SAP Support Backbone.  \nPreferred is access via technical user provided centrally (no need to have customers \nmaintain s-users manually in their provider account). \nK. The central XALM account shall not be accessible by customer users for security reasons. \nWe separate customer-access use cases and SAP-internal user access. The main XALM \naccount with the cross-customer functionality of Service Delivery Cloud shall only be \naccessed by SAP users, like CSMs (Customer Success Managers) \nHere, SAP users see data that customer tenants actively push to SAP (customer needs to \nopt-in to send data).\n\nPage 51:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 51 of 66 \n \nL. Asynchronous messaging: Datacenter to datacenter exchange of events: Bi-directional Data \nExchange is possible via Kafka, e.g. , sending  a service result from the Service Delivery \ncentral XALM services to the customer account. \nM. The central services offer a cross-customer view by design. Therefore, in one HDI \ncontainer, there will be data of many customer CALM tenants (Discriminator Column data \nseparation). Still, we create for each XALM tenant an own HDI-container in XALM to allow \nan easy test- and demo account setup. \n \n \n6.5.6 Integration of XALM with SAP Support Backbone Systems \nIntegration of CALM with SAP support backbone systems is done via XALM tenants. From a security \npoint of view, we don't connect SAP support backbone systems directly to CALM tenants. \nThe service delivery center in XALM has integration with the ICP system, as shown below:  \n \nService result in XALM has integration to CBX system as shown below:\n\nPage 52:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 52 of 66 \n \n6.5.7 Integration of XALM with consumers like SAP for Me or Data Lake \nSome use cases require the central collection and storage of CALM data in XALM . This is, e.g., \nrequired to collect project data from the individual CALM tenants to provide the integration of this data \nin SAP for Me or to do benchmarking across all customers in the Service & Support data lake. \nTo collect the data , we make use of Cross Data Center (CDC) Communication. Each change  of \nproject data in the CA-ANA microservice will trigger an event to be sent to a dedicated Kafka message \nqueue, which will then be forwarded to XALM via the CDC distributor component. The CDC Router \ncomponent in XALM receives the message and puts it into the XALM Kafka inbound message queue. \nThe microservice x-metrics-collector gets this message, parses it , and persists it in the cross-\ncustomer HDI container, which is an HDI container per subscriber tenant model. On top, a REST API \nis created that can be consumed by SAP for Me or by the Data Lake using the service key. \n \nFigure 36 – x-metrics-collector architecture\n\nPage 53:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 53 of 66 \n \n6.6 PALM - Public ALM \nPublic ALM (PALM) is one of the building blocks of Powered by CALM. \nThere are use cases where a customer might not (yet) have their own SAP Cloud ALM tenant. A \nsignificant driver use case of PALM has been Process Navigator by SAP (formerly called SAP Best \nPractices Explorer). The main requirement consists of allowing S-users and P-users who are not \nnecessarily SAP Cloud ALM customer end users yet to access and navigate through various best \npractices and business processes offered by SAP. This requirement is also aligned with the \"off-\nNeo\" initiative. Another motivation of PALM is to provide an overview to S-users and P-users and \ngive a glimpse of the capabilities that they can get by subscribing to SAP Cloud ALM. Therefore, we \nconfigured PALM, where P stands for Public ALM.  \nToday, the SAP ONE Support Launchpad (in transition to SAP for Me) is positioned as a single-\nentry point for support of all the SAP Customers using S/C/D/I/(P) users (hence Universal ID). \nThe entry point (UI) of all service/support-related apps should migrate from SAP One Support \nLaunchpad to SAP for Me. More information about the transition can be found here | recording. \nTherefore, Public ALM will not be \"visible\" as a new product with its own launchpad to end users, \nbut PALM applications running in the PALM shell will be invoked by SAP for Me and displayed in an \niFrame. Several integration options between SAP for Me and PALM have been considered. The \ndecision to embed PALM applications in an iFrame in SAP for Me and not call them in a separate \nbrowser window has been documented in the ADR-0600. \nThe picture below shows where the SAP Process Navigator, an example of a PALM application, is \nplanned to be integrated with SAP for Me, mainly in the Services & Support area. \n \nFigure 37 - SAP for Me integration area for PALM applications \n \nThe header and the footer of the PALM shell are hidden. Other services like the Web Assistant, \nQualtrics, Search, and user settings will be triggered via the SAP for Me shell. Communication \nbetween the PALM application UI and the SAP for Me UI will happen via events. \n \nApplications that are deployed in CALM and in PALM need to implement the usage of certain \nfeatures (e.g., Web Assistant, Qualtrics, Search) twice. This is needed because the standard shell \nis used in CALM, whereas in SAP for Me, the applications run as iFrame within the SAP for Me \nshell. The applications use a permanent feature toggle to differentiate whether they are running in \nPALM or CALM. \n \nThe following picture shows the integration of the PALM applications into SAP for Me. The PALM \nshell uses a generic custom style sheet to run in the SAP for Me iFrame in a headerless mode. That\n\nPage 54:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 54 of 66 \n \nmeans that the header and footer of the PALM shell are hidden. SAP for Me and PALM use the \nSAP IDP (accounts.sap.com) for user authentication.  \nThe PALM shell is also responsible for collecting and submitting usage data via the usage data \ncollector microservice. Some generic KPIs like \"DB memory consumption\" and \"Clicks per UI \ncomponent\" are collected centrally by the usage data collector microservice. Application-specific \nKPIs can be collected by the PALM applications using the metering library.  \nOther services (like Qualtrics surveys, Search, or Web Assistant) that are included in the SAP for \nMe header bar can be called directly by the PALM applications. \n \n \nFigure 38 - SAP for Me integration area for PALM applications\n\nPage 55:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 55 of 66 \n \nShould I migrate to SAP for me or PALM/CALM? \nAs explained before, the user journey can start in SAP for Me. However , how to implement UI and \nBackend services differs. And one has the choice of implementing in SAP for Me directly or leveraging \nPALM/CALM. \nThe following table shows some criteria to help you make this decision. \nImplement on SAP for Me infrastructure  Implement on Powered by SAP Cloud ALM \n(PALM/CALM) \n• Tight UI integration with other SAP for Me use \ncases is planned. \n• From a call with Kristian about SAP for Me: \n• Display-Framework is the focus - \"SAP for \nMe component model to simplify end-user \naccess\" (SAP for Me team does not offer \nbackend business logic infrastructure; \nbusiness logic must be provided by the \nteams, based on existing backbone assets \n(like ABAP-based CB*, ABAP-based \nW7*, ODP, ...)) \n• SAP for Me is not meant as a general-\npurpose platform. SAP for Me focuses on \noData V4 + SAP UI5  (and basic Java \nbackend) + D3 for graphics    \n• For its own complex business \nlogic/backend, a team needs to handle its \nown accounts, delivery process, \nmonitoring/operation of HANA, etc.  \n• A clear business value for CALM  \n• Not the new platform for pure pre-sales \npositioning → That is SAP for Me \n• Entered data can easily integrate with \nCALM/XALM \n• Will not break Cloud Native Pattern (e.g., Data \nSeparation) \n• Improve development excellence (e.g., Daily) by \nDwC development culture. \n• Reduce operation costs by harmonizing on a \npaved road. \n• Continuous innovation culture/effort (no throw-\nover-the-fence after one year of development) \n• The need for strong data separation and \ncustomer-managed keys can be fulfilled in \nCALM. \n• Long-term private cloud deployments might be \npossible (CALM-only) \nFor PALM use cases, see https://wiki.one.int.sap/wiki/x/qM8-sg  \nFor more info on the account setup for PALM, see https://wiki.one.int.sap/wiki/x/ugKGsw  \nFor details on authorization management in PALM, see https://wiki.one.int.sap/wiki/x/uU-kwg\n\nPage 56:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 56 of 66 \n \n6.7 Asynchronous Messaging and Eventing with Kafka \nWe adopt asynchronous messaging for all communications in CALM with Kafka as the messaging \nbroker. Our goal is to enable this for all our communication use cases within and outside of CALM.  \nAdherence to this approach is the general architecture guidance, as this is important with our growing \nnumber of tenants and the need for resilience and scalability with this growth. \nCurrently, we cover the following scenarios \n• Service-to-Service communication between the services within a DwC -Vector version (and \nalso future versions of the vector).  \no Details: https://wiki.wdf.sap.corp/wiki/x/ypPrhw  \n• Cross data center communication enables communication across different CALM and XALM \nprovider accounts.  \no e.g CALM-EU10  CALM-EU20, XALM-EU20 CALM-EU10… \no Details: https://wiki.wdf.sap.corp/wiki/x/mRFJmQ \n• Application-to-Application Communication. \no e.g., Consume events that are received via CALM/XALM inbound APIs (e.g., metrics \nsent by Ariba-managed tenant) \no Details: https://wiki.wdf.sap.corp/wiki/x/IaUzkg \n \nUnified Kafka Library \nCALM invests in an inner-sourced unified Kafka library to support the adoption  of asynchronous \nmessaging using Kafka, covering the above-mentioned scenarios in the context of DwC. \n \nFigure 39 - Unified Kafka Library – Mission \n \n \nFigure 40 - Unified Kafka Library - Block Diagram\n\nPage 57:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 57 of 66 \n \n6.8 Embedded Analytics in CALM \nFor operational reporting (analytics here is typically integrated/embedded into the SAP Cloud ALM \nApplications), we reuse the data and CDS models as created by the transactional application use \ncases. We typically share the same data model within one domain. The benefit is to avoid redundant \ndefinitions of metadata and to ensure data consistency. \nFor complexity and cost reasons, SAP Analytics Cloud is not used for Embedded Analytics in CALM. \nFor analytics use cases that go beyond microservices and are not possible to integrate on the UI \nlayer, we collect the relevant data into a central analytics microservice. For instance, for CALM Build \nOverview Page: \n \nFigure 41 – CALM Build Overview Page \nDetails: https://wiki.wdf.sap.corp/wiki/x/ibZVfQ  \n \n6.9 SAP Analytics Cloud (SAC) – Integration Option \nCustomers who have their own SAP Analytics Cloud (SAC) tenant can use the SAP Cloud ALM \nAnalytics API that is published in the SAP API Business Hub. The SAP Cloud ALM Analytics API is \nimplemented as a service broker and provides a REST / oData API to access the CALM analytics \ndata. Customers need to first subscribe to the service broker and then create a service instance and \na service key in their CALM customer account. With this service key, they can create an oData Service \nconnection in their SAP Analytics Cloud tenant. The oData Service connection only supports data \nacquisition, with no live connectivity. After customers create SAC models based on the SAP Cloud \nALM Analytics API, they can extract data from CALM and persist in their SAC tenant. \nIt's also possible to provide pre-built content that customers can access within the Content repository \nwithin SAC (see also the Analytics Technology Guideline TG32).  \nIt would also be possible to embed SAC content directly in the CALM application, but this would \nrequire automated SAC tenant provisioning. It was decided not to embed SAC content due to higher \nTCO.\n\nPage 58:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 58 of 66 \n \n6.10 Service & Support Data Lake \nWith the Service & Support Data Lake  platform, we want to provide data -driven innovations for our \nstakeholders in Customer Solution Support & Innovation (CSI). The platform runs on Kubernetes on \nConverged Cloud and includes several components to do data integration, machine learning, logging, \nand provisioning of ML services for several applications. Service and Support data is extracted to the \nService & Support Data Lake and stored there for data exploration. The data is then analyzed by data \nscientists, and ML models are created  based on the  CSI business requirements. These ML models \nare exposed as  ML services and can then be consumed by the applications via the API Gateway \n(Kong). \n \nFigure 42 - Service & Support Data Lake  \nMore information can be found below \n• Recording of Service & Support Data Lake – introduction (BAM) \n• Service & Support Data Lake Wiki page \n \n6.11  Metering and Usage Analysis \nWithin SAP Cloud ALM , we collect usage metrics to provide transparency about the adoption and \nusage intensity of our product . This helps our product management make investment decisions as \nwell as the development to gain insights on how the individual parts of the product are used . In \naddition, we use the usage data to integrate with CPEA for billing purposes (for the HDI container \nusage as well as for external API consumption by customers). \nFor collecting the usage metrics in SAP Cloud ALM, we introduced a microservice called \"Usage data \ncollector\" that is responsible for collecting the usage data from the individual application microservices \nvia the metering library and sending them via the SAP M etering Service from BTP to the Cloud \nreporting and CPEA for billing purposes (for those metrics that are billing-relevant). \nThe microservices can submit usage data regularly to the usage data collector. Alternatively, usage \ndata can be pulled by the usage data collector from the microservices via a job. The usage data \ncollector stores the usage data in a shared HDI container, and periodically, the usage data is sent to \nthe Metering service. Metering service then forwards to Cloud Reporting. In Cloud Reporting, there \nis a spec ific dashboard with all usage data that is specific to SAP Cloud ALM.  There, additional \ncustomer and tenant master data can be used to do data analysis. Also , other data sources (e.g ., \nServiceNow cases) are integrated with the CALM Cloud reporting dashboard.\n\nPage 59:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 59 of 66 \n \n \nFigure 43 – CALM Usage Measurement Architecture \n \nCustomers who use more than 8 GB of HANA memory will be charged based on the additional HANA \nmemory usage. Therefore, we measure the HANA memory usage of all tenants on a monthly basis.  \nAs a prerequisite , customers who overuse 8 GB of memory need to subscribe to the SAP CALM \nmemory extension service in their CPEA account. Then, the usage data collector will send the usage \ndata of those customers associated with their CPEA account so that they can get charged based on \ntheir usage. In the CPEA account, the customers see the HANA memory usage and the related costs. \nIn addition, the information about the HDI container usage is also sent to the health monitoring \napplication so that customers get  information about which application is using most of th e HANA \nmemory so that they can potentially do clean-ups if, e.g., data is not required anymore. \nTo ensure the data quality of the usage data, we use Focused Run. There, we defined rules (e.g., to \ncheck the latest usage numbers against the standard deviation) and thresholds that can be used to \nalert and notify the developers of potential issues. \nDetails: https://wiki.wdf.sap.corp/wiki/x/-sjEfg  \n \n6.12  Backing Services and Scalability \nSAP BTP / Cloud Foundry offers several backing services, which are being consumed by SAP Cloud \nALM. These backing services are generic services  and avoid the need for  every application to \nimplement such functionality on their own. Typical backing services are Cloud Logging, Audit Log, \nApplication Autoscaler, and the like. The list of the consumed backing services of SAP Cloud ALM  \ncan be found in the service toolchain application at \n https://services.tools.sap/#/perspective/inventory/service/SERVICE-440 (tab \"Required Services\"). \nThe list is also maintained at https://wiki.one.int.sap/wiki/x/8mBTg. \nThe plan for SAP Cloud ALM is to finally have around 50.000 customers. We must be prepared for a \nlarger number of customers. Currently, around 74.000 customers are entitled to use SAP Cloud ALM. \nSince we don't plan to run SAP Cloud ALM in one single data center exclusively, the assumption is \nnot to have more than 5.000 customers in one data center until 2024. \nTo handle 5.000 customers per data center, SAP Cloud ALM needs to ensure that the consumed \nbacking services scale accordingly and can handle the load. Missing scalability of consumed\n\nPage 60:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 60 of 66 \n \nbacking services will end up in showstoppers for the rollout activities for SAP Cloud ALM. There is a \nseparate workstream on performance and scalability.  \nIn the early days when the workstream was started, we had to look at the scalability of the backing \nservices by ourselves. We estimated the load per customer per day, and we extrapolated the load \naccordingly. Based on this data, we check with the particular BTP service owners to see if the \nservice can handle the expected load. In August 2021, BTP Core (India) set up its own team to run \nload tests based on our requests. The documentation of the tasks in this workstream is listed at \nhttps://wiki.wdf.sap.corp/wiki/x/9BHRiw. \n \n6.13  Identity and Access Management \nSAP Cloud ALM is a customer-managed SaaS. T herefore, the customer is responsible for user \nauthentication. SAP supports the customer with best practices on how user authentication shall be \ndone. Note: Identity and Access Management is not the same as Authorization Management. \nIn the customer onboarding process, SAP Cloud ALM offers fully automated provisioning . The  \ncustomer user who requested the SAP Cloud ALM tenant can log on to the application without further \nconfiguration activities. So, the basic SAP BTP Cockpit configuration is done within the provisioning \nautomation. Additional configuration effort is required so all SAP Cloud ALM features  can be used. \nSuch configuration can include setting up connectivity to managed tenants and managed systems. \nAs part of the automated provisioning, the customer gets their own IAS tenant for authentication \npurposes. If there is already a customer-owned IAS tenant, this tenant is reused. I f there is no \ncustomer-owned IAS tenant so far, a new IAS tenant for the customer is created. If an existing IAS \ntenant is used, it is ensured that the user who requested the SAP Cloud ALM tenant gets a user in \nthis customer IAS tenant. In case this user gets created in the customer IAS tenant, the user receives \nan identity confirmation email. In case a new IAS tenant is set up, the user who requested the SAP \nCloud ALM tenant gets a user in this customer-owned IAS tenant , and in addition , this user is \nmaintained as administrator of this newly created IAS tenant. \nThere is a license bundling of the customer-owned IAS tenant and SAP Cloud ALM, so the customer-\nowned IAS tenant is free of charge for the customer in the context of SAP Cloud ALM. \nThe process of adding customer users to the customer-owned IAS tenant is not part of the SAP Cloud \nALM process. Customers have several standard options: \n• Maintain the users in customer IAS tenant manually \n• Maintain the users in customer IAS tenant by replication from S/4HANA or by SFSF \n• Any other option provided by IAS \nThe users of the customer-owned IAS tenant are available in SAP Cloud ALM and in the SAP BTP \nCockpit. In both places, authorization can be granted to these users. \n \n6.14  User Role Assignment (Authorization Management) \nIn every application, the capabilities of the application are protected by defined role collections and \nscopes. In customer-managed SaaS applications, the applications provide the available role \ncollections as part of the deployment. Customers are allowed to create additional customer-specific \nrole collections to suit their needs. \nIn customer-managed SaaS applications, the user-role assignment is done in the SAP BTP Cockpit. \nThese SAP BTP Cockpit UIs are very technical and not intuitive. In addition, the list of available role \ncollections is a mix of SAP BTP Cockpit roles, SaaS application roles, and customer-specific roles. \nFor SAP Cloud ALM, the user who requested the SAP Cloud ALM tenant gets the \"Global \nAdministrator\" role assigned to SAP Cloud ALM. With this role assignment, the user is authorized to \nexecute all capabilities of the SAP Cloud ALM application.\n\nPage 61:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 61 of 66 \n \nTo overcome that usability restriction in SAP BTP Cockpit, SAP Cloud ALM introduced its own \nmicroservice: https://github.tools.sap/CALMBuild/uam-userservice. This is a cross-application user \nmanagement application with excellent usability and is embedded in the SAP Cloud ALM \nlaunchpad. That way, the user-role assignment maintenance can be done within the SAP Cloud \nALM application. Users will not need to use the BTP Cockpit. It is just a special role assignment of \nthe SAP Cloud ALM application. By that, we ensure the ability to separate the application business \nadministrators from the application technical configuration administrators.  \nThe user roles maintained by CALM uam-userservice are 100% compatible with the users \nmaintained in the BTP cockpit. The user-role assignment, which is maintained in the CALM uam-\nuserservice, is therefore visible in the SAP BTP Cockpit. \nThe UAM microservice UI is optimized for SAP Cloud ALM but could be used in other SaaS \napplications as well. The SAP Cloud ALM-specific role collections are displayed in an intuitive UI \n(see screenshot). Role collection assignment in the UI is ordered according to the capabilities in \nSAP Cloud ALM. SAP BTP Cockpit-related role collections are hidden and cannot be granted to any \nuser in this UI. Additional application-related roles can be granted to users in the \"Custom Roles\" \nsection. The roles displayed here are either customer-specific roles or, in the future, roles from \nadditional subscribed applications like CIAS, CTMS, etc… \n \n \nFigure 44 – User authorization maintenance in SAP Cloud ALM \n \nThe user role concept for XALM is described here: https://wiki.wdf.sap.corp/wiki/x/lTz_nQ  \n \nNo UAM Service in XALM \nWe decided to deploy only CALM microservices, which are strictly required in XALM. By that, we keep \nXALM as \"lightweight\" as possible. Therefore, as of February 2022, UAM is not part of XALM. It's \nbeen decided that XALM applications that need to access the first and last name of a given user ID \nto get the list of users assigned to a role, etc., will implement the required capabilities through a new \nlibrary/microservice. \n \n6.15  SAP Cloud ALM Commercialization \nThe SAP Cloud ALM commercialization model can be separated into two parts:  \n1. All order-2-cash-related process steps \n2. The tenant provisioning process. \nIn this ACD, we focus on provisioning processes. The process steps for order -2-cash are not in the \nscope of this document since they are bound to the SAP Cloud ALM Commercialization / Business\n\nPage 62:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 62 of 66 \n \nModel. See also the figure below: the process marked in the orange boxes is related to the order-2-\ncash process. The fulfillment order triggers the provisioning. The fulfillment order also takes care that \nthe technical installation number is created and that the iBase is updated accordingly. \nhttps://wiki.wdf.sap.corp/wiki/x/Azo2b \n  \n \nFigure 45 – SAP Entitlement and Cloud Provisioning Process \n \nAs shown in Figure 45, the fulfillment request triggers the provisioning of the customer tenant. Either \nin the Service Provider Cockpit or in SAP BTP CIS (Commercial Infrastructure Services). Depending \non the product that is ordered by the customer and assigned to the Provider Contract, Cloud \nEntitlement Set and Fulfillment Request. For a better understanding, we need to clarify the two cloud \nproduct types of SAP: \n1. SAP-managed SaaS Application \nFor an SAP-managed SaaS Application, the provisioning procedure is performed by the \nService Provider Cockpit.  \nIn an SAP-managed SaaS Application, the global account is provided by SAP, as well as \nthe IAS Tenant. The customer gets provided with his or her own subaccount, activates the \nsubscription, gets a user in the subaccount, and is notified by mail, which includes a link \nthat he or she can start working. \nThere is no access to any SAP BTP administration tool (SAP BTP Cockpit) to manage \ndestinations, user-role assignments, and other tasks. Hence, these need to be provided in \nthe application. The customer does not even know that the application runs on the SAP \nBTP environment. \n \n2. Customer-managed SaaS Application \nFor a customer-managed SaaS Application, the provisioning procedure is performed by \nSAP BTP - CIS \nIn a customer-managed SaaS Application, the customer has full control of his SAP BTP \nAccount. Therefore, the provisioning creates a customer-owned global account (if there is \nnot already an existing global account), assigns an entitlement (the license material that is \nordered by the customer in the order-2-cash process) to the global account, adds the user \nof the contract as admin user to this global account, and notifies the user via mail (with link \nto SAP BTP Cockpit) that all other tasks need to be done manually.\n\nPage 63:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 63 of 66 \n \nFor SAP Cloud ALM, the customer needs full access to the SAP BTP Cockpit to maintain the \ndestinations to the customers' cloud tenants as well as to the customers' on-premise systems. Only \na customer-managed SaaS scenario offers this type of access to the customer landscape. Hence, \nSAP Cloud ALM uses the customer-managed SaaS model. \n6.16  SAP Cloud ALM Customer Onboarding \nAll customers with a valid Enterprise Support contract or higher (MaxAttention, Preferred Success, \nand the like) are entitled to request a n SAP Cloud ALM tenant. For all these customers , there is an \nSAP Cloud ALM-specific entitlement set (see Figure 23). All in all, about 74.000 customers are entitled \nto request an SAP Cloud ALM tenant. \nFor details about commercialization, see https://wiki.wdf.sap.corp/wiki/x/Azo2b. \nSince we don't want to create 74.000 SAP Cloud ALM tenants, and the customer might not even use \ntheir SAP Cloud ALM tenant, it was decided to go for a manual call -off to get an SAP Cloud ALM \ntenant provisioned.  \nThe currently available application to trigger the call-off is ONE Support Launchpad (OSLP). See the \nfigure below:  \n \nFigure 24 – SAP Cloud ALM Call-off application in OSLP \nThe admin user of a customer is allowed to request an SAP Cloud ALM tenant. In this application, \nthe customer admin user must specify the hyperscaler region (e.g ., AWS Frankfurt or Azure \nAmsterdam) and the subdomain of the customer BTP subaccount, where the SAP Cloud ALM \napplication will be consumed. \nBy April 2022, this SAP Cloud ALM call-off application will also be available in SAP 4 Me as part of \nthe overall call-off application, where the customer user requests the call -off for all the customers' \ncloud tenants. \nEvery call-off request is persisted in  the SAP Support Portal backend system for customer call -off \nlogging purposes and even more for provisioning monitoring purposes. See the figure below:\n\nPage 64:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 64 of 66 \n \n \nFigure 25 – SAP Cloud ALM provisioning monitoring \nWhen the call-off request is persisted in the SAP Support Portal, the trigger in the ICP fulfillment order \nis called to start the provisioning. The provisioning for SAP Cloud ALM is highly automated  to keep \nthe manual configuration steps for the customer after the provisioning at a minimum. Technically, the \nprovisioning procedure consists of 2 parts: one part in CIS and one part in SPC.  \nIn detail, the steps in the provision are: \n• (CIS) Create one global customer account \n• (CIS) Assign the entitlement for SAP Cloud ALM  \n• (CIS) Assign the customer user from OSLP who requested the SAP Cloud ALM tenant  as \nadmin to the global account \n• (SPC) Create a sub-account \n• (SPC) Activate the subscription \n• (SPC) Assign the customer IAS tenant (usually a customer has only 1) to the sub-account (or \ncreate a new customer IAS tenant) \n• (SPC) Create the first user in the IAS tenant (the customer user from OSLP who requested \nthe SAP Cloud ALM tenant) \n• Assign the Global Administrator role collection from SAP Cloud ALM to the user  \n• Send a mail to the user with the URL to the application and the URL to the SAP BTP Cockpit \nAfter this provisioning, the customer user who requested the call -off in OSLP  is enabled to \nauthenticate at the customer's IAS tenant and start working with SAP Cloud ALM. \nTechnically, when the SAP Cloud ALM tenant provisioning is finished, a new entry is available in the \nCLD of the SPC, which is replicated into the customer system data store in the SAP Support Portal. \nThis new tenant, together with the customer's call-off request, is the basis for the monitoring of the \nSAP Cloud ALM provisioning shown in Figure 26. \nCurrently, the SAP Cloud ALM license material is maintained (in CIS) to allow only one subscription \nper global account. This means the customer is allowed to create additional sub-accounts in the \ncustomer's global account, but SAP Cloud ALM can be subscribed only once. This is at least the \ncurrent status but is subject to change. Depending on requirements from SAP Cloud ALM product \nmanagement or technical requirements (e.g., for the tenant to move from one data center to another \none), the number of allowed subscriptions might change. \nIn addition, there are ongoing discussions that there will be a combined provisioning of SAP Cloud \nALM in the context of SAP S/4HANA Cloud and SAP SuccessFactors tenant provisioning.  \n6.17 Hyperscaler Strategy / Region Strategy \nThe current roadmap for hyperscaler / data center support is listed can be found in \nhttps://wiki.wdf.sap.corp/wiki/x/5ZPNj\n\nPage 65:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 65 of 66 \n \n6.18  DevOps and Operations Processes \nFor an introduction to CALM DevOps, see the following links: \n• Engineering Excellence by Continuous Delivery to Production, Daily \n• Carpe Diem - A Day in the Cloud \n• For 24x7 operation processes and tools, see sub-pages of SAP Cloud ALM Operations  \n(owned by CALMs 24x7 operations team).  \n• See also Chapter 4.8 - Tools for DevOps Monitoring \n• Special interpretation of Site Reliability Engineering (SRE): SRE@CALM wiki \n \n6.19  PPMS Model \nSAP Cloud ALM, with its three sub-areas Build, Run, and Service, are handled as one PPMS product \n(with three separate software components): \n \nFigure 46 - PPMS view on SAP Cloud ALM (link) \n \n6.20 Product Standards  \nThere are no special product standards for SAP Cloud ALM Build, Run , and Service Delivery. The \ngeneral SAP product standards for SaaS applications apply. See related Sirius project.  \nThe SAP-Term for the delivery type CALM is using so-called Micro-Delivery. \nFor further information on product standards,: go/productstandards. \nOverview session SAP Product Standards for SAP Cloud ALM Engineers: \nhttps://video.sap.com/media/t/1_uij1tcu3  \n \nIn the Program Management wiki, you can find contacts and guidance: \nhttps://wiki.wdf.sap.corp/wiki/x/P7omm  \n \nHigh-Availability and Disaster Recovery \nAs a Cloud Foundry application on the BTP, the corresponding statement applies to SAP Cloud \nALM as well. Details on help.sap.com \nThe paper Principles and Patterns for Developing Highly Available S/4HANA Cloud Applications \nis relevant for CALM as well. \n6.21 Cloud Native KPIs Score - Assessment \nBased on the CALM architecture, we can measure a cloud-native score for SAP Cloud ALM. Details: \nhttps://wiki.wdf.sap.corp/wiki/x/WLENqQ\n\nPage 66:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 66 of 66 \n \n \n \n \nwww.sap.com/contactsap \n \n© 2022 SAP SE or an SAP affiliate company. All rights reserved. \nNo part of this publication may be reproduced or transmitted in any form or for any purpose without the express permission of SAP SE or an SAP affiliate company. \nThe information contained herein may be changed without prior notice. Some software products marketed by SAP SE and its distr ibutors contain proprietary software components of other software \nvendors. National product specifications may vary. \nThese materials are provided by SAP SE or an SAP affiliate company for informational purposes only, without representation or  warranty of any kind, and SAP or its affiliated companies shall not be \nliable for errors or omissions with respect to the material s. The only warranties for SAP or SAP affiliate company products and services are those that are set forth in the express war ranty statements \naccompanying such products and services, if any. Nothing herein should be construed as constituting an additional warranty.  \nIn particular, SAP SE or its affiliated companies have no obligation to pursue any course of business outlined in this docume nt or any related presentation, or to develop or release any functionality \nmentioned therein. This document, or any related presentation, and SAP SE’s or its affiliated companies’ strategy and possible future developments, products, and/or platform directions and functionality \nare all subject to change and may be changed by SAP SE or its affiliated companies at any time for any reason  without notice. The information in this document is not a commitment, promise, or legal \nobligation to deliver any material, code, or functionality. All forward-looking statements are subject to various risks and uncertainties that could cause actual results to differ materially from expectations. \nReaders are cautioned not to place undue reliance on these forward-looking statements, and they should not be relied upon in making purchasing decisions. \n \nSAP and other SAP products and services mentioned herein as well as their respective logos are trademarks or registered trade marks of SAP SE (or an SAP affiliate company) in Germany and other \ncountries. All other product and service names mentioned are the trademarks of their respective companies. See www.sap.com/copyright  for additional trademark information and notices.",
      "word_count": 16537,
      "links": [
        "http://global12.sap.com/corporate-en/legal/copyright/index.epx",
        "https://github.tools.sap/CALM/design",
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://sap.sharepoint.com/:w:/r/teams/CALMFoundation/_layouts/15/Doc.aspx?action=edit&sourcedoc=%7BDAE5BA07-0E41-422C-94D7-A5F0C3F03843%7D",
        "https://sap.sharepoint.com/:w:/s/124503/EVSyU_CBHTVCjNJ7bsruL3MBVMD0R_GkikhYezknKwA9OQ?e=AhOZZt",
        "https://workzone.one.int.sap/site#workzone-home&/groups/elzbHoZqbLQ2grOBgxgvbw/overview_page/N9hFAySVIixkFWvw1jE9ZK",
        "https://wiki.one.int.sap/wiki/display/CXSDEV/HOME#HOME-ContactsforEngineersinCXS",
        "https://www.ietf.org/rfc/rfc2119.txt",
        "https://dwc.tools.sap/",
        "https://support.sap.com/en/alm/sap-cloud-alm.html",
        "https://jam4.sapjam.com/groups/FPGyb1NgPwUQTTLghWdNhw/documents/fEFImHBHloixve5MjAl33V/slide_viewer",
        "https://wiki.wdf.sap.corp/wiki/x/RyWWpg",
        "https://d.dam.sap.com/s/i/a/HuUyuNr/Golden%20Path%20Guidance%20Paper.pdf",
        "https://github.tools.sap/deploy-with-confidence/solar-system/raw/master/docs/documentation/guides/Culture_of_Cloud_Native_Development.pdf",
        "https://pages.github.tools.sap/deploy-with-confidence/solar-system/",
        "https://wiki.one.int.sap/wiki/x/p02-fw",
        "https://www.devops-research.com/quickcheck.html",
        "https://wiki.wdf.sap.corp/wiki/display/CXSDEV/HOME",
        "https://wiki.wdf.sap.corp/wiki/x/dg5rbQ",
        "https://12factor.net/",
        "https://workzone.one.int.sap/site#workzone-home&/groups/eopqUq5S182gY7JFrbdwis/documents/mCpWcQuXG9SAHYneoRkQ5l/slide_viewer",
        "https://help.sap.com/viewer/DRAFT/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/00823f91779d4d42aa29a498e0535cdf.html",
        "https://d.dam.sap.com/s/i/a/HuUyuNr/Golden%20Path%20Guidance%20Paper.pdf",
        "https://d.dam.sap.com/s/i/a/HuUyuNr/Golden%20Path%20Guidance%20Paper.pdf",
        "https://wiki.one.int.sap/wiki/x/pZcCww",
        "https://github.tools.sap/CentralEngineering/TechnologyGuidelines/tree/master/tg11",
        "https://sap.sharepoint.com/:f:/s/107231/EmbJzCWJMGFErfdAUgEVoqkBy3wTlJ-PzicxAm0GMQfjhA?e=vWdISg",
        "https://sap.sharepoint.com/:f:/s/107231/EmbJzCWJMGFErfdAUgEVoqkBy3wTlJ-PzicxAm0GMQfjhA?e=vWdISg",
        "https://news.sap.com/2020/05/sap-cloud-alm-enhances-support-for-cloud-based-solutions/",
        "https://support.sap.com/en/alm/sap-cloud-alm.html",
        "https://wiki.one.int.sap/wiki/x/qM8-sg",
        "https://wiki.one.int.sap/wiki/pages/viewpage.action?pageId=2990526376",
        "https://wiki.one.int.sap/wiki/x/64zNug",
        "https://dwc.tools.sap/",
        "https://martinfowler.com/articles/continuousIntegration.html",
        "https://dashboard.dwc.tools.sap/org/CALM/deliveries/b78f2447-7e3a-4f11-b69e-ebc3cc9c75e2",
        "https://martinfowler.com/articles/feature-toggles.html",
        "https://dashboard.dwc.tools.sap/org/CALM/featureToggles",
        "https://wiki.one.int.sap/wiki/x/p02-fw",
        "https://wiki.one.int.sap/wiki/x/p16Ti",
        "https://wiki.one.int.sap/wiki/x/DmSngw",
        "https://internal-dashboards.qod.cxs.only.sap/d/adUWAqiGkcalm/cloud-engineering-tools?orgId=1&refresh=5m",
        "https://internal-dashboards.qod.cxs.only.sap/d/adUWAqiGkcalm/cloud-engineering-tools?orgId=1&refresh=5m",
        "https://app.slack.com/client/T9AJD7FNU/CUFRS0WF2",
        "https://bdt3.jaas-gcp.cloud.sap.corp/job/Business-Data-Transformation-Solution/",
        "https://gkecrun.jaas-gcp.cloud.sap.corp/job/CALMRun/",
        "https://dashboard.dwc.tools.sap/org/CALM/landscape/overview",
        "https://wiki.one.int.sap/wiki/x/Gal-hQ",
        "https://blogs.sap.com/2020/06/15/quality-innovations-at-sap-cloud-alm/",
        "https://internal-dashboards.qod.cxs.only.sap/d/adUWAqiGkcalm/cloud-engineering-tools?orgId=1&refresh=5m",
        "https://wiki.one.int.sap/wiki/x/9pO6jg",
        "https://wiki.wdf.sap.corp/wiki/x/P_uPhQ",
        "https://wiki.wdf.sap.corp/wiki/x/P_uPhQ",
        "https://wiki.one.int.sap/wiki/x/Y5V8hw",
        "https://wiki.one.int.sap/wiki/x/-CHdtw",
        "https://www.youtube.com/watch?v=3vX2iVIJMFQ",
        "https://wiki.one.int.sap/wiki/x/QNxxiQ",
        "https://swagger.io/resources/articles/difference-between-api-documentation-specification/",
        "https://api.sap.com/package/SAPCloudALM/rest",
        "https://blogs.sap.com/2021/08/05/sap-cloud-alm-extend-with-apis-introduction-use-cases/",
        "https://www.sap.com/products/business-technology-platform/use-cases/open-connectors.html",
        "https://www.sap.com/products/integration-suite.html",
        "https://blogs.sap.com/2021/09/29/integrate-sap-cloud-alm-with-jira/",
        "https://wiki.wdf.sap.corp/wiki/x/dsj6q",
        "https://wiki.wdf.sap.corp/wiki/x/JPWJhw",
        "https://wiki.wdf.sap.corp/wiki/x/Vwime",
        "https://wiki.wdf.sap.corp/wiki/x/Gm77j",
        "https://sap.sharepoint.com/:u:/r/teams/IESTechnology/_layouts/15/Doc.aspx?sourcedoc=%7Bb7bbd1de-f99f-435d-a370-2d72aa8ae690%7D&action=view&cid=14f06665-a4f9-460a-8406-4516ce399d58",
        "https://github.tools.sap/CentralEngineering/TechnologyGuidelines/blob/latest/tg31/README.md",
        "https://internal-dashboards.qod.cxs.only.sap/d/iygGLzAMk/tenant-monthly-shared-cost-estimation?orgId=1",
        "https://internal-dashboards.qod.cxs.only.sap/d/iygGLzAMk/tenant-monthly-shared-cost-estimation?orgId=1",
        "https://wiki.one.int.sap/wiki/x/VvH7jg",
        "https://wiki.one.int.sap/wiki/x/-CHdtw",
        "https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/3a7a0bece0d044eca59495965d8a0237.html",
        "https://developers.sap.com/germany/topics/s4hana-cloud-sdk.html",
        "https://github.tools.sap/CALM/design/blob/master/adr/adr-0170-api-mngt.md",
        "https://github.tools.sap/CentralEngineering/TechnologyGuidelines/blob/master/tg27/README.md",
        "https://wiki.wdf.sap.corp/wiki/x/H1W4eQ",
        "https://wiki.wdf.sap.corp/wiki/x/8mBTg",
        "https://wiki.one.int.sap/wiki/x/MdOfuQ",
        "https://sap.sharepoint.com/:u:/r/teams/CALMFoundation/Shared%20Documents/General/ACD_Cloud_Development_in_CXS.vsdx?d=w43ae59d80c6445bb8c3b4a4d1c53bc25&csf=1&web=1&e=TwFMH3",
        "https://jam4.sapjam.com/groups/eopqUq5S182gY7JFrbdwis/documents/BCKggXxFQrWW5FIYZSWXYW/slide_viewer",
        "https://dashboard.dwc.tools.sap/org/CALM/landscape/overview",
        "https://wiki.wdf.sap.corp/wiki/x/lTz_nQ",
        "https://github.tools.sap/CALM/design/blob/master/adr/adr-0190-hdi-schema.md",
        "https://pages.github.tools.sap/deploy-with-confidence/solar-system/documentation/configuration/landscape-configuration/#internal-api-users",
        "https://wiki.wdf.sap.corp/wiki/x/mRFJmQ",
        "https://wiki.wdf.sap.corp/wiki/x/IaUzkg",
        "https://sap.sharepoint.com/:u:/r/teams/CALMFoundation/Shared%20Documents/General/ACD_Cloud_Development_in_CXS.vsdx?d=w43ae59d80c6445bb8c3b4a4d1c53bc25&csf=1&web=1&e=TwFMH3",
        "https://launchpad.support.sap.com/",
        "https://me.sap.com/home",
        "https://jam4.sapjam.com/groups/VWcmkP1pb0i4WAeFZ1rP5o/overview_page/PcW7J13vKejtO3ShJmJPzg",
        "https://support.sap.com/en/my-support.html",
        "https://sap-my.sharepoint.com/:v:/p/arno_helmling/EVPV_E3rqqdLnKG5KaPD2PwBh14UcbBWVOV3liZ-fiHWuA",
        "https://wiki.one.int.sap/wiki/x/Qkeeyg",
        "https://wiki.one.int.sap/wiki/x/qM8-sg",
        "https://wiki.one.int.sap/wiki/x/ugKGsw",
        "https://wiki.one.int.sap/wiki/x/uU-kwg",
        "https://wiki.wdf.sap.corp/wiki/x/ypPrhw",
        "https://wiki.wdf.sap.corp/wiki/x/mRFJmQ",
        "https://wiki.wdf.sap.corp/wiki/x/IaUzkg",
        "https://wiki.wdf.sap.corp/wiki/x/ibZVfQ",
        "https://api.sap.com/api/CALM_ANALYTICS/overview",
        "https://api.sap.com/api/CALM_ANALYTICS/overview",
        "https://github.tools.sap/CentralEngineering/TechnologyGuidelines/tree/master/tg32",
        "https://video.sap.com/media/t/1_phdsi5ki",
        "https://wiki.wdf.sap.corp/wiki/x/GsuQgw",
        "https://github.tools.sap/CALMBuild/ca-usage-collector",
        "https://reporting.ondemand.com/sap/crp/cdo?type=crp_db&db_id=p-core-am-01",
        "https://wiki.wdf.sap.corp/wiki/x/-sjEfg",
        "https://services.tools.sap/#/perspective/inventory/service/SERVICE-440",
        "https://wiki.one.int.sap/wiki/x/8mBTg",
        "https://wiki.wdf.sap.corp/wiki/x/9BHRiw",
        "https://github.tools.sap/CALMBuild/uam-userservice",
        "https://wiki.wdf.sap.corp/wiki/x/lTz_nQ",
        "https://wiki.wdf.sap.corp/wiki/x/Azo2b",
        "https://wiki.wdf.sap.corp/wiki/x/Azo2b",
        "https://wiki.wdf.sap.corp/wiki/x/5ZPNj",
        "https://wiki.wdf.sap.corp/wiki/display/CXSDEV/Guidance+for+CALM+Engineering+-+Engineering+Excellence+by+Continuous+Delivery+to+Production%2C+Daily",
        "https://wiki.wdf.sap.corp/wiki/display/CXSDEV/5+Carpe+Diem+-+A+Day+in+the+Cloud",
        "https://wiki.wdf.sap.corp/wiki/display/CXSDEV/SAP+Cloud+ALM+Operations",
        "https://wiki.wdf.sap.corp/wiki/x/4JO6jg",
        "https://i7p.wdf.sap.corp/ppmslight/#/details/p/73554900100800002513/overview",
        "https://ifp.bss.net.sap/sirius/#/program/174E3CBEC8CF234A004B70CC609F7DF7",
        "https://portal.wdf.sap.corp/go/productstandards",
        "https://video.sap.com/media/t/1_uij1tcu3",
        "https://wiki.wdf.sap.corp/wiki/x/P7omm",
        "https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/350356d1dc314d3199dca15bd2ab9b0e.html#loio001180644f8a428bb422cd41caebb95f",
        "https://sap.sharepoint.com/:w:/s/107697/EUebmYma27dEgcHpwJgAtC0BhQf6EjojM9qziuMhqcXfBg?e=DYcfRB",
        "https://wiki.wdf.sap.corp/wiki/x/WLENqQ",
        "https://www.sap.com/copyright"
      ],
      "images": [],
      "source_type": "pdf",
      "filename": "ACD_Cloud-Native_Development_in_CXS (2).pdf",
      "total_pdf_pages": 66,
      "depth": 0,
      "crawl_order": 1
    },
    {
      "success": true,
      "title": "GitHub · Enterprise",
      "content": "GitHub · Enterprise Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert Sign in Your GitHub Enterprise instance uses a GitHub Enterprise License for authentication. Sign in with your username and password instead of a GitHub Enterprise License authentication. Sign in with a GitHub Enterprise License Username Password Sign in with a username and password Sign in with a GitHub Enterprise License authentication Help Support You can’t perform that action at this time.",
      "word_count": 108,
      "links": [
        "https://github.tools.sap/CALM/design",
        "https://github.tools.sap/",
        "https://github.tools.sap/CALM/design",
        "https://github.tools.sap/CALM/design",
        "https://github.tools.sap/CALM/design",
        "https://github.tools.sap/login?force_external=true&return_to=https%3A%2F%2Fgithub.tools.sap%2FCALM%2Fdesign",
        "https://docs.github.com/enterprise-server@3.15",
        "https://wiki.one.int.sap/wiki/x/Qbi-wQ"
      ],
      "images": [
        "https://assets.github.tools.sap/assets/gh-enterprise-logo-4ef2d1e6467e.svg"
      ],
      "source_type": "web_from_pdf",
      "pdf_page": 2,
      "url": "https://github.tools.sap/CALM/design",
      "depth": 1,
      "crawl_order": 2
    },
    {
      "success": true,
      "title": "GitHub · Enterprise",
      "content": "GitHub · Enterprise Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert Sign in Your GitHub Enterprise instance uses a GitHub Enterprise License for authentication. Sign in with your username and password instead of a GitHub Enterprise License authentication. Sign in with a GitHub Enterprise License Username Password Sign in with a username and password Sign in with a GitHub Enterprise License authentication Help Support You can’t perform that action at this time.",
      "word_count": 108,
      "links": [
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/",
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/login?force_external=true&return_to=https%3A%2F%2Fgithub.tools.sap%2FCALM%2Fdesign%2Fraw%2Fmaster%2FACD_Cloud-Native_Development_in_CXS.pdf",
        "https://docs.github.com/enterprise-server@3.15",
        "https://wiki.one.int.sap/wiki/x/Qbi-wQ"
      ],
      "images": [
        "https://assets.github.tools.sap/assets/gh-enterprise-logo-4ef2d1e6467e.svg"
      ],
      "source_type": "web_from_pdf",
      "pdf_page": 2,
      "url": "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
      "depth": 1,
      "crawl_order": 3
    },
    {
      "success": true,
      "title": "GitHub · Enterprise",
      "content": "GitHub · Enterprise Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert Sign in Your GitHub Enterprise instance uses a GitHub Enterprise License for authentication. Sign in with your username and password instead of a GitHub Enterprise License authentication. Sign in with a GitHub Enterprise License Username Password Sign in with a username and password Sign in with a GitHub Enterprise License authentication Help Support You can’t perform that action at this time.",
      "word_count": 108,
      "links": [
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/",
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
        "https://github.tools.sap/login?force_external=true&return_to=https%3A%2F%2Fgithub.tools.sap%2FCALM%2Fdesign%2Fraw%2Fmaster%2FACD_Cloud-Native_Development_in_CXS.pdf",
        "https://docs.github.com/enterprise-server@3.15",
        "https://wiki.one.int.sap/wiki/x/Qbi-wQ"
      ],
      "images": [
        "https://assets.github.tools.sap/assets/gh-enterprise-logo-4ef2d1e6467e.svg"
      ],
      "source_type": "web_from_pdf",
      "pdf_page": 2,
      "url": "https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf",
      "depth": 1,
      "crawl_order": 4
    },
    {
      "success": true,
      "title": "Redirecting",
      "content": "Redirecting",
      "word_count": 1,
      "links": [],
      "images": [],
      "source_type": "web_from_pdf",
      "pdf_page": 2,
      "url": "https://sap.sharepoint.com/:w:/r/teams/CALMFoundation/_layouts/15/Doc.aspx?action=edit&sourcedoc=%7BDAE5BA07-0E41-422C-94D7-A5F0C3F03843%7D",
      "depth": 1,
      "crawl_order": 5
    }
  ],
  "combined_content": "\n\n=== <Program/Project/ Topic/Integration Scenario> ===\nPage 1:\nProduct Architects \n \n \nAndreas Löbel  \nKlaus Dickgiesser \nSundaresan Krishnamurthy \nEbru Polat \nThomas Paulus \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nSAP INTERNAL \nCustomer Services & Delivery  \nCustomer Experience and Solutions (CXS) \n \nSAP Cloud ALM  \n \nArchitecture Concept Document\n\nPage 2:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 2 of 66 \n \nInformation Classification:  \nSAP INTERNAL \n \nDISCLAIMER  \n \n© 2024 SAP SE or an SAP affiliate company. All rights reserved.  \n \nThis internal document provides SAP-internal information about the architecture and concepts of the SAP Cloud Application \nLifecycle Management Application and platform. It contains current and intended strategies, developments, or functionalities \nof SAP® solutions, applications, and technologies and is not intended to be binding upon SAP to any particular course of \nbusiness, product strategy, and development; its content is subject to change without notice.  \n \nNo part of this publication may be reproduced or transmitted in any form or for any purpose without the express permission of \nSAP SE or an SAP affiliate company.  \n \nThe information contained herein may be changed without prior notice. Some software products marketed by SAP SE and its \ndistributors contain proprietary software components of other software vendors. National product specifications may vary.  \n \nThese materials are provided by SAP SE or an SAP affiliate company for informational purposes only, without representation \nor warranty of any kind . SAP SE or its affiliated companies shall not be liable for errors or omissions with respect to the \nmaterials. The only warranties for SAP SE or SAP affiliate company products and services are those that are set forth in the \nexpress warranty statements accompa nying such products and services, if any. Nothing herein should be construed as \nconstituting an additional warranty.  \n \nIn particular, SAP SE or its affiliated companies have no obligation to pursue any course of business outlined in this document \nor any related presentation, or to develop or release any functionality mentioned therein. This document, or any related \npresentation, and SAP SE's or its affiliated companies' strategy and possible future developments, products, or platform \ndirections and functionality are all subject to change and may be changed by SAP SE or its affiliated companies at any time \nfor any reason without notice. The information in this document is not a commitment, promise, or legal obligation to deliver any \nmaterial, code, or functionality. All forward -looking statements are subject to various risks and uncertainties that could cause \nactual results t o differ materially from expectations. Readers are cautioned not to rely on these forward-looking statements, \nwhich speak only as of their dates, and they should not be relied upon in making purchasing decisions.  \n \nSAP and other SAP products and services mentioned herein and their respective logos are trademarks or registered \ntrademarks of SAP SE (or an SAP affiliate company) in Germany and other countries. All other product and service names \nmentioned are the trademarks of their respective companies.  \nPlease see http://global12.sap.com/corporate-en/legal/copyright/index.epx for additional trademark information and \nnotices. \nDocument History \nDate Version Name Change/Enhancement \n2019-07-24 0.94 Andreas Löbel \nKlaus Dickgiesser \nFirst Published Version  \nUpdated detail diagrams \n2020-11-15 0.99 Andreas Löbel \nKlaus Dickgiesser \nChanges of service delivery market, reuse service \nlist, K8S \n2022-03-21 1.01 Andreas Löbel \nKlaus Dickgiesser \nSundaresan Krishnamurthy \nEbru Polat \nThomas Paulus \nUpdated all info to the latest state, new foreword \n2023-02 1.1 Adding PALM and Powered by CALM.  \nAll chapters are updated to the latest news \n2024-02 1.2 GenAI/LLM, DataLake, APIs, BTC, updated all info \nCurrent Published Version: https://github.tools.sap/CALM/design >> Download \n \nWork in progress version (CXS-Architecture-Internal): Sharepoint  \nRelated: SAPCloudALMinRegulatedEnvironments_draft.docx\n\nPage 3:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 3 of 66 \n \nContents \n1 Abstract .................................................................................................... 7 \n1.1 Business Target .................................................................................................. 8 \n1.2 Engineering Culture - Deployment with Confidence........................................... 9 \n1.3 Architecture ....................................................................................................... 10 \n2 Business Requirements for SAP Cloud ALM .................................... 14 \n3 Powered by CALM................................................................................. 17 \n4 Engineering Culture, Process, Tools ................................................. 20 \n4.1 Single Trunk Delivery Model ............................................................................. 22 \n4.2 Release Feature Toggles .................................................................................. 23 \n4.3 Daily Delivery to Production .............................................................................. 24 \n4.4 Feature-Driven Development Process.............................................................. 25 \n4.5 Feature-Driven Development Process at SAP Cloud ALM .............................. 27 \n4.6 Daily Delivery Process for CALM Engineers .................................................... 28 \n4.7 Engineering View on Tools for Delivery ............................................................ 28 \n4.8 Tools for DevOps Monitoring ............................................................................ 30 \n4.9 Carpe Diem – Our DevOps Model .................................................................... 30 \n5 Architecture Guiding Principles.......................................................... 32 \n6 Architecture Decisions ......................................................................... 39 \n6.1 Data Persistency: HANA Cloud as Default ....................................................... 41 \n6.2 Data Separation in Customer Subscription Model ........................................... 41 \n6.3 Subscription Model ............................................................................................ 43 \n6.4 CALM@DwC Account Setup ............................................................................ 44 \n6.5 XALM - Cross Customer SAP Cloud ALM ........................................................ 45 \n6.6 PALM - Public ALM ........................................................................................... 53 \n6.7 Asynchronous Messaging and Eventing with Kafka......................................... 56 \n6.8 Embedded Analytics in CALM .......................................................................... 57 \n6.9 SAP Analytics Cloud (SAC) – Integration Option ............................................. 57 \n6.10 Service & Support Data Lake ............................................................................ 58 \n6.11 Metering and Usage Analysis ........................................................................... 58 \n6.12 Backing Services and Scalability ...................................................................... 59 \n6.13 Identity and Access Management ..................................................................... 60 \n6.14 User Role Assignment (Authorization Management) ....................................... 60 \n6.15 SAP Cloud ALM Commercialization ................................................................. 61 \n6.16 SAP Cloud ALM Customer Onboarding ........................................................... 63 \n6.17 Hyperscaler Strategy / Region Strategy ........................................................... 64 \n6.18 DevOps and Operations Processes ................................................................. 65 \n6.19 PPMS Model ..................................................................................................... 65 \n6.20 Product Standards............................................................................................. 65 \n6.21 Cloud Native KPIs Score - Assessment ........................................................... 65\n\nPage 4:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 4 of 66 \n \nTarget Audience \nThis document is intended to inform and guide our colleagues from Customer Experiences and \nSolutions (CXS) regarding our cloud strategy and the related architecture. The paper focuses on the \ncloud-native subscription model using the SAP Business Technology Platform. Hence, SAP Cloud \nALM is in the center. ADD MORE ON DATA LAKE /LLM HERE. \nClassical backend infrastructures like SAP Solution Manager, Focused Run, W71, and CBX are not \nin focus here. \nIf you are a new engineer in CXS, please check our onboarding WorkZone. \n \nDocument Structure \n• Chapter 1: The document starts with a high-level abstract on SAP Cloud ALM… \no Business Requirements \no Engineering Culture \no Architecture \n \n• Chapters 2 to 5: Describing the aspects in detail. \no Business Requirements for SAP Cloud ALM \no Engineering Culture, Processes, and Tools \no Architecture Guiding Principles \no Architecture Decisions \n \n \n \nCXS Architecture Contacts \nSee https://wiki.one.int.sap/wiki/display/CXSDEV/HOME#HOME-ContactsforEngineersinCXS for the \nlatest status. \n \n \n \n \n \n \n \n \n \n \n \nThis document uses the terms SHALL and SHOULD as described in IETF RFC 2119: \n \nSHALL   This word means that the definition is an absolute requirement of the software \n(synonyms are the terms \"REQUIRED\" or \"MUST\", but this document uses SHALL only. \n \nSHOULD   This word, or the adjective \"RECOMMENDED\", means that there may exist valid \nreasons in particular circumstances to ignore a particular item, but the full implications must be \nunderstood and carefully weighed before choosing a different course.\n\nPage 5:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 5 of 66 \n \nForeword \nThe Intelligent Enterprise will consume the ultimate scalability and automation capabilities of the cloud \nto gain the maximum insight from its highest company value, the data accessible for this Intelligent \nEnterprise. Consequently, all applications will run in the cloud. An Intelligent Enterprise will also differ \nfrom others in that it manages and supports all these cloud applications with one application lifecycle \nmanagement (ALM) in the Cloud, the SAP Cloud ALM. \nWith thousands of live SAP Solution Managers, SAP has already proven the importance of one ALM \nin our installed base and continues to delight our customers regarding the service and support \nlifecycle. With SAP Cloud ALM's ease of consumption of SAP applications in the cloud, hybrid and \non-premise is the focus. Consequently, SAP Cloud ALM is enabled to cope with the much higher \nfrequency of innovation cycles in the cloud. Our mantra is DAILY! \nWe, the engineers, have fundamentally changed the development and deployment processes – all \nbased on the core belief of \"only one valid version of the code, no bifurcation of code , and \nconsequently no older releases anymore .\" A simplified code lifecycle  powered by Deploy with \nConfidence (https://dwc.tools.sap/). We cont inuously deliver and deploy to our live customers , \nDAILY. \nThe engineering experience has become a sustainable cloud journey for all of us, which drives \ncustomer satisfaction and employee engagement, all based on high , instantaneous adoption of the \nnewest features and robust automation , improving quality every day. We have reached a totally \ndifferent level of quality already, knowing that we will have to get much better at running > 50'000 \ncustomers soon. \nThe vision of \"powered by CALM \" goes beyond this. All transformation enablers from Business \nProcess Management and Business Transformation Services (incl . data transformation, mergers & \nand carve-outs) are powered by SAP Cloud ALM , e2e quality ensured and integrated with SAP \nService & Support.\n\nPage 6:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 6 of 66 \n \n \n     Figure 1 – Evolution of SAP Application Lifecycle Management to Business Transformation Suite\n\nPage 7:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 7 of 66 \n \n1 Abstract \nThis document provides guidance and rules for cloud development in CSUP-CXS (Customer \nExperience and Solutions). SAP Cloud ALM is SAP's cloud-based application lifecycle management \noffering. https://support.sap.com/en/alm/sap-cloud-alm.html  \nSAP Cloud ALM is built on the SAP Business Technology Platform. Implementation follows a cloud-\nnative, micro-service architecture pattern. The software is deployed into several provider accounts \nacross the globe and consumed by the customer per Software as a Service (SaaS) subscription.  \nSAP Cloud ALM is a \"Customer managed SaaS application \" and contains more than 80 \nmicroservices. Microservices are implemented in Java (node.js is possible too, but so far we avoided \nlimiting DevOps complexity). We use Deploy with Confidence (DwC), Cloud Application Programming \nModel (CAP), and SAP Cloud SDK (more details on these tools are provided in this document). \nWe use  domain-driven design  to model the microservices.  Data separation is done by creating \nseparate database schemas (HDI container) in SAP HANA Cloud - per customer tenant and domain. \nDepending on the criticality of the microservices, we can run the services on a standard SAP HANA \nservice plan or a high-availability SAP HANA instance. For resilience reasons, the HDI containers of \nthe 80 microservices are distributed across (currently) 20 SAP HANA Cloud Instances per SAP Cloud \nALM deployment. \nThis ACD … \n• Provides a summary of the business requirements of SAP Cloud ALM \n• Describe our engineering culture and process \n• Lists architecture guiding principles and  \n• Architecture decisions that we have made based on the business needs and principles \nThe document is a summary of all aspects.  Details and more frequently changing information can be \nfound via the various links in this document. \n \n \nFigure 2 - Business Target, Engineering Culture and Architecture\n\nPage 8:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 8 of 66 \n \n1.1 Business Target \nDeliver the best customer support experience in the industry. Minimize the customer effort to \nimplement (Build) and operate (Run) the Intelligent Enterprise Suite. The focus is on cloud-first and \nhybrid-cloud customers. \nThe three areas of SAP Cloud ALM and their key capabilities: \n \nFigure 3 - SAP Cloud ALM - Product Description (original slide) \n \nCurrently, we are working on onboarding the SAP Business Transformation Center (BTC) into CALM \n(wiki). That will likely be a fourth pillar besides Build, Run, and Service.\n\nPage 9:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 9 of 66 \n \n1.2 Engineering Culture - Deployment with Confidence \nSAP Cloud ALM supported the rise of Deploy with Confidence (DwC) to manage SaaS Software \ndelivery because we saw the need for such culture, processes, and tools early on. Meanwhile, DwC \nis the established Golden Path to engineer business applications on BTP. We continue to contribute \nand inner source towards DwC and related tools. More info: \n• Golden Path: Guiding Engineers to Successfully Built SAP BTP Cloud Applications \n• SAP Cloud ALM – Culture Transformation Guide \n• Deploy with Confidence (DwC) \n• More info on CALM@DwC: https://wiki.one.int.sap/wiki/x/p02-fw  \n• DORA QuickChek for CALM: https://www.devops-research.com/quickcheck.html \n \nChapter 4 – “Engineering Culture, Process, Tools” provides more details on DwC.\n\nPage 10:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 10 of 66 \n \n1.3 Architecture \nThis ACD, in combination with the wiki, is the basis for all cloud-native developments in CXS. \nThe following figure illustrates the overall architecture for CXS Cloud Services in the context of SAP \nCloud ALM. \n \nFigure 4 - High-Level Architecture CXS Cloud Services - SAP's Cloud Native Support platform  \n \n \n \nAll CALM microservices are deployed/operated in one provider sub-account per data center where \nCALM is available for customer subscription. \nThe CXS Cloud Architecture is based on multi-tenancy-enabled microservices. Multi-tenancy refers \nto software architecture in which tenants share the same technical resources but isolate data and\n\nPage 11:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 11 of 66 \n \nusers. In SAP BTP - Cloud Foundry, we have a single instance of the application that serves \nmultiple customers (tenants). See the BTP Multi-tenancy wiki page at \nhttps://wiki.wdf.sap.corp/wiki/x/dg5rbQ. We develop adhering to the 12 Factor Apps principle \nhttps://12factor.net. \n \nBuild, Run, and Service are represented by currently ~50 microservices. There are a few more to \ncome, so maybe we reach about 65 in 2022.  \nAll CALM microservices are consumed by customers in customer-owned BTP Sub-accounts. \nThis type of subscription scenario, on top of a customer-owned BTP account, is called a customer-\nmanaged SaaS application. \nLike for all customer-managed SaaS applications, the customer is responsible for the global \naccount, the subaccounts, the assignment of the IAS Tenant, the subscription, the configuration of \nthe cloud services, etc. However, where possible, we provide setup automation capabilities to \nsimplify and streamline customer tasks. \nThere is an automated CALM-customer-tenant onboarding process. Interested customers can \ntrigger it from a corresponding SAP for Me application. This will create one global account with a \nsub-account subscribed to CALM. The customer could define additional sub-accounts and \nsubscribe to SAP Cloud ALM manually multiple times. However, this is not in focus now. We head \nto the fact that each customer needs just a single subscription to CALM. \nWe head for a common architecture in SAP Cloud ALM Build, Run, and Service Delivery Cloud. \n \n  \nNumber of Customers \nexpected  \n2019:        50 \n2020:      300 \n2021:   1.000 \n2022:   3.000 \n2023:   5.000 \n2024:   8.000 \n2027: 50.000 \nUnderlying \nPlatform/Application Server  \nSAP BTP / Cloud Foundry environment; more than 50 microservices \nimplemented in Java. CAP and HANA Cloud. Cloud SDK is \nrecommended but not mandatory \nProduct Type Customer-managed SaaS Application \nDelivery Cloud Delivery: no deployment into customer accounts; consumption \nvia subscription; no on-premise delivery \nCommercialization: \nSAP Cloud ALM and Cloud Service Delivery are part of the customer's SAP Cloud Subscription contract. \nMain Use Cases / Functional Scope \nThe software provides all features so that the customers can manage their cloud and hybrid solutions.\n\nPage 12:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 12 of 66 \n \nCXS Cloud-Development Stack - Built-on BTP \nTo implement the microservices, we decided for the Built-on SAP BTP technology stack. It is Open \nand Opinionated and supports SAP-centric cloud-native solutions.  \n \nFigure 5 - CXS Cloud Stack based on SAP BTP Strategy Paper - Slides \n \nThe software stack enables programming services with the so-called Cloud Application Programming \nModel of SAP BTP. \n \nThe SAP Cloud Application Programming model is SAP's way of guiding you through cloud \napplication development by offering a consistent end -to-end programming model that includes SAP \nand open -source tools, languages, libraries, and APIs tailored for service and application \ndevelopment on the SAP Business Technology Platform.  \nYou can say it is both \"open\" and \"opinionated\", because while it does give you flexibility and choice, \nit also marks a clear golden path through best practices & guidelines. For example, you can use \nSAP Business Application Studio , Eclipse, Visual Studio Code , IntelliJ IDEA , or any other \ndevelopment tool you choose. \nThe cloud application programming model saves from adding boilerplate code and lets you focus on \ndifferentiating and personalized features specific to your business needs.  \nFor more information, see help.sap.com and Golden Path: Guiding Engineers to Successfully Built \nSAP BTP Cloud Applications \nFollowing the CAP model, each CXS microservice has the following high-level integration \narchitecture:\n\nPage 13:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 13 of 66 \n \n  \nFigure 6 - CALM microservice architecture \n \n \nDetails on investigated alternative architecture stacks can be found in the architecture decision \nrecord ADR-0010 Choice of Technology Platform & Runtime for SAP Cloud ALM SaaS Application\n\nPage 14:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 14 of 66 \n \n2 Business Requirements for SAP Cloud ALM \n \nThe scope of SAP Cloud ALM is to: \n• Deliver the best customer support experience in the industry. \n• Minimize customer effort to adopt and operate the Intelligent Enterprise Suite. \n• Reduced total cost of implementation and end-to-end Operation. \n• Consolidate all the solutions that help SAP customers implement faster and operate \nbetter. \nThe characteristics of SAP Cloud ALM are:  \n• It is cloud-based to achieve an exceptional end-to-end support experience for multi-cloud \nand hybrid SAP solutions.   \n• Free of charge for the customer. Usage rights are already included with SAP Enterprise \nSupport. \n• Support SAP to attract cloud-only and cloud-first customers and to keep customers for life.  \nThe new cloud offering s can be better understood when bringing them into the relation/context of \nSAP Solution Manager. SAP Solution Manager 7.2 is the tool of choice to provide application lifecycle \nmanagement for all SAP on -premise products, partially also hybrid landscapes.  We assume cloud-\nonly- and cloud-first customers have only low or no  on-premise footprint. Such customers will not \noperate an on-premise SAP Solution Manager system. \nTherefore, SAP Cloud ALM, including Cloud Service Delivery, was introduced to cover that area. SAP \nCloud ALM capabilities can be grouped into Build (Implementation), Run (Operation), and Service. \n1. SAP Cloud ALM Build (CBuild / Implementation) covers the business process \"Requirements \nto Deploy\". It consists of several features, for example, process management, implementation \nprojects, change and deployment management, test management, etc.  \n \nCALM Build – Process Model  \nCALM Build – Overview Screen \n \n2. SAP Cloud ALM Run (CRUN / Operations) covers the business process \"Predict to Avoid\". It \nconsists of features like integration monitoring, business process monitoring, user monitoring, \netc.  \nCRUN is handled by Technology Guideline 11 (TG11); Slides and Demo recording from \nS/4HANA Cloud Day.\n\nPage 15:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 15 of 66 \n \n \nCALM Run Integration Monitoring \n \nIntegration Monitoring - Analytics \n \n3. SAP Cloud ALM Service covers the service delivery center, service execution engine, \nservice/check authoring, template asset management, issue and action management, and \nservice results. SAP Cloud ALM Service offers features for SAP employees (internal facing) as \nwell as for SAP Cloud ALM customer users (external users). There are several communication \nand integration scenarios between internal-facing and external-facing applications.  \n \n \nCALM Service – Launchpad Tiles \n   \n  Service Explorer – Services \n \n \nService Delivery Center – Overview\n\nPage 16:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 16 of 66 \n \nPress Release: SAP Cloud ALM Enhances Support for Cloud-Based Solutions on 05/2020 \n \nWALLDORF — SAP SE (NYSE: SAP) announced multiple updates to the SAP Cloud ALM \nsolution today. The cloud-based application lifecycle management (ALM) solution helps \ntrack and manage the needs of customers of cloud solutions from SAP.    \nhttps://news.sap.com/2020/05/sap-cloud-alm-enhances-support-for-cloud-based-solutions/ \nAs a result of the update, SAP Cloud ALM will support additional SAP \nsolutions – including SAP S/4HANA Cloud, SAP SuccessFactors solutions, \nSAP Customer Experience solutions, and SAP Ariba solutions. SAP Cloud \nALM was redesigned with improved capabilities to simplify the \nimplementation and operations experience as more customers move to the \ncloud. \n\"As the cloud landscape advances and cloud solutions become more important, it's critical to continuously \nupdate SAP Cloud ALM to meet expectations of a cloud customer mindset,\" said Marc Thier, SVP of \nApplication Lifecycle Management, SAP. \"Over the last year and a half, we've focused on simplicity and \nevolving SAP Cloud ALM so the platform can be used by business and IT roles with no need for technical \nknowledge.\" \nSAP Cloud ALM benefits customers during various innovation cycles, including: \n• Easy deployment for companies that choose SAP S/4HANA Cloud and SAP \nSuccessFactors solutions: SAP Cloud ALM helps with team onboarding and fit-to-\nstandard workshops for configuring the customer's cloud solution. It tracks project progress \nby guiding customers through the implementation process and reports project status \nautomatically. \n• Integration for customers who use more than one cloud service: When managing \nmultiple cloud services – such as SAP S/4HANA Cloud, SAP SuccessFactors solutions, or \nSAP BTP Integration Suite – customers must monitor the integration themselves, a process \nwhich SAP Cloud ALM can help them manage. \n• Outlook for managing hybrid solutions: Customers adopting the Intelligent Enterprise \nwill see increased support for on-premise solutions like SAP S/4HANA. Monitoring the \nintegration of on-premise or other cloud products is an additional discipline SAP Cloud ALM \nwill focus on in the future. \nCustomers who subscribe to a cloud service from SAP that includes SAP Enterprise Support cloud editions \nhave access to SAP Cloud ALM at no additional cost. [Update 2022: Enterprise Support customers are entitled \nnow, too] \nSAP is dedicated to simplifying and improving users' journeys to cloud-based solutions and supporting \ncompanies of all sizes in their goal of digital transformation. In extending full ALM support, the current update \nto SAP Cloud ALM takes an important step toward a more agile, innovative future. \nRead more about SAP Cloud ALM\n\nPage 17:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 17 of 66 \n \n3 Powered by CALM \nPowered by SAP Cloud ALM is a new branding for onboarding new use cases on the SAP Cloud \nALM platform. We open our CALM platform to make integration and delivery easy for all development \nteams of SAP (so not only CXS). By this reuse we can simplify customer experience and offer all-in-\none services under SAP Cloud ALM. This is the target of Powered by CALM  is enabling any \norganization inside SAP to be part of one (or more) of the three delivery channels that are \nPowered by SAP Cloud ALM. In combination, the channels simplify the user experience (for SAP \nand Customers). \nThree examples, one for each channel that we offer, are: \n1. PALM: We target the broad adoption of SAP Cloud ALM (CALM) and continue to serve \nour customers who have not yet onboarded and started their SAP Cloud ALM journey. \nWe solve this challenge by extending our platform to a new SaaS solution \nnamed Public ALM (PALM). Our paved road approach helps to onboard scenario \nowners to Public ALM, which is then accessible by our customers' Universal ID through \nSAP for Me. Process Navigator by SAP (formerly known as Best Practice Explorer), \nReadiness Check, Roadmap Viewer, and Fiori App Library are the first use cases on \nthe Public ALM infrastructure. Those scenarios offer an easy entry point for customers \nand will guide them finally to onboard to a full CALM tenant: \n2. CALM: SAP Business Transformation Center (BTC) gets part of the CALM delivery \nchannel. BTC customers will benefit from seamless integration with CBuild \nimplementation project capabilities. So, the business and data transformation/migration \nfrom i.e., ECC to S/4HANA can be simplified based on Powered by SAP Cloud ALM. \nOur customers will benefit from seamless implementation project capabilities to plan and \nrealize their data transfer from i.e., ECC to S/4HANA. \nReadiness Check and Roadmap Viewer join beside PALM also CALM, reusing the \nmicroservice for both channels. Onboarding Content Framework from the S/4 HANA team \nwill join CALM and integrate with the SAP Cloud ALM implementation project to guide the \ncustomer with streamlined UX focusing on SME (small and medium-sized) customers. \n3. XALM: Service Delivery for SAP employees serves via one cross-Cloud ALM (X-ALM) \ntenant for all SAP-internal stakeholders from Premium Engagement, Preferred \nSuccess, and Enterprise Support, who digitize, develop, and deliver services to all SAP \ncustomers. The XALM tenant can collaborate with the customer users in the many \nCALM tenants using event-based communication (seamless between the microservices, \nacross customer tenants, and even across data centers). This can be used to centrally \nmanage/author SAP content in XALM and then distribute the content to all customers in \nCALM/PALM (content is distributed).  \nSeveral microservices that are used for XALM are also used in the CALM delivery \nchannel, for instance, Service Delivery WorkCentre. – and all integrate with task \nmanagement that was initially created as a CALM-Build microservice. \nAs PALM, CALM, and XALM are built on the same platform, all teams benefit from the same proven \nengineering principles, daily delivery, tools, and simplified processes that we invented for CALM - in \nshort, The Paved Road Approach . On top of being based on one standardized infrastructure and  \nreuse services, the integration of scenarios across and within PALM, CALM, and XALM is simplified. \nIn sum, \"Powered by SAP Cloud ALM\" is more than its parts. All teams across SAP are welcome \nto contribute application lifecycle-related capabilities. The Paved Road approach enables teams \nto deliver innovation continuously and sustainably.\n\nPage 18:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 18 of 66 \n \n \nFigure 7 – Powered by SAP Cloud ALM Building blocks \nThe picture above shows significant building blocks and layers that constitute Powered by SAP \nCloud ALM concept/branding.  \n \nIf a use-case should join PALM, CALM, XALM, or a combination of these, needs some \nexplanation: \n1. Integration with PALM: External teams often join from the SAP for Me sphere, \nneeding a replacement for NEO or ABAP-based backend implementations. The teams \nlook for ways to implement business logic in the cloud (Java/Node.js) and use HANA-\nbased persistence. They need a reliable, fast, flexible delivery process and operations \nmodel. \nHence, the likely starting point for them would be PALM. However, Powered by CALM \nisn't limited to PALM. The microservices developed for PALM can also run in CALM \nand XALM after minor adaptations that usually do not need a fork of services/repos \n(e.g. can work with operation/configuration toggles). \nCheck the PALM wiki page for more details.  \nMost applications that start in PALM will also want to join the CALM delivery channel: \n2. RECOMMENDATION: Direct integration with CALM delivery channel: The teams \ncan join CALM directly without integrating with PALM (For example, the CLM Customer \nLandscape App). \nWe target to guide all customers to their CALM tenant with the benefits of deep \nlandscape integration and a broader user base (not just restricted to ~500k S-Users \nworldwide). In most cases, apps in PALM will have a considerable benefit when \ndeployed to CALM with a much deeper integration into the customer processes. We \naim to have the most customers in CALM in the next few years (all relevant 74.000 \ncustomers are entitled already!). Reusing code/microservices across PALM and CALM \ncan mostly work (the main challenge will be the different user base and, hence, \nauthorization checks and the weaker data separation/security situation caused by the \nshared cross-customer-account setup of PALM that is inherited by SAP for Me). \nHowever, it is still an additional effort to operate and test. Therefore, a business \ndecision is made case-by-case if a PALM deployment in addition to CALM makes \nsense. In many cases, a focus on CALM can be the better approach. \n3. For scenarios that require collaboration between Customer and SAP, teams can \nleverage the combination of CALM and XALM (see the Service Delivery use case).\n\nPage 19:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 19 of 66 \n \n \n \nFigure 8 - Relation of SAP for Me, PALM, CALM and XALM. The diagram also shows the \ndifferent user bases (Universal ID / Customer IAS Tenant in CALM / SAP-internal IAS tenant) \n \nCo-Active Coaching to the Paved Road Approach \nCo-active means being in action together. SAP Cloud ALM's cloud native journey has been a success \nstory, continuously improving the solution and delivering stunning quality and innovation speed to \nbenefit SAP Cloud ALM customers. \nThe Paved Road Approach includes simplified processes, an agile toolset, and cloud engineering \nwith \"daily\" as the golden principle; defining the mantra of \"automate all you can automate\" reduces \nmanual toil for engineers, drives quality, and minimizes customer support tremendously, which then \nleaves time and capacity for continuous innovation. \nDetails and the latest updates on Powered by SAP Cloud ALM: https://wiki.one.int.sap/wiki/x/64zNug\n\nPage 20:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 20 of 66 \n \n4 Engineering Culture, Process, Tools \nThe SAP Cloud ALM Engineering Culture is based on Deploy with Confidence. An overview can be \nfound on the following slide: \n \nFigure 9 - Engineering Culture and Customer Experience \n \nDeploy with Confidence covers the whole process from Customer Requirement over build and test \nto Operation. DwC Documentation: https://dwc.tools.sap  \nTechnology is an enabler to solve problems, but it's people who truly solve problems. This aspect is \noften forgotten. DwC starts with the culture first, having three aspects: \nSingle Trunk (single code line): Eliminating long-living feature branches leads to massive \nsimplification in the development: You don't need double maintenance of the code. \nTest and integration of the new code into one SaaS application happens faster and helps to get \nimmediate feedback on the current state of the application.  As a result, we see a reduction in \ndevelopment complexity and, hence, costs. \nWhen following the single trunk approach, we have to hide incomplete functionality from customers \nbehind a feature toggle. Thus, we end up with the second principle: \nRelease feature toggles: Patches and features are delivered in one unique codeline. Hence, there \nmust be other ways than branches to control the visibility of functionality for the customer users. \nRelease-feature-toggles are the means to control software release efficiently in a cloud-native \nenvironment. \nDaily Delivery to Production: Let us assume you need to deliver a critical bugfix. Of course, you \nneed to be able to provide it as soon as possible, and the reason is that our customers expect this.  \nTherefore, the delivery is done at least daily (for urgent hotfixes, SAP Cloud ALM can deliver a\n\nPage 21:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 21 of 66 \n \nchange to production in 30 minutes, including end-to-end testing, deployment, and compliance). \nThis Daily principle drives the automation of testing and delivery activities. \nThese cultural principles have proven to be important success factors for companies like Google, \nNetflix, and Amazon. \n \nFigure 10 - Cloud Engineering Culture at SAP Cloud ALM \n \nThe feature delivery frequencies at SAP Cloud ALM \n \nFigure 11 - Feature delivery frequencies at SAP Cloud ALM\n\nPage 22:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 22 of 66 \n \n4.1 Single Trunk Delivery Model \nInto the single codeline, changes are frequently merged (\"merge-to-main\"). The visibility for customer \nusers (but also for testing) is controlled via release feature toggles. As the visibility of the changes \ncan be managed by toggles, the code can be released to production at any time. Hence, we do so as \nthis simplifies integration and lifecycle management processes. There is just one unified process for \nfeature delivery, bugfix, and hotfix needed. \n \nFigure 12 - Deploy with Confidence - Single Trunk and Daily Delivery \nA detailed explanation of how Single Trunk fosters continuous integration is provided by Martin Fowler \nat Continuous Integration (martinfowler.com). The article emphasizes the need to merge all changes \ninto the main branch often (at least daily). The daily delivery dashboard can be used to monitor how \nlong each commit takes to reach production. \n \nFigure 13 - Frequent merges to the main branch in DwC > Amalthea > Deliveries > Insights\n\nPage 23:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 23 of 66 \n \n4.2 Release Feature Toggles \nA Scrum Team (the PO usually) can decide to deliver functionality into production at any time (given \nall product standards are checked automatically and automated tests assure stability).  \nMaking the new functionality visible to all customers might need to be done in a consolidated w ay \n(Training effort, rollout, etc.). Details: https://martinfowler.com/articles/feature-toggles.html \nThat will also depend on the type of change you do. For E.g., a performance improvement can be \nactivated immediately from a Release-Management perspective. \nThe DwC Feature Cockpit helps to keep an overview of the toggles: Feature Toggles - Amalthea\n\nPage 24:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 24 of 66 \n \n4.3 Daily Delivery to Production \nThings you do more often create less stress than things you do only occasionally. \nOnly daily (or more often) delivery to production brings teams into a continuous, sustainable change \nmode. Teams will use their engineering skills to automate the process. \n \nFigure 14 - Why daily? Big waterfall | small waterfall | no waterfall \n \nOur Mission: Build Great Software Faster. \nWhy build faster at all? Answer: Because our customers expect that from us! \nBy fast, we do not mean the number of lines of code that are produced by the engineering team. \nAnd we also do not mean the number of features. These absolute numbers can be measured \neasily, but they do not provide any information about the value for our customers. We focus on the \nspeed of the feedback loop with the customer and the users because this feedback loop allows us \nto measure the value. That measurement is challenging, but the prerequisite is making a service \navailable to users. Once users can consume a service, usage measurements, net-promoter scores, \ninterviews about the experience, and more can be done. If a feature is implemented but not \ndelivered, there can be no value and no feedback! \n \nGrowing the SaaS solution daily – The Solution Vector Concept \nWhen the customer SaaS solution is updated daily, one needs a very robust update mechanism \nwith real zero downtime for the customer end users. There shall be no impact on any user session \non the update! This can only be achieved by being able to operate the old version and the new \n(daily delivered) version in parallel for some time (lifetime of user sessions) \nWhen a daily delivery is done for the day, the previous version is still active for end-users. In parallel \nto the day-1 version, the new one is deployed and tested. Tenant Lifecycle activities like database \nschema updates are performed. Once all is set, new user sessions can log in to the new version. \nThe new version is most likely slightly larger in code and feature set (feature toggles!). Only new\n\nPage 25:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 25 of 66 \n \nuser sessions will see that new functionality, including consistent switching of documentation, \nauthorizations, etc.  \nWe call the combination of toggle set, microservice versions, documentation, etc., a solution vector. \n \nThe Confidence in Deploy with Confidence is about the Interface Compatibility between the \nMicroservices, their UI, and Database: Only complete Vectors and no Intermediate States need to \nbe regarded (Exponential Test Complexity otherwise!) (External APIs must be compatible, no \nchange here! > Versioned) \nGoogle: \"There is no compatible change. There is only change! And every change can break \nsomething. Correctness is an illusion. Relevant is fitness for release.\" \n \n \n4.4 Feature-Driven Development Process \nBased on the cultural values, a cloud-native feature delivery process is defined.  \n• It starts with the definition of a feature.  \n• The features are developed behind a feature toggle and in a single codeline.  \n• Fast and compliant build pipelines are very important to achieve daily delivery.  \n• Fully automated end-to-end tests validate correctness from the customer's perspective. \n• We activate features when we are ready and when it's best for the customers, no stress. \nQuality first. \n• After the features are activated, we can measure the usage and success of the feature and  the \nvalue that the feature delivers for the customer. \nAll project members, including developers  (\"engineers\"), product owners, quality engineers, user \nassistants, and so on, are involved in the feature-driven development process.\n\nPage 26:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 26 of 66 \n \n \nFigure 15 – Feature-Driven Development Process of SAP Cloud ALM at DwC \n \nAs the process is essential to understand, here is a diagram with more details: \n \n \nFigure 16 - Feature-Driven Development Process of SAP Cloud ALM at DwC - Details\n\nPage 27:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 27 of 66 \n \n4.5 Feature-Driven Development Process at SAP Cloud ALM  \nBased on the templates co -developed by DwC and CALM, SAP Cloud ALM has the following \nlandscape setup for the daily delivery process. \n \nFigure 17 - Deploy with Confidence - CALM Landscape Setup \nMore info on CALM@DwC Landscape Setup at https://wiki.one.int.sap/wiki/x/p02-fw  \n \nThe feature delivery process at SAP Cloud ALM as a step-by-step guide: \n \nFigure 18 - Step-by-Step Guide for Feature Delivery  \nProcess details: https://wiki.one.int.sap/wiki/x/p16Ti\n\nPage 28:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 28 of 66 \n \n4.6 Daily Delivery Process for CALM Engineers \nThere is a training session for new teams at SAP Cloud ALM: \nDaily delivery Together: https://wiki.one.int.sap/wiki/x/DmSngw  \nThe session can be provided by the delivery team and shows how all engineers should work together \nfor high-quality and smooth delivery. \nThe promotion from development to production can be followed live via the Grafana Delivery \nDashboard: \n \n \nFigure 19 - Promotion Flow of PALM, CALM, and XALM.  \nCommunication between engineers and delivery team: Follow Slack channel #sap-calm-delivery \n \n4.7 Engineering View on Tools for Delivery \nDevelopers will work on their microservice GitHub repos. At SAP Cloud ALM , engineers can use \nVisual Studio Code, SAP Business Application Studio, Eclipse, or IntelliJ. \nStep 1: When a change of the microservice is ready from the developer's perspective, this change \ncan be merged to the main branch : The single trunk / main branch is updated. This should \nhappen at least once a day  to avoid big -bang merges, merge conflicts, long -living feature \nbranches, and hidden code. \nStep 2: The merge will trigger the component build pipeline. Any build tool that can do SAP-compliant \nbuilds (e.g. , xMake, including artifact upload to Nexus)  can be used . SAP Cloud ALM  \npipelines include many more steps for test automation, etc. These are independent of DwC.  \nCALM uses Piper general-purpose pipelines as  templates and optimizes them for \nperformance and throughput. Several JaaS instances exist: SERVICE  CBUILD  BTC  CRUN \nStep 3: One of the last steps in the pipeline is to inform the Deploy with Confidence infrastructure \nabout the successful build. This step will trigger the Deployment and Activation of the new \nmicroservice version within the SaaS landscape. \nStep 4: The pipeline trigger is received by Themisto, and it is evaluated where (in which stages and \nspaces) the new version needs to be available . Themisto is also called \"the brain\" behind \nDwC, as Themisto is responsible for calculating and triggering all needed landscape \nchanges. For instance , Themisto informs Autonoe about the required changes  and (not \ndepicted) also triggers a database schema lifecycle component called Euporie.\n\nPage 29:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 29 of 66 \n \nStep 5: Autonoe takes care that the needed deployments (e.g. , via MTA Deploy), unemployments, \nand routes are configured in SAP BTP Cloud Foundry. Cloud Foundry applications are \noperated in different spaces to separate DEV/TEST/PROD from each other ( significant for \nauthorization management - not every Engineer should have access to productive customer \ndata). \nStep 6: Once all deployments are done, Themisto gets the trigger to inform Jupiter about the new \nLandscape vector that can be used by SaaS users. Jupiter is an extended Application router \nthat takes care to authenticate users and route access to the relevant apps in the appropriate \nspaces. \nStep 7: SAP Engineering can configure and control this flow with a visualization tool called Amalthea: \nhttps://dashboard.dwc.tools.sap/org/CALM/landscape/overview  \nThe following figure shows the process across the DwC architecture. The image includes Cloud \nFoundry deployment. Deployment to Kubernetes is possible as well. \n \n \nFigure 20 - DwC Architecture, Runtime, and Design Time \nDetails about the Mechanics with Vectors, Routing, Deployments, etc.: \nhttps://wiki.one.int.sap/wiki/x/Gal-hQ  \n \nAnother view on DwC and CALM Architecture is in a public blog: \nhttps://blogs.sap.com/2020/06/15/quality-innovations-at-sap-cloud-alm/\n\nPage 30:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 30 of 66 \n \n4.8 Tools for DevOps Monitoring \nThere is a Grafana Dashboard providing several KPIs and links to the various monitoring-related tools \n \nFigure 21 - Engineering Dashboard of SAP Cloud ALM - Grafana \nFor colleagues new to CALM, make sure you tried out the link s, at least the ones indicated with the \nyellow star icon. There, you can also learn how to get access to the tools, etc. \nThe wiki page https://wiki.one.int.sap/wiki/x/9pO6jg provides some screenshots as a fast overview of \nwhat data we can see in what tool. \n \n4.9 Carpe Diem – Our DevOps Model \nOur DevOps culture contains four key aspects: \n1. Live Site First \nThe imperative for the whole organization – including management: If the live site is down (or \nrelated processes, like daily patch delivery, are blocked), there is no other activity more \nimportant than bringing the service back up. \n \n2. Shepherd Your Change \nAs the developer of a feature, you are responsible for getting your feature to production, \nincluding delivery and operations. \n \n3. Automation Is Key \nManual processes are error-prone, slow, and do not scale. Automation in testing, deployment, \nand operations is critical for a cloud service at a competitive cost. \n \n4. Measure and Learn \nDeliver often and learn from it. Constantly collect and proactively analyze metrics to gain \ninsights for the future backlog.\n\nPage 31:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 31 of 66 \n \nThese are sometimes too abstract rules. So, we have details of how exactly every CALM Engineer \ncan support these values. The rules are documented in  \nGuidance for CALM Engineering - Engineering Excellence by Continuous Delivery to Production, \nDaily \nRules include: \n1. Care for CALM. We are all one SaaS solution. Act with care for the overall solution. Contribute \nas a multiplier. Support the Carpe Diem Process. \n2. Support the Daily Delivery - Monday to Thursday 08:20 - 10:00 CET a Level of Stability is \nRequired \n3. Merge your branches to the main branch often. \n4. Keep your component build pipeline green! \n \nAs rules alone are not enough, we established an entity taking care of CALM: The Carpe Diem team \n \nDaily life in a live cloud-native environment creates daily opportunities but also daily \nchallenges. To simplify the lives of our Cloud Native Engineers and increase transparency and \ncollaboration, we will combine automation, daily checks, best practices, and a we-all-care-\ntogether mindset. We all will be working together as ONE team globally and taking care of \neach other – cross-location and cross-time zone – to ensure a smooth start of the business day \n– no matter where and when.  \n– Carpe Diem! \n \nOur wiki describes how the Carpe Diem team, the Manager on Duty (MoD), and the Scrum \nteam on Duty (SToD) work: https://wiki.one.int.sap/wiki/x/Y5V8hw\n\nPage 32:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 32 of 66 \n \n5 Architecture Guiding Principles \nThis chapter lists the guiding principles for CALM architecture. Whenever we make architectural \ndecisions, we validate the decision options against these principles. \nBased on these principles, many small and large architectural and design decisions are made. Many \nof these decisions can be found in this ACD.  \nAs we are in a dynamically changing environment, we use Architecture Decision Records (ADRs) to \ndocument decisions that are not inside this ACD.  \nCALM ADRs: https://wiki.one.int.sap/wiki/x/-CHdtw  \n \n1. We do Software Engineering \nWe do Software Engineering: Programming a scaling product by many humans over time! \n \nTime \nFor the life span of the product, we must be able to change all aspects. CALM is there to last for \nmany years and decades, as the customer need for lifecycle support will likely not end. Hence, \nCALM architecture and processes must be planned accordingly to be sustainable and changeable. \nWe do not provide just a PoC or Beta. We provide continuous, infinite innovation. \n \n \n \nFor CALM, we decided on Software Engineering, hence the infinite game! Thanks, Simon Sinek, for \nformulating that!  \nWe invest enough time into your culture, processes, and tools to enable your services to grow and \nevolve! For instance, Daily Delivery guides us here. Can we deliver Daily efficiently  now and in the \nfuture? If not, we invest in time.  \n \nScale \nSupporting all customer segmentations and sizes in all regions, 5-digit number of accounts \nThis support requires sub-linear scaling for any activity, especially human activity. \n \nProviding a scaling product over time is our core target and principle.  All other principles can be \nmapped back to these core principles.\n\nPage 33:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 33 of 66 \n \n2. Shift Left Principle \n \nShifting left means doing any quality-related activity as early as possible in the development process. \nAs the earlier issues are found, the easier it is to fix them or even automatically avoid that they happen \nin the first place. The earlier you can do a test (in the diagram left), the more efficient it becomes in \nthe long term. That's why it is called shift left.  \nThis finally brings scale as manual checks and operations can be avoided. \n3. Suite of Microservices  \nApplications SHALL be organized in microservices built around business capabilities; \ncommunicate mostly asynchronous, stateless, and scalable. \n \nCALM is designed as a suite of microservices. Microservice guiding principles: \n• Each service has a separate persistency that is usually not shared with other services \n(resilience, decoupling, etc.). \n• During runtime , the microservices are independent of the availability of the other \nmicroservices; communication is done via synchronous APIs and (preferred) asynchronous \nmessages (events based on Kafka infrastructure). \n• Communication from a UI SHOULD usually only need one \"hop\". Avoid synchronous \ndependencies between microservices (resilience – if a consumed service is down, avoid that \nthe calling service is not available, performance) \n• Favor asynchronous, message-driven communication patterns ( benefits are a flexible \nprocess flow, components can be exchanged, and decoupling) \nNote that there are still software lifecycle dependencies between the microservices. And since \nasynchronous communication might take some time (in worst-case scenarios, where related service \nhas an unplanned downtime), these dependencies are living even longer  than in synchronous \nscenarios.  \nExample: There is a new text field in the Notification service that can be maintained by customers \nvia the Customer UI5 app. The text field is stored in the Product Management service. Already by \nthis simple example, these services (although decoupled from a runtime perspective) get very much \nrelated on a semantical level: Only if the field is available in the notification and product service  then \nthe field should be offered to the customer (otherwise, a user would enter that field, but it cannot be \nhandled consistently). \nThis advanced dependency handling is supported by Deploy with Confidence. \nSAP Cloud ALM microservices are reviewed by the architecture board. The review process \nand list of microservices can be found at: https://wiki.one.int.sap/wiki/x/QNxxiQ\n\nPage 34:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 34 of 66 \n \n4. Domain Driven Design and API-First Methodology \nAPI first, Modeled Microservices and aligned Domain Models as best practices \nThis means APIs must be kept stable. \nWe strive for an aligned domain model for every development. \nSAP Cloud ALM adopts the Domain Driven Design approach to understand and design domains and \nbounded contexts. This is a prerequisite for us before the development design and implementation \nphases can start.  \nAn API-first approach means that for any given development project, your APIs are treated as \"first-\nclass citizens.\" Everything about a project revolves around the idea that the product and, hence, APIs \nwill be consumed by client applications. An API -first approach involves developing APIs that are \nconsistent and reusable, which can be accomplished by using an  API description language  to \nestablish a contract for how the API is supposed to behave.  Establishing a contract involves spending \nmore time thinking about the design of an API. It also often involves additional planning and \ncollaboration with the stakeholders , providing feedback on the design of an API before any code is \nwritten. \nPublic CALM APIs have already been released in the SAP API Business Hub. API Roadmap. \n \nSAP Open Connectors can be utilized to connect SAP Cloud ALM. Open Connector is a component \nof the SAP Integration Suite , which helps to interface various SAP and non -SAP products quickly. \nSAP Open Connectors comes with a large catalog of pre-built connectors, including JIRA. An example \nintegration of SAP Cloud ALM with Jira is described in this blog. \nDomain Driven Design approach and API-first methodology are detailed in the wiki page: \nhttps://wiki.wdf.sap.corp/wiki/x/dsj6q\n\nPage 35:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 35 of 66 \n \n5. Testability \nChoose architecture decisions that support good test coverage and simplify the setup of tests. \nFor example, we use the subscription model with the capability to have many independent test and \ndemo tenants for our end-to-end tests in CALM. To make that work, we use schema separation per \ncustomer per domain (only exceptionally shared schemas across tenants are allowed). \nTestability is relevant for the complete technology stack and on all layers of the test pyramid. \n \nDetails see  \n• E2E Test Wiki: https://wiki.wdf.sap.corp/wiki/x/JPWJhw  \n• Cloud Quality wiki: https://wiki.wdf.sap.corp/wiki/x/Vwime  \n \n6. Secure by Default \nSecure by Default: Built-in security is recognized as a key challenge. - No compromises!  \nWe got the feedback from Hacker Simulation: \"We see security is already from a concept point of \nview designed into the solution\". This is what we head for and want to keep! \nTechnically, Legally, and Trust-wise, we need to ensure that customers can accept our architecture \nand the risks.  \nWe follow the Secure Software Development and Operations Lifecycle: SDOL \n \n \n7. Simplicity for Customer \nA seamless, easy onboarding experience is needed. → We go the last mile (if needed, also for \nother groups at SAP). For instance, CALM has its own automated onboarding process. For details, \nsee Chapter 6.16\n\nPage 36:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 36 of 66 \n \n8. Works aligned with SAP technology guidelines \nSAP Cloud ALM is embedded in the end-to-end Technology Guidelines as an orchestration layer: \n \nFigure 22 – Technology Guideline: Overall Architecture Diagram of ALM cluster \nSee Sharepoint for a better resolution of the diagram \nDetail description of the technology guidelines: \nhttps://github.tools.sap/CentralEngineering/TechnologyGuidelines/blob/latest/tg31/README.md \n \n9. Consistent Architecture across Areas \nConsistent architecture across markets is an asset.  \nSimilar things SHOULD be done the same way across the markets.  \nWe align and decide together (Identity, Launchpad, Landscape, Connectivity, Messaging/Eventing, \nOnboarding, Commercialization Model, etc.) \n \n10. TCO \nTCO is our TCO!  \nDecisions must lead to the lowest possible infrastructure costs for customers and SAP. \nWe carefully monitor the TCO of SAP Cloud ALM and take active measures to optimize. Especially \nwith many tenants, we target a low TCO per tenant. The following diagram shows the current \nextrapolated cost per tenant when the number of tenants grows.\n\nPage 37:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 37 of 66 \n \nThe main cost drivers are HANA Memory and cloud foundry application runtime. SAP Cloud ALM \nmonitors the consumption and costs thoroughly. TCO Dashboard: \nhttps://internal-dashboards.qod.cxs.only.sap/d/iygGLzAMk/tenant-monthly-shared-cost-estimation?orgId=1  \n \n \nFigure 23 - Infrastructure Costs Dashboard for SAP Cloud ALM (2022-03-02) \n \n \nFigure 24 - Infrastructure Costs Dashboard for SAP Cloud ALM (2023-02-15) \n \nDetails: See TCO considerations for SAP Cloud ALM in the wiki: \nhttps://wiki.one.int.sap/wiki/x/VvH7jg\n\nPage 38:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 38 of 66 \n \n11. Use the most appropriate toolset \n \nUse the most appropriate toolset for the job, adapt the architecture \n \nA default architecture path is defined in this ACD. \nTeams can use different than the established technologies (since we use microservices, that is, in \nprinciple, possible). BUT maintenance, integration, and onboarding must be covered by the teams - \nwith proper TCO/TCD.  \nRemain flexible of the Technology Stack: Consider frameworks that provide flexibility \nregarding the underlying technology stack. Avoid vendor lock-ins. \n \nSignificant architecture decisions MUST be reviewed by the CXS Architecture board,\n\nPage 39:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 39 of 66 \n \n6 Architecture Decisions  \nThis chapter lists architecture and organizational decisions for SAP Cloud ALM.  \nBesides the basic decisions in this ACD document, you can find further decisions in our Architecture \nDecision Records (ADRs) at: https://wiki.one.int.sap/wiki/x/-CHdtw  \nOver time, we will streamline the decisions documented in this ACD and move more details to the \nADRs.  \n \nDesign decisions can be grouped based on the layer they influence: \n \nThe following table summarizes the main technology stack decisions. \nArchitecture Area Layer Technologies to be Used \nCloud Development \nStack \nCross Built-on SAP Business Technology Platform – Cloud Foundry \nenvironment \nDevelopment \nEnvironment \nCross Visual Studio Code, Eclipse, SAP Business Application Studio \nLifecycle \nManagement \nCross GitHub, Piper-based pipelines executed on JaaS. Deploy with \nConfidence for Daily Deployment \nClients Front End HTML 5 Clients (modern web browsers) \nPresentation Layer / \nUser Interface \nFront End SAP UI5 (Java Script), Fiori for Tools (CRUN), Fiori (Service and \nCBuild); CDM Fiori Launchpad as a central entry point. \nBusiness Logic \nLayer \nBusiness \nLogic \n• Cloud Application Programming Model (CAP)  \nHANA CDS Views with OData Services on Top, Java Applications \nbased on CAP.  \nJava Spring Boot to extend CAP  \n• Node.js for Service Delivery Cloud was discussed as a valid option. \nBut not chosen (surrounding teams were trained in Java already). \n• Reuse SAP Cloud SDK and Programming Guidance \nOther models need approval from the CXS Architecture Board. \nData Persistency Persistency • Default: HANA Cloud:  HANA with HDI container as data separation; \nBe careful with costs (1GB HANA is 10 up to 30 € / month).  \nThe recommendation is to stick to CAP/CDS (as much as possible, \nwithout introducing HANA-dependent SQL) to allow database-\nindependent design time. \n• SAP BTP Document Management Service (MongoDB) for large \nBlobs like attachments\n\nPage 40:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 40 of 66 \n \nIntegration \nMiddleware  \nConnectivity • BTP Kafka for asynchronous / Event Based communication  \n• between our microservice (service-to-service inside the mesh) \n• between our data centers (service-to-service across our \nmeshes) \n• between Cloud-LoBs & CALM \n• Jupiter Router for provisioning of external (synchronous) API. \nJupiter has a cheap way to secure, measure, meter, etc. APIs can \nbe published in SAP API Hub. (SAP API Management was not \nchosen due to weak integration with DwC, additional complexity \n(negative impact on resilience), and costs; documented in ADR) \n• For asynchronous communication with CALM outside world, \nBusiness Event Bus/Event Mesh (TG27) plays a role in connecting \nwith Business Systems. However, scalability and functional gaps are \nhuge. So, this event technology cannot be used for technical \nintegration communication as needed for Integration Monitoring, \nProcess Monitoring, etc. \nSo, we invented our own Kafka-based solution to connect managed \ntenants with CALM using the app-to-app integration pattern. Kafka \nallows scaling, buffering, and potentially logging (Event log \nArchitecture!) incoming and outgoing asynchronous messages. \nNote: We strive for an event-based, asynchronous microservice \narchitecture. Ideally, synchronous communication between \nmicroservices is to be avoided.  \nAsynchronous replication of data is an accepted pattern in case it \nsupports decoupling of the services \nReuse Tools and \nGuidance \nCross https://wiki.wdf.sap.corp/wiki/x/H1W4eQ \nprovides details on application logging, performance measurement, test \nautomation, metering, security, scalability, analytics, Workflow, etc. \nBTP Reuse Service \nusage \n The current list can be found at https://wiki.wdf.sap.corp/wiki/x/8mBTg  \n \n \nThe following sub-chapters describe several of these decisions in more detail.\n\nPage 41:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 41 of 66 \n \n6.1 Data Persistency: HANA Cloud as Default \nThe recommendation for \"Build-on SAP BTP\" products is to use HANA as the default database. We \nfollow this use-HANA guidance in SAP Cloud ALM Build, Run , and Cloud Service Delivery . HANA \nCloud is used for OLAP and OLTP-based data. \nLarge unstructured data BLOBs like attachments SHOULD NOT be saved into the HANA database \nbut into the SAP BTP document management service. \nCDS Views/annotations are recommended to be used as an abstraction layer on top of HANA.  So, \nwe are more flexible in case a move to another database is needed or to enable local testing with a \ndatabase mock.  HANA-stored procedures can be used in case CDS modeling is not advanced \nenough. \n6.2 Data Separation in Customer Subscription Model  \nIn SAP Cloud ALM , data separation is implemented by using different database schemas per \ncustomer and domain. CALM uses the recommended tenancy model of Schema Separation (=HDI \nContainer). See the architecture decision record at https://wiki.one.int.sap/wiki/x/MdOfuQ.  \nThe HANA service manager is used to create the corresponding HDI container automatically, \norchestrated by DwC. \nFor customer business data, schema separation (or HDI separation) SHALL be used. \n \nFigure 25 - Subscription Model with HDI Container - Simplified \nTo ensure resilience, we decided to have a separate HDI container per customer per domain. A \ndomain in this context is a set of logically bundled microservices (e.g., task management, change \nmanagement, integration monitoring, etc.). How the domains are modeled in detail is subject to the \nSoftware Design Documents of the corresponding areas. \nHDI stands for Hana Deployment Infrastructure and indicates that there is a bit more behind it than \njust a database schema. \n \nThe following figure shows the subscription, HANA Instance, and HDI container handling in more \ndetail.\n\nPage 42:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 42 of 66 \n \n \nFigure 26 - Subscription Model with HDI Container – Detail (Visio) \nA. Each customer has their own separate global account for SAP Cloud ALM and subscribes \nto SAP Cloud ALM into (usually one) sub-account. \nFor simplification reasons, just three single customer accounts (Customer A, B, C) and \nCALM Subscription are depicted here. \nB. Customers have multiple options for identity provider assignment. A corporate IDP can be \nreused, or a separate BTP IDP can be provided (the latter is not depicted in the diagram). \nC. SAP can have multiple demo accounts, too. Besides doing demos, this can be used for \ntesting purposes and for support reasons (reproducing errors of customer accounts) \nD. All functionality is provided by the SAP CXS Provider Account. Resources like CPU, \nMemory, and persistence are provided centrally, too. The customer accounts do not need \ntheir own runtime quota. \nE. All CXS applications are subscribed as one bundle (no individual selection of sub-services), \nF. Data Separation by HDI container per Subscription-Tenant and Application area. \nThe colored boxes on the right with the title \"HANA\" in the Provider Account illustrate the \nHDI container, which is created as a consequence of the subscription process.  \na. Each SAP HANA database instance is created manually by SAP in the provider account. \nb. The size of an existing DB instance can be increased over time. \nc. New DB instances can be created by the CALM Operations team to put new customers in \nseparate DB instances.  \nG. Very restricted SAP user access  to the provider account (only for Update/Upgrade and in \nemergency cases…) \nH. Data Exchange with the CXS Service and Support Data Lake. The Data Lake gets data from \nCALM Tenants, XALM, and any SAP Backbone infrastructure like Service Provider Cockpit \n(SPC),\n\nPage 43:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 43 of 66 \n \nThe diagram shows how much focus we spend to keep the customers and their data separated as \nmuch as possible – at a reasonable cost. \nReuse services like Workflow, etc.  SHALL  be checked not to violate that level of separation . The \nassumption is that all BTP reuse services are multi -tenant aware and provide the proper level of \nisolation. \n6.3 Subscription Model \nThe customer consumes SAP Cloud ALM exclusively per subscription. There will be no software \ndeployment into any customer account. Th e license materials must be assigned to the global \naccounts of the customer-owned SAP BTP Sub-Accounts so that the software can be subscribed to. \nThe complete costs are accumulated in the global provider account operated by SAP CXS.  \nTo better understand the BTP Subscription model, some introduction to the BTP Domain Model is \nhelpful:\n \nFigure 27 – SAP BTP Domain Model\n\nPage 44:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 44 of 66 \n \n \nFigure 28 – SAP BTP subaccounts and subscription from provider account \n \n \nFigure 29 - Subscription Model (details see Jam) \n \n6.4 CALM@DwC Account Setup \nUse the Amalthea Cockpit to check the different sub-accounts and spaces that are set up for CALM: \nhttps://dashboard.dwc.tools.sap/org/CALM/landscape/overview  \nCALM follows the standard recommendations of DwC for account setup.\n\nPage 45:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 45 of 66 \n \n6.5 XALM - Cross Customer SAP Cloud ALM \nDetails: https://wiki.wdf.sap.corp/wiki/x/lTz_nQ  \nCALM is an external customer-facing solution; all applications and features are available for all \ncustomers' tenants. \nThere are use cases where SAP-internal facing tenant(s) must be supported. SAP employees \nneed to access SAP-specific or internal tenants. Access to these applications and features must be \nprotected from external customers. And that access usually has the semantics to \nmanage ALL CALM customer tenants (across the various CALM data centers). Therefore, we \nconfigured XALM: XALM stands for Cross - X Cloud ALM. \n6.5.1 XALM Use Cases \nThere are several use cases from different SAP areas for cross-customer XALM accounts. Some of \nthe use cases are shown below. Major business requirements are from the Cloud Service Delivery \narea, where SAP consultants deliver services based on check procedures and service definitions \ncreated by service/content owners. Similarly , there are other areas where content is created, \nmanaged, and distributed to CALM customers. \nCALM Build \n▪ Standard business process content \nCALM Run \n▪ Health Monitoring authoring \nCALM Service \n▪ Service Asset Maintenance \n▪ Service Authoring \nCALM Cross \n▪ Project and Task management usage metrics extractors and SAP for Me Integration \n▪ Central Job Status Management \n▪ Cross Customer Analytics  \n▪ Machine Learning – integration with Data Lake \n6.5.2 BTP Space Setup for XALM \nThere is one shared ingress space for XALM and CALM in the EU20 data center (that will change \nonce DwC supports setting up Jupiter Instances per application CF space, then we will separate). \nThe spaces where the actual microservices are deployed are separated. So , XALM runs separated \nfrom CALM even though both are deployed in the same DC. The reason is that we make sure that in \nthe EU20 data center, we already have a similar communication using external APIs like it is when \ncalling between EU10 and EU20.\n\nPage 46:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 46 of 66 \n \n \nFigure 30 - BTP Cloud-Foundry Space Setup for XALM and CALM in EU20 and EU10 \n \nIn Amalthea, the setup looks as depicted below: \n \nFigure 31 - CALM Landscape Setup in DwC \nThe different types of services (A / B /C) are a logical grouping of where our microservices are \ndeployed. Details are described in the next chapter.\n\nPage 47:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 47 of 66 \n \n6.5.3 XALM / CALM separation of features vie toggle  \nSince we need different feature toggle set configurations in XALM and CALM, we need separate \nlandscapes with different software vectors. XALM Provider account has been configured in EU20.   \nWe have the following types of microservices:  \n▪ Common in both internal and customer-facing scenarios \n▪ Specific to XALM (internal) \n▪ Specific to CALM (customer-facing) \nThis can be illustrated as shown below: \n \nA permanent feature toggle x_xalm_cross_customer_tenant has been created to protect XALM \nand CALM features for microservices that are deployed in XALM and CALM . The following table \nillustrates different deployment options:\n\nPage 48:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 48 of 66 \n \n6.5.4 Data Separation in XALM \nIn XALM, discriminator column data separation is allowed: Discriminator column data separation will \nbe used in the SAP account, where data of different customers are persisted. In this account, only \nSAP employees have access to the application. So, in one managed HDI container, data from \nmultiple customers is included. Still, per XALM tenant, one HDI container per domain is created. \n \nFigure 32 – XALM - Cross Customer account with Discriminator Column Data Separation \nArchitecture decision regarding tenant-specific HDI container model is documented in ADR: \nhttps://github.tools.sap/CALM/design/blob/master/adr/adr-0190-hdi-schema.md. \n \nThe diagram also shows the two ways to integrate XALM with the different CALM accounts:  \n1. Asynchronous communication via our Kafka -based cross-data center communication \ninfrastructure. This is the preferred way for integration for messages up to 0.5 MB. \n2. Synchronous calls using the DwC Internal API Users  (we use the X.509 compliant setup) . \nWe use this way only if asynchronous communication is not feasible.  \n \n6.5.5 Integration of XALM with CALM \nXALM's target persona is the SAP internal employee. Related persons can be from  the service \ndelivery organization  and admin users who perform cross -customer operations , monitoring, and \nfurther integration scenarios.  \nXALM is not an isolated application. Several integration and data replication scenarios exist with SAP \nCloud ALM, SAP backbone systems, SAP for Me, etc. The below picture shows XALM communication \nwith SAP Cloud ALM and SAP Backbone systems:\n\nPage 49:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 49 of 66 \n \n \nFigure 33 – High-level block diagram: Integration CALM, XALM, SAP Support Backbone \n \nThe below diagram shows the asynchronous Kafka-based Cross Datacenter Communication: \n \n \nFigure 34 - Cross Customer Account Integration (wiki) \nThe diagram also describes a new way to integrate with SAP Managed Cloud services: App2App. \nDetails: https://wiki.wdf.sap.corp/wiki/x/IaUzkg\n\nPage 50:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 50 of 66 \n \n \nFigure 35 - Integration CALM-XALM including data separation, subscription,… - Detail (Visio) \nI. Synchronous API calls: Customer subscription tenants can exchange data with the central \nXALM account. \nJ. The Central Services can access data from SAP Support Backbone.  \nPreferred is access via technical user provided centrally (no need to have customers \nmaintain s-users manually in their provider account). \nK. The central XALM account shall not be accessible by customer users for security reasons. \nWe separate customer-access use cases and SAP-internal user access. The main XALM \naccount with the cross-customer functionality of Service Delivery Cloud shall only be \naccessed by SAP users, like CSMs (Customer Success Managers) \nHere, SAP users see data that customer tenants actively push to SAP (customer needs to \nopt-in to send data).\n\nPage 51:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 51 of 66 \n \nL. Asynchronous messaging: Datacenter to datacenter exchange of events: Bi-directional Data \nExchange is possible via Kafka, e.g. , sending  a service result from the Service Delivery \ncentral XALM services to the customer account. \nM. The central services offer a cross-customer view by design. Therefore, in one HDI \ncontainer, there will be data of many customer CALM tenants (Discriminator Column data \nseparation). Still, we create for each XALM tenant an own HDI-container in XALM to allow \nan easy test- and demo account setup. \n \n \n6.5.6 Integration of XALM with SAP Support Backbone Systems \nIntegration of CALM with SAP support backbone systems is done via XALM tenants. From a security \npoint of view, we don't connect SAP support backbone systems directly to CALM tenants. \nThe service delivery center in XALM has integration with the ICP system, as shown below:  \n \nService result in XALM has integration to CBX system as shown below:\n\nPage 52:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 52 of 66 \n \n6.5.7 Integration of XALM with consumers like SAP for Me or Data Lake \nSome use cases require the central collection and storage of CALM data in XALM . This is, e.g., \nrequired to collect project data from the individual CALM tenants to provide the integration of this data \nin SAP for Me or to do benchmarking across all customers in the Service & Support data lake. \nTo collect the data , we make use of Cross Data Center (CDC) Communication. Each change  of \nproject data in the CA-ANA microservice will trigger an event to be sent to a dedicated Kafka message \nqueue, which will then be forwarded to XALM via the CDC distributor component. The CDC Router \ncomponent in XALM receives the message and puts it into the XALM Kafka inbound message queue. \nThe microservice x-metrics-collector gets this message, parses it , and persists it in the cross-\ncustomer HDI container, which is an HDI container per subscriber tenant model. On top, a REST API \nis created that can be consumed by SAP for Me or by the Data Lake using the service key. \n \nFigure 36 – x-metrics-collector architecture\n\nPage 53:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 53 of 66 \n \n6.6 PALM - Public ALM \nPublic ALM (PALM) is one of the building blocks of Powered by CALM. \nThere are use cases where a customer might not (yet) have their own SAP Cloud ALM tenant. A \nsignificant driver use case of PALM has been Process Navigator by SAP (formerly called SAP Best \nPractices Explorer). The main requirement consists of allowing S-users and P-users who are not \nnecessarily SAP Cloud ALM customer end users yet to access and navigate through various best \npractices and business processes offered by SAP. This requirement is also aligned with the \"off-\nNeo\" initiative. Another motivation of PALM is to provide an overview to S-users and P-users and \ngive a glimpse of the capabilities that they can get by subscribing to SAP Cloud ALM. Therefore, we \nconfigured PALM, where P stands for Public ALM.  \nToday, the SAP ONE Support Launchpad (in transition to SAP for Me) is positioned as a single-\nentry point for support of all the SAP Customers using S/C/D/I/(P) users (hence Universal ID). \nThe entry point (UI) of all service/support-related apps should migrate from SAP One Support \nLaunchpad to SAP for Me. More information about the transition can be found here | recording. \nTherefore, Public ALM will not be \"visible\" as a new product with its own launchpad to end users, \nbut PALM applications running in the PALM shell will be invoked by SAP for Me and displayed in an \niFrame. Several integration options between SAP for Me and PALM have been considered. The \ndecision to embed PALM applications in an iFrame in SAP for Me and not call them in a separate \nbrowser window has been documented in the ADR-0600. \nThe picture below shows where the SAP Process Navigator, an example of a PALM application, is \nplanned to be integrated with SAP for Me, mainly in the Services & Support area. \n \nFigure 37 - SAP for Me integration area for PALM applications \n \nThe header and the footer of the PALM shell are hidden. Other services like the Web Assistant, \nQualtrics, Search, and user settings will be triggered via the SAP for Me shell. Communication \nbetween the PALM application UI and the SAP for Me UI will happen via events. \n \nApplications that are deployed in CALM and in PALM need to implement the usage of certain \nfeatures (e.g., Web Assistant, Qualtrics, Search) twice. This is needed because the standard shell \nis used in CALM, whereas in SAP for Me, the applications run as iFrame within the SAP for Me \nshell. The applications use a permanent feature toggle to differentiate whether they are running in \nPALM or CALM. \n \nThe following picture shows the integration of the PALM applications into SAP for Me. The PALM \nshell uses a generic custom style sheet to run in the SAP for Me iFrame in a headerless mode. That\n\nPage 54:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 54 of 66 \n \nmeans that the header and footer of the PALM shell are hidden. SAP for Me and PALM use the \nSAP IDP (accounts.sap.com) for user authentication.  \nThe PALM shell is also responsible for collecting and submitting usage data via the usage data \ncollector microservice. Some generic KPIs like \"DB memory consumption\" and \"Clicks per UI \ncomponent\" are collected centrally by the usage data collector microservice. Application-specific \nKPIs can be collected by the PALM applications using the metering library.  \nOther services (like Qualtrics surveys, Search, or Web Assistant) that are included in the SAP for \nMe header bar can be called directly by the PALM applications. \n \n \nFigure 38 - SAP for Me integration area for PALM applications\n\nPage 55:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 55 of 66 \n \nShould I migrate to SAP for me or PALM/CALM? \nAs explained before, the user journey can start in SAP for Me. However , how to implement UI and \nBackend services differs. And one has the choice of implementing in SAP for Me directly or leveraging \nPALM/CALM. \nThe following table shows some criteria to help you make this decision. \nImplement on SAP for Me infrastructure  Implement on Powered by SAP Cloud ALM \n(PALM/CALM) \n• Tight UI integration with other SAP for Me use \ncases is planned. \n• From a call with Kristian about SAP for Me: \n• Display-Framework is the focus - \"SAP for \nMe component model to simplify end-user \naccess\" (SAP for Me team does not offer \nbackend business logic infrastructure; \nbusiness logic must be provided by the \nteams, based on existing backbone assets \n(like ABAP-based CB*, ABAP-based \nW7*, ODP, ...)) \n• SAP for Me is not meant as a general-\npurpose platform. SAP for Me focuses on \noData V4 + SAP UI5  (and basic Java \nbackend) + D3 for graphics    \n• For its own complex business \nlogic/backend, a team needs to handle its \nown accounts, delivery process, \nmonitoring/operation of HANA, etc.  \n• A clear business value for CALM  \n• Not the new platform for pure pre-sales \npositioning → That is SAP for Me \n• Entered data can easily integrate with \nCALM/XALM \n• Will not break Cloud Native Pattern (e.g., Data \nSeparation) \n• Improve development excellence (e.g., Daily) by \nDwC development culture. \n• Reduce operation costs by harmonizing on a \npaved road. \n• Continuous innovation culture/effort (no throw-\nover-the-fence after one year of development) \n• The need for strong data separation and \ncustomer-managed keys can be fulfilled in \nCALM. \n• Long-term private cloud deployments might be \npossible (CALM-only) \nFor PALM use cases, see https://wiki.one.int.sap/wiki/x/qM8-sg  \nFor more info on the account setup for PALM, see https://wiki.one.int.sap/wiki/x/ugKGsw  \nFor details on authorization management in PALM, see https://wiki.one.int.sap/wiki/x/uU-kwg\n\nPage 56:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 56 of 66 \n \n6.7 Asynchronous Messaging and Eventing with Kafka \nWe adopt asynchronous messaging for all communications in CALM with Kafka as the messaging \nbroker. Our goal is to enable this for all our communication use cases within and outside of CALM.  \nAdherence to this approach is the general architecture guidance, as this is important with our growing \nnumber of tenants and the need for resilience and scalability with this growth. \nCurrently, we cover the following scenarios \n• Service-to-Service communication between the services within a DwC -Vector version (and \nalso future versions of the vector).  \no Details: https://wiki.wdf.sap.corp/wiki/x/ypPrhw  \n• Cross data center communication enables communication across different CALM and XALM \nprovider accounts.  \no e.g CALM-EU10  CALM-EU20, XALM-EU20 CALM-EU10… \no Details: https://wiki.wdf.sap.corp/wiki/x/mRFJmQ \n• Application-to-Application Communication. \no e.g., Consume events that are received via CALM/XALM inbound APIs (e.g., metrics \nsent by Ariba-managed tenant) \no Details: https://wiki.wdf.sap.corp/wiki/x/IaUzkg \n \nUnified Kafka Library \nCALM invests in an inner-sourced unified Kafka library to support the adoption  of asynchronous \nmessaging using Kafka, covering the above-mentioned scenarios in the context of DwC. \n \nFigure 39 - Unified Kafka Library – Mission \n \n \nFigure 40 - Unified Kafka Library - Block Diagram\n\nPage 57:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 57 of 66 \n \n6.8 Embedded Analytics in CALM \nFor operational reporting (analytics here is typically integrated/embedded into the SAP Cloud ALM \nApplications), we reuse the data and CDS models as created by the transactional application use \ncases. We typically share the same data model within one domain. The benefit is to avoid redundant \ndefinitions of metadata and to ensure data consistency. \nFor complexity and cost reasons, SAP Analytics Cloud is not used for Embedded Analytics in CALM. \nFor analytics use cases that go beyond microservices and are not possible to integrate on the UI \nlayer, we collect the relevant data into a central analytics microservice. For instance, for CALM Build \nOverview Page: \n \nFigure 41 – CALM Build Overview Page \nDetails: https://wiki.wdf.sap.corp/wiki/x/ibZVfQ  \n \n6.9 SAP Analytics Cloud (SAC) – Integration Option \nCustomers who have their own SAP Analytics Cloud (SAC) tenant can use the SAP Cloud ALM \nAnalytics API that is published in the SAP API Business Hub. The SAP Cloud ALM Analytics API is \nimplemented as a service broker and provides a REST / oData API to access the CALM analytics \ndata. Customers need to first subscribe to the service broker and then create a service instance and \na service key in their CALM customer account. With this service key, they can create an oData Service \nconnection in their SAP Analytics Cloud tenant. The oData Service connection only supports data \nacquisition, with no live connectivity. After customers create SAC models based on the SAP Cloud \nALM Analytics API, they can extract data from CALM and persist in their SAC tenant. \nIt's also possible to provide pre-built content that customers can access within the Content repository \nwithin SAC (see also the Analytics Technology Guideline TG32).  \nIt would also be possible to embed SAC content directly in the CALM application, but this would \nrequire automated SAC tenant provisioning. It was decided not to embed SAC content due to higher \nTCO.\n\nPage 58:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 58 of 66 \n \n6.10 Service & Support Data Lake \nWith the Service & Support Data Lake  platform, we want to provide data -driven innovations for our \nstakeholders in Customer Solution Support & Innovation (CSI). The platform runs on Kubernetes on \nConverged Cloud and includes several components to do data integration, machine learning, logging, \nand provisioning of ML services for several applications. Service and Support data is extracted to the \nService & Support Data Lake and stored there for data exploration. The data is then analyzed by data \nscientists, and ML models are created  based on the  CSI business requirements. These ML models \nare exposed as  ML services and can then be consumed by the applications via the API Gateway \n(Kong). \n \nFigure 42 - Service & Support Data Lake  \nMore information can be found below \n• Recording of Service & Support Data Lake – introduction (BAM) \n• Service & Support Data Lake Wiki page \n \n6.11  Metering and Usage Analysis \nWithin SAP Cloud ALM , we collect usage metrics to provide transparency about the adoption and \nusage intensity of our product . This helps our product management make investment decisions as \nwell as the development to gain insights on how the individual parts of the product are used . In \naddition, we use the usage data to integrate with CPEA for billing purposes (for the HDI container \nusage as well as for external API consumption by customers). \nFor collecting the usage metrics in SAP Cloud ALM, we introduced a microservice called \"Usage data \ncollector\" that is responsible for collecting the usage data from the individual application microservices \nvia the metering library and sending them via the SAP M etering Service from BTP to the Cloud \nreporting and CPEA for billing purposes (for those metrics that are billing-relevant). \nThe microservices can submit usage data regularly to the usage data collector. Alternatively, usage \ndata can be pulled by the usage data collector from the microservices via a job. The usage data \ncollector stores the usage data in a shared HDI container, and periodically, the usage data is sent to \nthe Metering service. Metering service then forwards to Cloud Reporting. In Cloud Reporting, there \nis a spec ific dashboard with all usage data that is specific to SAP Cloud ALM.  There, additional \ncustomer and tenant master data can be used to do data analysis. Also , other data sources (e.g ., \nServiceNow cases) are integrated with the CALM Cloud reporting dashboard.\n\nPage 59:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 59 of 66 \n \n \nFigure 43 – CALM Usage Measurement Architecture \n \nCustomers who use more than 8 GB of HANA memory will be charged based on the additional HANA \nmemory usage. Therefore, we measure the HANA memory usage of all tenants on a monthly basis.  \nAs a prerequisite , customers who overuse 8 GB of memory need to subscribe to the SAP CALM \nmemory extension service in their CPEA account. Then, the usage data collector will send the usage \ndata of those customers associated with their CPEA account so that they can get charged based on \ntheir usage. In the CPEA account, the customers see the HANA memory usage and the related costs. \nIn addition, the information about the HDI container usage is also sent to the health monitoring \napplication so that customers get  information about which application is using most of th e HANA \nmemory so that they can potentially do clean-ups if, e.g., data is not required anymore. \nTo ensure the data quality of the usage data, we use Focused Run. There, we defined rules (e.g., to \ncheck the latest usage numbers against the standard deviation) and thresholds that can be used to \nalert and notify the developers of potential issues. \nDetails: https://wiki.wdf.sap.corp/wiki/x/-sjEfg  \n \n6.12  Backing Services and Scalability \nSAP BTP / Cloud Foundry offers several backing services, which are being consumed by SAP Cloud \nALM. These backing services are generic services  and avoid the need for  every application to \nimplement such functionality on their own. Typical backing services are Cloud Logging, Audit Log, \nApplication Autoscaler, and the like. The list of the consumed backing services of SAP Cloud ALM  \ncan be found in the service toolchain application at \n https://services.tools.sap/#/perspective/inventory/service/SERVICE-440 (tab \"Required Services\"). \nThe list is also maintained at https://wiki.one.int.sap/wiki/x/8mBTg. \nThe plan for SAP Cloud ALM is to finally have around 50.000 customers. We must be prepared for a \nlarger number of customers. Currently, around 74.000 customers are entitled to use SAP Cloud ALM. \nSince we don't plan to run SAP Cloud ALM in one single data center exclusively, the assumption is \nnot to have more than 5.000 customers in one data center until 2024. \nTo handle 5.000 customers per data center, SAP Cloud ALM needs to ensure that the consumed \nbacking services scale accordingly and can handle the load. Missing scalability of consumed\n\nPage 60:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 60 of 66 \n \nbacking services will end up in showstoppers for the rollout activities for SAP Cloud ALM. There is a \nseparate workstream on performance and scalability.  \nIn the early days when the workstream was started, we had to look at the scalability of the backing \nservices by ourselves. We estimated the load per customer per day, and we extrapolated the load \naccordingly. Based on this data, we check with the particular BTP service owners to see if the \nservice can handle the expected load. In August 2021, BTP Core (India) set up its own team to run \nload tests based on our requests. The documentation of the tasks in this workstream is listed at \nhttps://wiki.wdf.sap.corp/wiki/x/9BHRiw. \n \n6.13  Identity and Access Management \nSAP Cloud ALM is a customer-managed SaaS. T herefore, the customer is responsible for user \nauthentication. SAP supports the customer with best practices on how user authentication shall be \ndone. Note: Identity and Access Management is not the same as Authorization Management. \nIn the customer onboarding process, SAP Cloud ALM offers fully automated provisioning . The  \ncustomer user who requested the SAP Cloud ALM tenant can log on to the application without further \nconfiguration activities. So, the basic SAP BTP Cockpit configuration is done within the provisioning \nautomation. Additional configuration effort is required so all SAP Cloud ALM features  can be used. \nSuch configuration can include setting up connectivity to managed tenants and managed systems. \nAs part of the automated provisioning, the customer gets their own IAS tenant for authentication \npurposes. If there is already a customer-owned IAS tenant, this tenant is reused. I f there is no \ncustomer-owned IAS tenant so far, a new IAS tenant for the customer is created. If an existing IAS \ntenant is used, it is ensured that the user who requested the SAP Cloud ALM tenant gets a user in \nthis customer IAS tenant. In case this user gets created in the customer IAS tenant, the user receives \nan identity confirmation email. In case a new IAS tenant is set up, the user who requested the SAP \nCloud ALM tenant gets a user in this customer-owned IAS tenant , and in addition , this user is \nmaintained as administrator of this newly created IAS tenant. \nThere is a license bundling of the customer-owned IAS tenant and SAP Cloud ALM, so the customer-\nowned IAS tenant is free of charge for the customer in the context of SAP Cloud ALM. \nThe process of adding customer users to the customer-owned IAS tenant is not part of the SAP Cloud \nALM process. Customers have several standard options: \n• Maintain the users in customer IAS tenant manually \n• Maintain the users in customer IAS tenant by replication from S/4HANA or by SFSF \n• Any other option provided by IAS \nThe users of the customer-owned IAS tenant are available in SAP Cloud ALM and in the SAP BTP \nCockpit. In both places, authorization can be granted to these users. \n \n6.14  User Role Assignment (Authorization Management) \nIn every application, the capabilities of the application are protected by defined role collections and \nscopes. In customer-managed SaaS applications, the applications provide the available role \ncollections as part of the deployment. Customers are allowed to create additional customer-specific \nrole collections to suit their needs. \nIn customer-managed SaaS applications, the user-role assignment is done in the SAP BTP Cockpit. \nThese SAP BTP Cockpit UIs are very technical and not intuitive. In addition, the list of available role \ncollections is a mix of SAP BTP Cockpit roles, SaaS application roles, and customer-specific roles. \nFor SAP Cloud ALM, the user who requested the SAP Cloud ALM tenant gets the \"Global \nAdministrator\" role assigned to SAP Cloud ALM. With this role assignment, the user is authorized to \nexecute all capabilities of the SAP Cloud ALM application.\n\nPage 61:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 61 of 66 \n \nTo overcome that usability restriction in SAP BTP Cockpit, SAP Cloud ALM introduced its own \nmicroservice: https://github.tools.sap/CALMBuild/uam-userservice. This is a cross-application user \nmanagement application with excellent usability and is embedded in the SAP Cloud ALM \nlaunchpad. That way, the user-role assignment maintenance can be done within the SAP Cloud \nALM application. Users will not need to use the BTP Cockpit. It is just a special role assignment of \nthe SAP Cloud ALM application. By that, we ensure the ability to separate the application business \nadministrators from the application technical configuration administrators.  \nThe user roles maintained by CALM uam-userservice are 100% compatible with the users \nmaintained in the BTP cockpit. The user-role assignment, which is maintained in the CALM uam-\nuserservice, is therefore visible in the SAP BTP Cockpit. \nThe UAM microservice UI is optimized for SAP Cloud ALM but could be used in other SaaS \napplications as well. The SAP Cloud ALM-specific role collections are displayed in an intuitive UI \n(see screenshot). Role collection assignment in the UI is ordered according to the capabilities in \nSAP Cloud ALM. SAP BTP Cockpit-related role collections are hidden and cannot be granted to any \nuser in this UI. Additional application-related roles can be granted to users in the \"Custom Roles\" \nsection. The roles displayed here are either customer-specific roles or, in the future, roles from \nadditional subscribed applications like CIAS, CTMS, etc… \n \n \nFigure 44 – User authorization maintenance in SAP Cloud ALM \n \nThe user role concept for XALM is described here: https://wiki.wdf.sap.corp/wiki/x/lTz_nQ  \n \nNo UAM Service in XALM \nWe decided to deploy only CALM microservices, which are strictly required in XALM. By that, we keep \nXALM as \"lightweight\" as possible. Therefore, as of February 2022, UAM is not part of XALM. It's \nbeen decided that XALM applications that need to access the first and last name of a given user ID \nto get the list of users assigned to a role, etc., will implement the required capabilities through a new \nlibrary/microservice. \n \n6.15  SAP Cloud ALM Commercialization \nThe SAP Cloud ALM commercialization model can be separated into two parts:  \n1. All order-2-cash-related process steps \n2. The tenant provisioning process. \nIn this ACD, we focus on provisioning processes. The process steps for order -2-cash are not in the \nscope of this document since they are bound to the SAP Cloud ALM Commercialization / Business\n\nPage 62:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 62 of 66 \n \nModel. See also the figure below: the process marked in the orange boxes is related to the order-2-\ncash process. The fulfillment order triggers the provisioning. The fulfillment order also takes care that \nthe technical installation number is created and that the iBase is updated accordingly. \nhttps://wiki.wdf.sap.corp/wiki/x/Azo2b \n  \n \nFigure 45 – SAP Entitlement and Cloud Provisioning Process \n \nAs shown in Figure 45, the fulfillment request triggers the provisioning of the customer tenant. Either \nin the Service Provider Cockpit or in SAP BTP CIS (Commercial Infrastructure Services). Depending \non the product that is ordered by the customer and assigned to the Provider Contract, Cloud \nEntitlement Set and Fulfillment Request. For a better understanding, we need to clarify the two cloud \nproduct types of SAP: \n1. SAP-managed SaaS Application \nFor an SAP-managed SaaS Application, the provisioning procedure is performed by the \nService Provider Cockpit.  \nIn an SAP-managed SaaS Application, the global account is provided by SAP, as well as \nthe IAS Tenant. The customer gets provided with his or her own subaccount, activates the \nsubscription, gets a user in the subaccount, and is notified by mail, which includes a link \nthat he or she can start working. \nThere is no access to any SAP BTP administration tool (SAP BTP Cockpit) to manage \ndestinations, user-role assignments, and other tasks. Hence, these need to be provided in \nthe application. The customer does not even know that the application runs on the SAP \nBTP environment. \n \n2. Customer-managed SaaS Application \nFor a customer-managed SaaS Application, the provisioning procedure is performed by \nSAP BTP - CIS \nIn a customer-managed SaaS Application, the customer has full control of his SAP BTP \nAccount. Therefore, the provisioning creates a customer-owned global account (if there is \nnot already an existing global account), assigns an entitlement (the license material that is \nordered by the customer in the order-2-cash process) to the global account, adds the user \nof the contract as admin user to this global account, and notifies the user via mail (with link \nto SAP BTP Cockpit) that all other tasks need to be done manually.\n\nPage 63:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 63 of 66 \n \nFor SAP Cloud ALM, the customer needs full access to the SAP BTP Cockpit to maintain the \ndestinations to the customers' cloud tenants as well as to the customers' on-premise systems. Only \na customer-managed SaaS scenario offers this type of access to the customer landscape. Hence, \nSAP Cloud ALM uses the customer-managed SaaS model. \n6.16  SAP Cloud ALM Customer Onboarding \nAll customers with a valid Enterprise Support contract or higher (MaxAttention, Preferred Success, \nand the like) are entitled to request a n SAP Cloud ALM tenant. For all these customers , there is an \nSAP Cloud ALM-specific entitlement set (see Figure 23). All in all, about 74.000 customers are entitled \nto request an SAP Cloud ALM tenant. \nFor details about commercialization, see https://wiki.wdf.sap.corp/wiki/x/Azo2b. \nSince we don't want to create 74.000 SAP Cloud ALM tenants, and the customer might not even use \ntheir SAP Cloud ALM tenant, it was decided to go for a manual call -off to get an SAP Cloud ALM \ntenant provisioned.  \nThe currently available application to trigger the call-off is ONE Support Launchpad (OSLP). See the \nfigure below:  \n \nFigure 24 – SAP Cloud ALM Call-off application in OSLP \nThe admin user of a customer is allowed to request an SAP Cloud ALM tenant. In this application, \nthe customer admin user must specify the hyperscaler region (e.g ., AWS Frankfurt or Azure \nAmsterdam) and the subdomain of the customer BTP subaccount, where the SAP Cloud ALM \napplication will be consumed. \nBy April 2022, this SAP Cloud ALM call-off application will also be available in SAP 4 Me as part of \nthe overall call-off application, where the customer user requests the call -off for all the customers' \ncloud tenants. \nEvery call-off request is persisted in  the SAP Support Portal backend system for customer call -off \nlogging purposes and even more for provisioning monitoring purposes. See the figure below:\n\nPage 64:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 64 of 66 \n \n \nFigure 25 – SAP Cloud ALM provisioning monitoring \nWhen the call-off request is persisted in the SAP Support Portal, the trigger in the ICP fulfillment order \nis called to start the provisioning. The provisioning for SAP Cloud ALM is highly automated  to keep \nthe manual configuration steps for the customer after the provisioning at a minimum. Technically, the \nprovisioning procedure consists of 2 parts: one part in CIS and one part in SPC.  \nIn detail, the steps in the provision are: \n• (CIS) Create one global customer account \n• (CIS) Assign the entitlement for SAP Cloud ALM  \n• (CIS) Assign the customer user from OSLP who requested the SAP Cloud ALM tenant  as \nadmin to the global account \n• (SPC) Create a sub-account \n• (SPC) Activate the subscription \n• (SPC) Assign the customer IAS tenant (usually a customer has only 1) to the sub-account (or \ncreate a new customer IAS tenant) \n• (SPC) Create the first user in the IAS tenant (the customer user from OSLP who requested \nthe SAP Cloud ALM tenant) \n• Assign the Global Administrator role collection from SAP Cloud ALM to the user  \n• Send a mail to the user with the URL to the application and the URL to the SAP BTP Cockpit \nAfter this provisioning, the customer user who requested the call -off in OSLP  is enabled to \nauthenticate at the customer's IAS tenant and start working with SAP Cloud ALM. \nTechnically, when the SAP Cloud ALM tenant provisioning is finished, a new entry is available in the \nCLD of the SPC, which is replicated into the customer system data store in the SAP Support Portal. \nThis new tenant, together with the customer's call-off request, is the basis for the monitoring of the \nSAP Cloud ALM provisioning shown in Figure 26. \nCurrently, the SAP Cloud ALM license material is maintained (in CIS) to allow only one subscription \nper global account. This means the customer is allowed to create additional sub-accounts in the \ncustomer's global account, but SAP Cloud ALM can be subscribed only once. This is at least the \ncurrent status but is subject to change. Depending on requirements from SAP Cloud ALM product \nmanagement or technical requirements (e.g., for the tenant to move from one data center to another \none), the number of allowed subscriptions might change. \nIn addition, there are ongoing discussions that there will be a combined provisioning of SAP Cloud \nALM in the context of SAP S/4HANA Cloud and SAP SuccessFactors tenant provisioning.  \n6.17 Hyperscaler Strategy / Region Strategy \nThe current roadmap for hyperscaler / data center support is listed can be found in \nhttps://wiki.wdf.sap.corp/wiki/x/5ZPNj\n\nPage 65:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 65 of 66 \n \n6.18  DevOps and Operations Processes \nFor an introduction to CALM DevOps, see the following links: \n• Engineering Excellence by Continuous Delivery to Production, Daily \n• Carpe Diem - A Day in the Cloud \n• For 24x7 operation processes and tools, see sub-pages of SAP Cloud ALM Operations  \n(owned by CALMs 24x7 operations team).  \n• See also Chapter 4.8 - Tools for DevOps Monitoring \n• Special interpretation of Site Reliability Engineering (SRE): SRE@CALM wiki \n \n6.19  PPMS Model \nSAP Cloud ALM, with its three sub-areas Build, Run, and Service, are handled as one PPMS product \n(with three separate software components): \n \nFigure 46 - PPMS view on SAP Cloud ALM (link) \n \n6.20 Product Standards  \nThere are no special product standards for SAP Cloud ALM Build, Run , and Service Delivery. The \ngeneral SAP product standards for SaaS applications apply. See related Sirius project.  \nThe SAP-Term for the delivery type CALM is using so-called Micro-Delivery. \nFor further information on product standards,: go/productstandards. \nOverview session SAP Product Standards for SAP Cloud ALM Engineers: \nhttps://video.sap.com/media/t/1_uij1tcu3  \n \nIn the Program Management wiki, you can find contacts and guidance: \nhttps://wiki.wdf.sap.corp/wiki/x/P7omm  \n \nHigh-Availability and Disaster Recovery \nAs a Cloud Foundry application on the BTP, the corresponding statement applies to SAP Cloud \nALM as well. Details on help.sap.com \nThe paper Principles and Patterns for Developing Highly Available S/4HANA Cloud Applications \nis relevant for CALM as well. \n6.21 Cloud Native KPIs Score - Assessment \nBased on the CALM architecture, we can measure a cloud-native score for SAP Cloud ALM. Details: \nhttps://wiki.wdf.sap.corp/wiki/x/WLENqQ\n\nPage 66:\nArchitecture Concept: SAP Cloud ALM \n \n© Copyright SAP SE 2023 Internal Page 66 of 66 \n \n \n \n \nwww.sap.com/contactsap \n \n© 2022 SAP SE or an SAP affiliate company. All rights reserved. \nNo part of this publication may be reproduced or transmitted in any form or for any purpose without the express permission of SAP SE or an SAP affiliate company. \nThe information contained herein may be changed without prior notice. Some software products marketed by SAP SE and its distr ibutors contain proprietary software components of other software \nvendors. National product specifications may vary. \nThese materials are provided by SAP SE or an SAP affiliate company for informational purposes only, without representation or  warranty of any kind, and SAP or its affiliated companies shall not be \nliable for errors or omissions with respect to the material s. The only warranties for SAP or SAP affiliate company products and services are those that are set forth in the express war ranty statements \naccompanying such products and services, if any. Nothing herein should be construed as constituting an additional warranty.  \nIn particular, SAP SE or its affiliated companies have no obligation to pursue any course of business outlined in this docume nt or any related presentation, or to develop or release any functionality \nmentioned therein. This document, or any related presentation, and SAP SE’s or its affiliated companies’ strategy and possible future developments, products, and/or platform directions and functionality \nare all subject to change and may be changed by SAP SE or its affiliated companies at any time for any reason  without notice. The information in this document is not a commitment, promise, or legal \nobligation to deliver any material, code, or functionality. All forward-looking statements are subject to various risks and uncertainties that could cause actual results to differ materially from expectations. \nReaders are cautioned not to place undue reliance on these forward-looking statements, and they should not be relied upon in making purchasing decisions. \n \nSAP and other SAP products and services mentioned herein as well as their respective logos are trademarks or registered trade marks of SAP SE (or an SAP affiliate company) in Germany and other \ncountries. All other product and service names mentioned are the trademarks of their respective companies. See www.sap.com/copyright  for additional trademark information and notices.\n\n=== GitHub · Enterprise (https://github.tools.sap/CALM/design) ===\nGitHub · Enterprise Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert Sign in Your GitHub Enterprise instance uses a GitHub Enterprise License for authentication. Sign in with your username and password instead of a GitHub Enterprise License authentication. Sign in with a GitHub Enterprise License Username Password Sign in with a username and password Sign in with a GitHub Enterprise License authentication Help Support You can’t perform that action at this time.\n\n=== GitHub · Enterprise (https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf) ===\nGitHub · Enterprise Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert Sign in Your GitHub Enterprise instance uses a GitHub Enterprise License for authentication. Sign in with your username and password instead of a GitHub Enterprise License authentication. Sign in with a GitHub Enterprise License Username Password Sign in with a username and password Sign in with a GitHub Enterprise License authentication Help Support You can’t perform that action at this time.\n\n=== GitHub · Enterprise (https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf) ===\nGitHub · Enterprise Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert Sign in Your GitHub Enterprise instance uses a GitHub Enterprise License for authentication. Sign in with your username and password instead of a GitHub Enterprise License authentication. Sign in with a GitHub Enterprise License Username Password Sign in with a username and password Sign in with a GitHub Enterprise License authentication Help Support You can’t perform that action at this time.\n\n=== Redirecting (https://sap.sharepoint.com/:w:/r/teams/CALMFoundation/_layouts/15/Doc.aspx?action=edit&sourcedoc=%7BDAE5BA07-0E41-422C-94D7-A5F0C3F03843%7D) ===\nRedirecting",
  "timestamp": "2025-08-16T01:44:46.582032"
}