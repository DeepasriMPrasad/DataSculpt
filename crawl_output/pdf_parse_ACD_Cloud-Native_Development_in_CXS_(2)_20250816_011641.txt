
=== <Program/Project/ Topic/Integration Scenario> ===
Source: Local PDF File
Pages: 66
Words: 16537
Links Found: 132

Page 1:
Product Architects 
 
 
Andreas Löbel  
Klaus Dickgiesser 
Sundaresan Krishnamurthy 
Ebru Polat 
Thomas Paulus 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
SAP INTERNAL 
Customer Services & Delivery  
Customer Experience and Solutions (CXS) 
 
SAP Cloud ALM  
 
Architecture Concept Document

Page 2:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 2 of 66 
 
Information Classification:  
SAP INTERNAL 
 
DISCLAIMER  
 
© 2024 SAP SE or an SAP affiliate company. All rights reserved.  
 
This internal document provides SAP-internal information about the architecture and concepts of the SAP Cloud Application 
Lifecycle Management Application and platform. It contains current and intended strategies, developments, or functionalities 
of SAP® solutions, applications, and technologies and is not intended to be binding upon SAP to any particular course of 
business, product strategy, and development; its content is subject to change without notice.  
 
No part of this publication may be reproduced or transmitted in any form or for any purpose without the express permission of 
SAP SE or an SAP affiliate company.  
 
The information contained herein may be changed without prior notice. Some software products marketed by SAP SE and its 
distributors contain proprietary software components of other software vendors. National product specifications may vary.  
 
These materials are provided by SAP SE or an SAP affiliate company for informational purposes only, without representation 
or warranty of any kind . SAP SE or its affiliated companies shall not be liable for errors or omissions with respect to the 
materials. The only warranties for SAP SE or SAP affiliate company products and services are those that are set forth in the 
express warranty statements accompa nying such products and services, if any. Nothing herein should be construed as 
constituting an additional warranty.  
 
In particular, SAP SE or its affiliated companies have no obligation to pursue any course of business outlined in this document 
or any related presentation, or to develop or release any functionality mentioned therein. This document, or any related 
presentation, and SAP SE's or its affiliated companies' strategy and possible future developments, products, or platform 
directions and functionality are all subject to change and may be changed by SAP SE or its affiliated companies at any time 
for any reason without notice. The information in this document is not a commitment, promise, or legal obligation to deliver any 
material, code, or functionality. All forward -looking statements are subject to various risks and uncertainties that could cause 
actual results t o differ materially from expectations. Readers are cautioned not to rely on these forward-looking statements, 
which speak only as of their dates, and they should not be relied upon in making purchasing decisions.  
 
SAP and other SAP products and services mentioned herein and their respective logos are trademarks or registered 
trademarks of SAP SE (or an SAP affiliate company) in Germany and other countries. All other product and service names 
mentioned are the trademarks of their respective companies.  
Please see http://global12.sap.com/corporate-en/legal/copyright/index.epx for additional trademark information and 
notices. 
Document History 
Date Version Name Change/Enhancement 
2019-07-24 0.94 Andreas Löbel 
Klaus Dickgiesser 
First Published Version  
Updated detail diagrams 
2020-11-15 0.99 Andreas Löbel 
Klaus Dickgiesser 
Changes of service delivery market, reuse service 
list, K8S 
2022-03-21 1.01 Andreas Löbel 
Klaus Dickgiesser 
Sundaresan Krishnamurthy 
Ebru Polat 
Thomas Paulus 
Updated all info to the latest state, new foreword 
2023-02 1.1 Adding PALM and Powered by CALM.  
All chapters are updated to the latest news 
2024-02 1.2 GenAI/LLM, DataLake, APIs, BTC, updated all info 
Current Published Version: https://github.tools.sap/CALM/design >> Download 
 
Work in progress version (CXS-Architecture-Internal): Sharepoint  
Related: SAPCloudALMinRegulatedEnvironments_draft.docx

Page 3:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 3 of 66 
 
Contents 
1 Abstract .................................................................................................... 7 
1.1 Business Target .................................................................................................. 8 
1.2 Engineering Culture - Deployment with Confidence........................................... 9 
1.3 Architecture ....................................................................................................... 10 
2 Business Requirements for SAP Cloud ALM .................................... 14 
3 Powered by CALM................................................................................. 17 
4 Engineering Culture, Process, Tools ................................................. 20 
4.1 Single Trunk Delivery Model ............................................................................. 22 
4.2 Release Feature Toggles .................................................................................. 23 
4.3 Daily Delivery to Production .............................................................................. 24 
4.4 Feature-Driven Development Process.............................................................. 25 
4.5 Feature-Driven Development Process at SAP Cloud ALM .............................. 27 
4.6 Daily Delivery Process for CALM Engineers .................................................... 28 
4.7 Engineering View on Tools for Delivery ............................................................ 28 
4.8 Tools for DevOps Monitoring ............................................................................ 30 
4.9 Carpe Diem – Our DevOps Model .................................................................... 30 
5 Architecture Guiding Principles.......................................................... 32 
6 Architecture Decisions ......................................................................... 39 
6.1 Data Persistency: HANA Cloud as Default ....................................................... 41 
6.2 Data Separation in Customer Subscription Model ........................................... 41 
6.3 Subscription Model ............................................................................................ 43 
6.4 CALM@DwC Account Setup ............................................................................ 44 
6.5 XALM - Cross Customer SAP Cloud ALM ........................................................ 45 
6.6 PALM - Public ALM ........................................................................................... 53 
6.7 Asynchronous Messaging and Eventing with Kafka......................................... 56 
6.8 Embedded Analytics in CALM .......................................................................... 57 
6.9 SAP Analytics Cloud (SAC) – Integration Option ............................................. 57 
6.10 Service & Support Data Lake ............................................................................ 58 
6.11 Metering and Usage Analysis ........................................................................... 58 
6.12 Backing Services and Scalability ...................................................................... 59 
6.13 Identity and Access Management ..................................................................... 60 
6.14 User Role Assignment (Authorization Management) ....................................... 60 
6.15 SAP Cloud ALM Commercialization ................................................................. 61 
6.16 SAP Cloud ALM Customer Onboarding ........................................................... 63 
6.17 Hyperscaler Strategy / Region Strategy ........................................................... 64 
6.18 DevOps and Operations Processes ................................................................. 65 
6.19 PPMS Model ..................................................................................................... 65 
6.20 Product Standards............................................................................................. 65 
6.21 Cloud Native KPIs Score - Assessment ........................................................... 65

Page 4:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 4 of 66 
 
Target Audience 
This document is intended to inform and guide our colleagues from Customer Experiences and 
Solutions (CXS) regarding our cloud strategy and the related architecture. The paper focuses on the 
cloud-native subscription model using the SAP Business Technology Platform. Hence, SAP Cloud 
ALM is in the center. ADD MORE ON DATA LAKE /LLM HERE. 
Classical backend infrastructures like SAP Solution Manager, Focused Run, W71, and CBX are not 
in focus here. 
If you are a new engineer in CXS, please check our onboarding WorkZone. 
 
Document Structure 
• Chapter 1: The document starts with a high-level abstract on SAP Cloud ALM… 
o Business Requirements 
o Engineering Culture 
o Architecture 
 
• Chapters 2 to 5: Describing the aspects in detail. 
o Business Requirements for SAP Cloud ALM 
o Engineering Culture, Processes, and Tools 
o Architecture Guiding Principles 
o Architecture Decisions 
 
 
 
CXS Architecture Contacts 
See https://wiki.one.int.sap/wiki/display/CXSDEV/HOME#HOME-ContactsforEngineersinCXS for the 
latest status. 
 
 
 
 
 
 
 
 
 
 
 
This document uses the terms SHALL and SHOULD as described in IETF RFC 2119: 
 
SHALL   This word means that the definition is an absolute requirement of the software 
(synonyms are the terms "REQUIRED" or "MUST", but this document uses SHALL only. 
 
SHOULD   This word, or the adjective "RECOMMENDED", means that there may exist valid 
reasons in particular circumstances to ignore a particular item, but the full implications must be 
understood and carefully weighed before choosing a different course.

Page 5:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 5 of 66 
 
Foreword 
The Intelligent Enterprise will consume the ultimate scalability and automation capabilities of the cloud 
to gain the maximum insight from its highest company value, the data accessible for this Intelligent 
Enterprise. Consequently, all applications will run in the cloud. An Intelligent Enterprise will also differ 
from others in that it manages and supports all these cloud applications with one application lifecycle 
management (ALM) in the Cloud, the SAP Cloud ALM. 
With thousands of live SAP Solution Managers, SAP has already proven the importance of one ALM 
in our installed base and continues to delight our customers regarding the service and support 
lifecycle. With SAP Cloud ALM's ease of consumption of SAP applications in the cloud, hybrid and 
on-premise is the focus. Consequently, SAP Cloud ALM is enabled to cope with the much higher 
frequency of innovation cycles in the cloud. Our mantra is DAILY! 
We, the engineers, have fundamentally changed the development and deployment processes – all 
based on the core belief of "only one valid version of the code, no bifurcation of code , and 
consequently no older releases anymore ." A simplified code lifecycle  powered by Deploy with 
Confidence (https://dwc.tools.sap/). We cont inuously deliver and deploy to our live customers , 
DAILY. 
The engineering experience has become a sustainable cloud journey for all of us, which drives 
customer satisfaction and employee engagement, all based on high , instantaneous adoption of the 
newest features and robust automation , improving quality every day. We have reached a totally 
different level of quality already, knowing that we will have to get much better at running > 50'000 
customers soon. 
The vision of "powered by CALM " goes beyond this. All transformation enablers from Business 
Process Management and Business Transformation Services (incl . data transformation, mergers & 
and carve-outs) are powered by SAP Cloud ALM , e2e quality ensured and integrated with SAP 
Service & Support.

Page 6:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 6 of 66 
 
 
     Figure 1 – Evolution of SAP Application Lifecycle Management to Business Transformation Suite

Page 7:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 7 of 66 
 
1 Abstract 
This document provides guidance and rules for cloud development in CSUP-CXS (Customer 
Experience and Solutions). SAP Cloud ALM is SAP's cloud-based application lifecycle management 
offering. https://support.sap.com/en/alm/sap-cloud-alm.html  
SAP Cloud ALM is built on the SAP Business Technology Platform. Implementation follows a cloud-
native, micro-service architecture pattern. The software is deployed into several provider accounts 
across the globe and consumed by the customer per Software as a Service (SaaS) subscription.  
SAP Cloud ALM is a "Customer managed SaaS application " and contains more than 80 
microservices. Microservices are implemented in Java (node.js is possible too, but so far we avoided 
limiting DevOps complexity). We use Deploy with Confidence (DwC), Cloud Application Programming 
Model (CAP), and SAP Cloud SDK (more details on these tools are provided in this document). 
We use  domain-driven design  to model the microservices.  Data separation is done by creating 
separate database schemas (HDI container) in SAP HANA Cloud - per customer tenant and domain. 
Depending on the criticality of the microservices, we can run the services on a standard SAP HANA 
service plan or a high-availability SAP HANA instance. For resilience reasons, the HDI containers of 
the 80 microservices are distributed across (currently) 20 SAP HANA Cloud Instances per SAP Cloud 
ALM deployment. 
This ACD … 
• Provides a summary of the business requirements of SAP Cloud ALM 
• Describe our engineering culture and process 
• Lists architecture guiding principles and  
• Architecture decisions that we have made based on the business needs and principles 
The document is a summary of all aspects.  Details and more frequently changing information can be 
found via the various links in this document. 
 
 
Figure 2 - Business Target, Engineering Culture and Architecture

Page 8:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 8 of 66 
 
1.1 Business Target 
Deliver the best customer support experience in the industry. Minimize the customer effort to 
implement (Build) and operate (Run) the Intelligent Enterprise Suite. The focus is on cloud-first and 
hybrid-cloud customers. 
The three areas of SAP Cloud ALM and their key capabilities: 
 
Figure 3 - SAP Cloud ALM - Product Description (original slide) 
 
Currently, we are working on onboarding the SAP Business Transformation Center (BTC) into CALM 
(wiki). That will likely be a fourth pillar besides Build, Run, and Service.

Page 9:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 9 of 66 
 
1.2 Engineering Culture - Deployment with Confidence 
SAP Cloud ALM supported the rise of Deploy with Confidence (DwC) to manage SaaS Software 
delivery because we saw the need for such culture, processes, and tools early on. Meanwhile, DwC 
is the established Golden Path to engineer business applications on BTP. We continue to contribute 
and inner source towards DwC and related tools. More info: 
• Golden Path: Guiding Engineers to Successfully Built SAP BTP Cloud Applications 
• SAP Cloud ALM – Culture Transformation Guide 
• Deploy with Confidence (DwC) 
• More info on CALM@DwC: https://wiki.one.int.sap/wiki/x/p02-fw  
• DORA QuickChek for CALM: https://www.devops-research.com/quickcheck.html 
 
Chapter 4 – “Engineering Culture, Process, Tools” provides more details on DwC.

Page 10:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 10 of 66 
 
1.3 Architecture 
This ACD, in combination with the wiki, is the basis for all cloud-native developments in CXS. 
The following figure illustrates the overall architecture for CXS Cloud Services in the context of SAP 
Cloud ALM. 
 
Figure 4 - High-Level Architecture CXS Cloud Services - SAP's Cloud Native Support platform  
 
 
 
All CALM microservices are deployed/operated in one provider sub-account per data center where 
CALM is available for customer subscription. 
The CXS Cloud Architecture is based on multi-tenancy-enabled microservices. Multi-tenancy refers 
to software architecture in which tenants share the same technical resources but isolate data and

Page 11:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 11 of 66 
 
users. In SAP BTP - Cloud Foundry, we have a single instance of the application that serves 
multiple customers (tenants). See the BTP Multi-tenancy wiki page at 
https://wiki.wdf.sap.corp/wiki/x/dg5rbQ. We develop adhering to the 12 Factor Apps principle 
https://12factor.net. 
 
Build, Run, and Service are represented by currently ~50 microservices. There are a few more to 
come, so maybe we reach about 65 in 2022.  
All CALM microservices are consumed by customers in customer-owned BTP Sub-accounts. 
This type of subscription scenario, on top of a customer-owned BTP account, is called a customer-
managed SaaS application. 
Like for all customer-managed SaaS applications, the customer is responsible for the global 
account, the subaccounts, the assignment of the IAS Tenant, the subscription, the configuration of 
the cloud services, etc. However, where possible, we provide setup automation capabilities to 
simplify and streamline customer tasks. 
There is an automated CALM-customer-tenant onboarding process. Interested customers can 
trigger it from a corresponding SAP for Me application. This will create one global account with a 
sub-account subscribed to CALM. The customer could define additional sub-accounts and 
subscribe to SAP Cloud ALM manually multiple times. However, this is not in focus now. We head 
to the fact that each customer needs just a single subscription to CALM. 
We head for a common architecture in SAP Cloud ALM Build, Run, and Service Delivery Cloud. 
 
  
Number of Customers 
expected  
2019:        50 
2020:      300 
2021:   1.000 
2022:   3.000 
2023:   5.000 
2024:   8.000 
2027: 50.000 
Underlying 
Platform/Application Server  
SAP BTP / Cloud Foundry environment; more than 50 microservices 
implemented in Java. CAP and HANA Cloud. Cloud SDK is 
recommended but not mandatory 
Product Type Customer-managed SaaS Application 
Delivery Cloud Delivery: no deployment into customer accounts; consumption 
via subscription; no on-premise delivery 
Commercialization: 
SAP Cloud ALM and Cloud Service Delivery are part of the customer's SAP Cloud Subscription contract. 
Main Use Cases / Functional Scope 
The software provides all features so that the customers can manage their cloud and hybrid solutions.

Page 12:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 12 of 66 
 
CXS Cloud-Development Stack - Built-on BTP 
To implement the microservices, we decided for the Built-on SAP BTP technology stack. It is Open 
and Opinionated and supports SAP-centric cloud-native solutions.  
 
Figure 5 - CXS Cloud Stack based on SAP BTP Strategy Paper - Slides 
 
The software stack enables programming services with the so-called Cloud Application Programming 
Model of SAP BTP. 
 
The SAP Cloud Application Programming model is SAP's way of guiding you through cloud 
application development by offering a consistent end -to-end programming model that includes SAP 
and open -source tools, languages, libraries, and APIs tailored for service and application 
development on the SAP Business Technology Platform.  
You can say it is both "open" and "opinionated", because while it does give you flexibility and choice, 
it also marks a clear golden path through best practices & guidelines. For example, you can use 
SAP Business Application Studio , Eclipse, Visual Studio Code , IntelliJ IDEA , or any other 
development tool you choose. 
The cloud application programming model saves from adding boilerplate code and lets you focus on 
differentiating and personalized features specific to your business needs.  
For more information, see help.sap.com and Golden Path: Guiding Engineers to Successfully Built 
SAP BTP Cloud Applications 
Following the CAP model, each CXS microservice has the following high-level integration 
architecture:

Page 13:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 13 of 66 
 
  
Figure 6 - CALM microservice architecture 
 
 
Details on investigated alternative architecture stacks can be found in the architecture decision 
record ADR-0010 Choice of Technology Platform & Runtime for SAP Cloud ALM SaaS Application

Page 14:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 14 of 66 
 
2 Business Requirements for SAP Cloud ALM 
 
The scope of SAP Cloud ALM is to: 
• Deliver the best customer support experience in the industry. 
• Minimize customer effort to adopt and operate the Intelligent Enterprise Suite. 
• Reduced total cost of implementation and end-to-end Operation. 
• Consolidate all the solutions that help SAP customers implement faster and operate 
better. 
The characteristics of SAP Cloud ALM are:  
• It is cloud-based to achieve an exceptional end-to-end support experience for multi-cloud 
and hybrid SAP solutions.   
• Free of charge for the customer. Usage rights are already included with SAP Enterprise 
Support. 
• Support SAP to attract cloud-only and cloud-first customers and to keep customers for life.  
The new cloud offering s can be better understood when bringing them into the relation/context of 
SAP Solution Manager. SAP Solution Manager 7.2 is the tool of choice to provide application lifecycle 
management for all SAP on -premise products, partially also hybrid landscapes.  We assume cloud-
only- and cloud-first customers have only low or no  on-premise footprint. Such customers will not 
operate an on-premise SAP Solution Manager system. 
Therefore, SAP Cloud ALM, including Cloud Service Delivery, was introduced to cover that area. SAP 
Cloud ALM capabilities can be grouped into Build (Implementation), Run (Operation), and Service. 
1. SAP Cloud ALM Build (CBuild / Implementation) covers the business process "Requirements 
to Deploy". It consists of several features, for example, process management, implementation 
projects, change and deployment management, test management, etc.  
 
CALM Build – Process Model  
CALM Build – Overview Screen 
 
2. SAP Cloud ALM Run (CRUN / Operations) covers the business process "Predict to Avoid". It 
consists of features like integration monitoring, business process monitoring, user monitoring, 
etc.  
CRUN is handled by Technology Guideline 11 (TG11); Slides and Demo recording from 
S/4HANA Cloud Day.

Page 15:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 15 of 66 
 
 
CALM Run Integration Monitoring 
 
Integration Monitoring - Analytics 
 
3. SAP Cloud ALM Service covers the service delivery center, service execution engine, 
service/check authoring, template asset management, issue and action management, and 
service results. SAP Cloud ALM Service offers features for SAP employees (internal facing) as 
well as for SAP Cloud ALM customer users (external users). There are several communication 
and integration scenarios between internal-facing and external-facing applications.  
 
 
CALM Service – Launchpad Tiles 
   
  Service Explorer – Services 
 
 
Service Delivery Center – Overview

Page 16:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 16 of 66 
 
Press Release: SAP Cloud ALM Enhances Support for Cloud-Based Solutions on 05/2020 
 
WALLDORF — SAP SE (NYSE: SAP) announced multiple updates to the SAP Cloud ALM 
solution today. The cloud-based application lifecycle management (ALM) solution helps 
track and manage the needs of customers of cloud solutions from SAP.    
https://news.sap.com/2020/05/sap-cloud-alm-enhances-support-for-cloud-based-solutions/ 
As a result of the update, SAP Cloud ALM will support additional SAP 
solutions – including SAP S/4HANA Cloud, SAP SuccessFactors solutions, 
SAP Customer Experience solutions, and SAP Ariba solutions. SAP Cloud 
ALM was redesigned with improved capabilities to simplify the 
implementation and operations experience as more customers move to the 
cloud. 
"As the cloud landscape advances and cloud solutions become more important, it's critical to continuously 
update SAP Cloud ALM to meet expectations of a cloud customer mindset," said Marc Thier, SVP of 
Application Lifecycle Management, SAP. "Over the last year and a half, we've focused on simplicity and 
evolving SAP Cloud ALM so the platform can be used by business and IT roles with no need for technical 
knowledge." 
SAP Cloud ALM benefits customers during various innovation cycles, including: 
• Easy deployment for companies that choose SAP S/4HANA Cloud and SAP 
SuccessFactors solutions: SAP Cloud ALM helps with team onboarding and fit-to-
standard workshops for configuring the customer's cloud solution. It tracks project progress 
by guiding customers through the implementation process and reports project status 
automatically. 
• Integration for customers who use more than one cloud service: When managing 
multiple cloud services – such as SAP S/4HANA Cloud, SAP SuccessFactors solutions, or 
SAP BTP Integration Suite – customers must monitor the integration themselves, a process 
which SAP Cloud ALM can help them manage. 
• Outlook for managing hybrid solutions: Customers adopting the Intelligent Enterprise 
will see increased support for on-premise solutions like SAP S/4HANA. Monitoring the 
integration of on-premise or other cloud products is an additional discipline SAP Cloud ALM 
will focus on in the future. 
Customers who subscribe to a cloud service from SAP that includes SAP Enterprise Support cloud editions 
have access to SAP Cloud ALM at no additional cost. [Update 2022: Enterprise Support customers are entitled 
now, too] 
SAP is dedicated to simplifying and improving users' journeys to cloud-based solutions and supporting 
companies of all sizes in their goal of digital transformation. In extending full ALM support, the current update 
to SAP Cloud ALM takes an important step toward a more agile, innovative future. 
Read more about SAP Cloud ALM

Page 17:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 17 of 66 
 
3 Powered by CALM 
Powered by SAP Cloud ALM is a new branding for onboarding new use cases on the SAP Cloud 
ALM platform. We open our CALM platform to make integration and delivery easy for all development 
teams of SAP (so not only CXS). By this reuse we can simplify customer experience and offer all-in-
one services under SAP Cloud ALM. This is the target of Powered by CALM  is enabling any 
organization inside SAP to be part of one (or more) of the three delivery channels that are 
Powered by SAP Cloud ALM. In combination, the channels simplify the user experience (for SAP 
and Customers). 
Three examples, one for each channel that we offer, are: 
1. PALM: We target the broad adoption of SAP Cloud ALM (CALM) and continue to serve 
our customers who have not yet onboarded and started their SAP Cloud ALM journey. 
We solve this challenge by extending our platform to a new SaaS solution 
named Public ALM (PALM). Our paved road approach helps to onboard scenario 
owners to Public ALM, which is then accessible by our customers' Universal ID through 
SAP for Me. Process Navigator by SAP (formerly known as Best Practice Explorer), 
Readiness Check, Roadmap Viewer, and Fiori App Library are the first use cases on 
the Public ALM infrastructure. Those scenarios offer an easy entry point for customers 
and will guide them finally to onboard to a full CALM tenant: 
2. CALM: SAP Business Transformation Center (BTC) gets part of the CALM delivery 
channel. BTC customers will benefit from seamless integration with CBuild 
implementation project capabilities. So, the business and data transformation/migration 
from i.e., ECC to S/4HANA can be simplified based on Powered by SAP Cloud ALM. 
Our customers will benefit from seamless implementation project capabilities to plan and 
realize their data transfer from i.e., ECC to S/4HANA. 
Readiness Check and Roadmap Viewer join beside PALM also CALM, reusing the 
microservice for both channels. Onboarding Content Framework from the S/4 HANA team 
will join CALM and integrate with the SAP Cloud ALM implementation project to guide the 
customer with streamlined UX focusing on SME (small and medium-sized) customers. 
3. XALM: Service Delivery for SAP employees serves via one cross-Cloud ALM (X-ALM) 
tenant for all SAP-internal stakeholders from Premium Engagement, Preferred 
Success, and Enterprise Support, who digitize, develop, and deliver services to all SAP 
customers. The XALM tenant can collaborate with the customer users in the many 
CALM tenants using event-based communication (seamless between the microservices, 
across customer tenants, and even across data centers). This can be used to centrally 
manage/author SAP content in XALM and then distribute the content to all customers in 
CALM/PALM (content is distributed).  
Several microservices that are used for XALM are also used in the CALM delivery 
channel, for instance, Service Delivery WorkCentre. – and all integrate with task 
management that was initially created as a CALM-Build microservice. 
As PALM, CALM, and XALM are built on the same platform, all teams benefit from the same proven 
engineering principles, daily delivery, tools, and simplified processes that we invented for CALM - in 
short, The Paved Road Approach . On top of being based on one standardized infrastructure and  
reuse services, the integration of scenarios across and within PALM, CALM, and XALM is simplified. 
In sum, "Powered by SAP Cloud ALM" is more than its parts. All teams across SAP are welcome 
to contribute application lifecycle-related capabilities. The Paved Road approach enables teams 
to deliver innovation continuously and sustainably.

Page 18:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 18 of 66 
 
 
Figure 7 – Powered by SAP Cloud ALM Building blocks 
The picture above shows significant building blocks and layers that constitute Powered by SAP 
Cloud ALM concept/branding.  
 
If a use-case should join PALM, CALM, XALM, or a combination of these, needs some 
explanation: 
1. Integration with PALM: External teams often join from the SAP for Me sphere, 
needing a replacement for NEO or ABAP-based backend implementations. The teams 
look for ways to implement business logic in the cloud (Java/Node.js) and use HANA-
based persistence. They need a reliable, fast, flexible delivery process and operations 
model. 
Hence, the likely starting point for them would be PALM. However, Powered by CALM 
isn't limited to PALM. The microservices developed for PALM can also run in CALM 
and XALM after minor adaptations that usually do not need a fork of services/repos 
(e.g. can work with operation/configuration toggles). 
Check the PALM wiki page for more details.  
Most applications that start in PALM will also want to join the CALM delivery channel: 
2. RECOMMENDATION: Direct integration with CALM delivery channel: The teams 
can join CALM directly without integrating with PALM (For example, the CLM Customer 
Landscape App). 
We target to guide all customers to their CALM tenant with the benefits of deep 
landscape integration and a broader user base (not just restricted to ~500k S-Users 
worldwide). In most cases, apps in PALM will have a considerable benefit when 
deployed to CALM with a much deeper integration into the customer processes. We 
aim to have the most customers in CALM in the next few years (all relevant 74.000 
customers are entitled already!). Reusing code/microservices across PALM and CALM 
can mostly work (the main challenge will be the different user base and, hence, 
authorization checks and the weaker data separation/security situation caused by the 
shared cross-customer-account setup of PALM that is inherited by SAP for Me). 
However, it is still an additional effort to operate and test. Therefore, a business 
decision is made case-by-case if a PALM deployment in addition to CALM makes 
sense. In many cases, a focus on CALM can be the better approach. 
3. For scenarios that require collaboration between Customer and SAP, teams can 
leverage the combination of CALM and XALM (see the Service Delivery use case).

Page 19:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 19 of 66 
 
 
 
Figure 8 - Relation of SAP for Me, PALM, CALM and XALM. The diagram also shows the 
different user bases (Universal ID / Customer IAS Tenant in CALM / SAP-internal IAS tenant) 
 
Co-Active Coaching to the Paved Road Approach 
Co-active means being in action together. SAP Cloud ALM's cloud native journey has been a success 
story, continuously improving the solution and delivering stunning quality and innovation speed to 
benefit SAP Cloud ALM customers. 
The Paved Road Approach includes simplified processes, an agile toolset, and cloud engineering 
with "daily" as the golden principle; defining the mantra of "automate all you can automate" reduces 
manual toil for engineers, drives quality, and minimizes customer support tremendously, which then 
leaves time and capacity for continuous innovation. 
Details and the latest updates on Powered by SAP Cloud ALM: https://wiki.one.int.sap/wiki/x/64zNug

Page 20:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 20 of 66 
 
4 Engineering Culture, Process, Tools 
The SAP Cloud ALM Engineering Culture is based on Deploy with Confidence. An overview can be 
found on the following slide: 
 
Figure 9 - Engineering Culture and Customer Experience 
 
Deploy with Confidence covers the whole process from Customer Requirement over build and test 
to Operation. DwC Documentation: https://dwc.tools.sap  
Technology is an enabler to solve problems, but it's people who truly solve problems. This aspect is 
often forgotten. DwC starts with the culture first, having three aspects: 
Single Trunk (single code line): Eliminating long-living feature branches leads to massive 
simplification in the development: You don't need double maintenance of the code. 
Test and integration of the new code into one SaaS application happens faster and helps to get 
immediate feedback on the current state of the application.  As a result, we see a reduction in 
development complexity and, hence, costs. 
When following the single trunk approach, we have to hide incomplete functionality from customers 
behind a feature toggle. Thus, we end up with the second principle: 
Release feature toggles: Patches and features are delivered in one unique codeline. Hence, there 
must be other ways than branches to control the visibility of functionality for the customer users. 
Release-feature-toggles are the means to control software release efficiently in a cloud-native 
environment. 
Daily Delivery to Production: Let us assume you need to deliver a critical bugfix. Of course, you 
need to be able to provide it as soon as possible, and the reason is that our customers expect this.  
Therefore, the delivery is done at least daily (for urgent hotfixes, SAP Cloud ALM can deliver a

Page 21:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 21 of 66 
 
change to production in 30 minutes, including end-to-end testing, deployment, and compliance). 
This Daily principle drives the automation of testing and delivery activities. 
These cultural principles have proven to be important success factors for companies like Google, 
Netflix, and Amazon. 
 
Figure 10 - Cloud Engineering Culture at SAP Cloud ALM 
 
The feature delivery frequencies at SAP Cloud ALM 
 
Figure 11 - Feature delivery frequencies at SAP Cloud ALM

Page 22:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 22 of 66 
 
4.1 Single Trunk Delivery Model 
Into the single codeline, changes are frequently merged ("merge-to-main"). The visibility for customer 
users (but also for testing) is controlled via release feature toggles. As the visibility of the changes 
can be managed by toggles, the code can be released to production at any time. Hence, we do so as 
this simplifies integration and lifecycle management processes. There is just one unified process for 
feature delivery, bugfix, and hotfix needed. 
 
Figure 12 - Deploy with Confidence - Single Trunk and Daily Delivery 
A detailed explanation of how Single Trunk fosters continuous integration is provided by Martin Fowler 
at Continuous Integration (martinfowler.com). The article emphasizes the need to merge all changes 
into the main branch often (at least daily). The daily delivery dashboard can be used to monitor how 
long each commit takes to reach production. 
 
Figure 13 - Frequent merges to the main branch in DwC > Amalthea > Deliveries > Insights

Page 23:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 23 of 66 
 
4.2 Release Feature Toggles 
A Scrum Team (the PO usually) can decide to deliver functionality into production at any time (given 
all product standards are checked automatically and automated tests assure stability).  
Making the new functionality visible to all customers might need to be done in a consolidated w ay 
(Training effort, rollout, etc.). Details: https://martinfowler.com/articles/feature-toggles.html 
That will also depend on the type of change you do. For E.g., a performance improvement can be 
activated immediately from a Release-Management perspective. 
The DwC Feature Cockpit helps to keep an overview of the toggles: Feature Toggles - Amalthea

Page 24:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 24 of 66 
 
4.3 Daily Delivery to Production 
Things you do more often create less stress than things you do only occasionally. 
Only daily (or more often) delivery to production brings teams into a continuous, sustainable change 
mode. Teams will use their engineering skills to automate the process. 
 
Figure 14 - Why daily? Big waterfall | small waterfall | no waterfall 
 
Our Mission: Build Great Software Faster. 
Why build faster at all? Answer: Because our customers expect that from us! 
By fast, we do not mean the number of lines of code that are produced by the engineering team. 
And we also do not mean the number of features. These absolute numbers can be measured 
easily, but they do not provide any information about the value for our customers. We focus on the 
speed of the feedback loop with the customer and the users because this feedback loop allows us 
to measure the value. That measurement is challenging, but the prerequisite is making a service 
available to users. Once users can consume a service, usage measurements, net-promoter scores, 
interviews about the experience, and more can be done. If a feature is implemented but not 
delivered, there can be no value and no feedback! 
 
Growing the SaaS solution daily – The Solution Vector Concept 
When the customer SaaS solution is updated daily, one needs a very robust update mechanism 
with real zero downtime for the customer end users. There shall be no impact on any user session 
on the update! This can only be achieved by being able to operate the old version and the new 
(daily delivered) version in parallel for some time (lifetime of user sessions) 
When a daily delivery is done for the day, the previous version is still active for end-users. In parallel 
to the day-1 version, the new one is deployed and tested. Tenant Lifecycle activities like database 
schema updates are performed. Once all is set, new user sessions can log in to the new version. 
The new version is most likely slightly larger in code and feature set (feature toggles!). Only new

Page 25:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 25 of 66 
 
user sessions will see that new functionality, including consistent switching of documentation, 
authorizations, etc.  
We call the combination of toggle set, microservice versions, documentation, etc., a solution vector. 
 
The Confidence in Deploy with Confidence is about the Interface Compatibility between the 
Microservices, their UI, and Database: Only complete Vectors and no Intermediate States need to 
be regarded (Exponential Test Complexity otherwise!) (External APIs must be compatible, no 
change here! > Versioned) 
Google: "There is no compatible change. There is only change! And every change can break 
something. Correctness is an illusion. Relevant is fitness for release." 
 
 
4.4 Feature-Driven Development Process 
Based on the cultural values, a cloud-native feature delivery process is defined.  
• It starts with the definition of a feature.  
• The features are developed behind a feature toggle and in a single codeline.  
• Fast and compliant build pipelines are very important to achieve daily delivery.  
• Fully automated end-to-end tests validate correctness from the customer's perspective. 
• We activate features when we are ready and when it's best for the customers, no stress. 
Quality first. 
• After the features are activated, we can measure the usage and success of the feature and  the 
value that the feature delivers for the customer. 
All project members, including developers  ("engineers"), product owners, quality engineers, user 
assistants, and so on, are involved in the feature-driven development process.

Page 26:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 26 of 66 
 
 
Figure 15 – Feature-Driven Development Process of SAP Cloud ALM at DwC 
 
As the process is essential to understand, here is a diagram with more details: 
 
 
Figure 16 - Feature-Driven Development Process of SAP Cloud ALM at DwC - Details

Page 27:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 27 of 66 
 
4.5 Feature-Driven Development Process at SAP Cloud ALM  
Based on the templates co -developed by DwC and CALM, SAP Cloud ALM has the following 
landscape setup for the daily delivery process. 
 
Figure 17 - Deploy with Confidence - CALM Landscape Setup 
More info on CALM@DwC Landscape Setup at https://wiki.one.int.sap/wiki/x/p02-fw  
 
The feature delivery process at SAP Cloud ALM as a step-by-step guide: 
 
Figure 18 - Step-by-Step Guide for Feature Delivery  
Process details: https://wiki.one.int.sap/wiki/x/p16Ti

Page 28:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 28 of 66 
 
4.6 Daily Delivery Process for CALM Engineers 
There is a training session for new teams at SAP Cloud ALM: 
Daily delivery Together: https://wiki.one.int.sap/wiki/x/DmSngw  
The session can be provided by the delivery team and shows how all engineers should work together 
for high-quality and smooth delivery. 
The promotion from development to production can be followed live via the Grafana Delivery 
Dashboard: 
 
 
Figure 19 - Promotion Flow of PALM, CALM, and XALM.  
Communication between engineers and delivery team: Follow Slack channel #sap-calm-delivery 
 
4.7 Engineering View on Tools for Delivery 
Developers will work on their microservice GitHub repos. At SAP Cloud ALM , engineers can use 
Visual Studio Code, SAP Business Application Studio, Eclipse, or IntelliJ. 
Step 1: When a change of the microservice is ready from the developer's perspective, this change 
can be merged to the main branch : The single trunk / main branch is updated. This should 
happen at least once a day  to avoid big -bang merges, merge conflicts, long -living feature 
branches, and hidden code. 
Step 2: The merge will trigger the component build pipeline. Any build tool that can do SAP-compliant 
builds (e.g. , xMake, including artifact upload to Nexus)  can be used . SAP Cloud ALM  
pipelines include many more steps for test automation, etc. These are independent of DwC.  
CALM uses Piper general-purpose pipelines as  templates and optimizes them for 
performance and throughput. Several JaaS instances exist: SERVICE  CBUILD  BTC  CRUN 
Step 3: One of the last steps in the pipeline is to inform the Deploy with Confidence infrastructure 
about the successful build. This step will trigger the Deployment and Activation of the new 
microservice version within the SaaS landscape. 
Step 4: The pipeline trigger is received by Themisto, and it is evaluated where (in which stages and 
spaces) the new version needs to be available . Themisto is also called "the brain" behind 
DwC, as Themisto is responsible for calculating and triggering all needed landscape 
changes. For instance , Themisto informs Autonoe about the required changes  and (not 
depicted) also triggers a database schema lifecycle component called Euporie.

Page 29:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 29 of 66 
 
Step 5: Autonoe takes care that the needed deployments (e.g. , via MTA Deploy), unemployments, 
and routes are configured in SAP BTP Cloud Foundry. Cloud Foundry applications are 
operated in different spaces to separate DEV/TEST/PROD from each other ( significant for 
authorization management - not every Engineer should have access to productive customer 
data). 
Step 6: Once all deployments are done, Themisto gets the trigger to inform Jupiter about the new 
Landscape vector that can be used by SaaS users. Jupiter is an extended Application router 
that takes care to authenticate users and route access to the relevant apps in the appropriate 
spaces. 
Step 7: SAP Engineering can configure and control this flow with a visualization tool called Amalthea: 
https://dashboard.dwc.tools.sap/org/CALM/landscape/overview  
The following figure shows the process across the DwC architecture. The image includes Cloud 
Foundry deployment. Deployment to Kubernetes is possible as well. 
 
 
Figure 20 - DwC Architecture, Runtime, and Design Time 
Details about the Mechanics with Vectors, Routing, Deployments, etc.: 
https://wiki.one.int.sap/wiki/x/Gal-hQ  
 
Another view on DwC and CALM Architecture is in a public blog: 
https://blogs.sap.com/2020/06/15/quality-innovations-at-sap-cloud-alm/

Page 30:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 30 of 66 
 
4.8 Tools for DevOps Monitoring 
There is a Grafana Dashboard providing several KPIs and links to the various monitoring-related tools 
 
Figure 21 - Engineering Dashboard of SAP Cloud ALM - Grafana 
For colleagues new to CALM, make sure you tried out the link s, at least the ones indicated with the 
yellow star icon. There, you can also learn how to get access to the tools, etc. 
The wiki page https://wiki.one.int.sap/wiki/x/9pO6jg provides some screenshots as a fast overview of 
what data we can see in what tool. 
 
4.9 Carpe Diem – Our DevOps Model 
Our DevOps culture contains four key aspects: 
1. Live Site First 
The imperative for the whole organization – including management: If the live site is down (or 
related processes, like daily patch delivery, are blocked), there is no other activity more 
important than bringing the service back up. 
 
2. Shepherd Your Change 
As the developer of a feature, you are responsible for getting your feature to production, 
including delivery and operations. 
 
3. Automation Is Key 
Manual processes are error-prone, slow, and do not scale. Automation in testing, deployment, 
and operations is critical for a cloud service at a competitive cost. 
 
4. Measure and Learn 
Deliver often and learn from it. Constantly collect and proactively analyze metrics to gain 
insights for the future backlog.

Page 31:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 31 of 66 
 
These are sometimes too abstract rules. So, we have details of how exactly every CALM Engineer 
can support these values. The rules are documented in  
Guidance for CALM Engineering - Engineering Excellence by Continuous Delivery to Production, 
Daily 
Rules include: 
1. Care for CALM. We are all one SaaS solution. Act with care for the overall solution. Contribute 
as a multiplier. Support the Carpe Diem Process. 
2. Support the Daily Delivery - Monday to Thursday 08:20 - 10:00 CET a Level of Stability is 
Required 
3. Merge your branches to the main branch often. 
4. Keep your component build pipeline green! 
 
As rules alone are not enough, we established an entity taking care of CALM: The Carpe Diem team 
 
Daily life in a live cloud-native environment creates daily opportunities but also daily 
challenges. To simplify the lives of our Cloud Native Engineers and increase transparency and 
collaboration, we will combine automation, daily checks, best practices, and a we-all-care-
together mindset. We all will be working together as ONE team globally and taking care of 
each other – cross-location and cross-time zone – to ensure a smooth start of the business day 
– no matter where and when.  
– Carpe Diem! 
 
Our wiki describes how the Carpe Diem team, the Manager on Duty (MoD), and the Scrum 
team on Duty (SToD) work: https://wiki.one.int.sap/wiki/x/Y5V8hw

Page 32:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 32 of 66 
 
5 Architecture Guiding Principles 
This chapter lists the guiding principles for CALM architecture. Whenever we make architectural 
decisions, we validate the decision options against these principles. 
Based on these principles, many small and large architectural and design decisions are made. Many 
of these decisions can be found in this ACD.  
As we are in a dynamically changing environment, we use Architecture Decision Records (ADRs) to 
document decisions that are not inside this ACD.  
CALM ADRs: https://wiki.one.int.sap/wiki/x/-CHdtw  
 
1. We do Software Engineering 
We do Software Engineering: Programming a scaling product by many humans over time! 
 
Time 
For the life span of the product, we must be able to change all aspects. CALM is there to last for 
many years and decades, as the customer need for lifecycle support will likely not end. Hence, 
CALM architecture and processes must be planned accordingly to be sustainable and changeable. 
We do not provide just a PoC or Beta. We provide continuous, infinite innovation. 
 
 
 
For CALM, we decided on Software Engineering, hence the infinite game! Thanks, Simon Sinek, for 
formulating that!  
We invest enough time into your culture, processes, and tools to enable your services to grow and 
evolve! For instance, Daily Delivery guides us here. Can we deliver Daily efficiently  now and in the 
future? If not, we invest in time.  
 
Scale 
Supporting all customer segmentations and sizes in all regions, 5-digit number of accounts 
This support requires sub-linear scaling for any activity, especially human activity. 
 
Providing a scaling product over time is our core target and principle.  All other principles can be 
mapped back to these core principles.

Page 33:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 33 of 66 
 
2. Shift Left Principle 
 
Shifting left means doing any quality-related activity as early as possible in the development process. 
As the earlier issues are found, the easier it is to fix them or even automatically avoid that they happen 
in the first place. The earlier you can do a test (in the diagram left), the more efficient it becomes in 
the long term. That's why it is called shift left.  
This finally brings scale as manual checks and operations can be avoided. 
3. Suite of Microservices  
Applications SHALL be organized in microservices built around business capabilities; 
communicate mostly asynchronous, stateless, and scalable. 
 
CALM is designed as a suite of microservices. Microservice guiding principles: 
• Each service has a separate persistency that is usually not shared with other services 
(resilience, decoupling, etc.). 
• During runtime , the microservices are independent of the availability of the other 
microservices; communication is done via synchronous APIs and (preferred) asynchronous 
messages (events based on Kafka infrastructure). 
• Communication from a UI SHOULD usually only need one "hop". Avoid synchronous 
dependencies between microservices (resilience – if a consumed service is down, avoid that 
the calling service is not available, performance) 
• Favor asynchronous, message-driven communication patterns ( benefits are a flexible 
process flow, components can be exchanged, and decoupling) 
Note that there are still software lifecycle dependencies between the microservices. And since 
asynchronous communication might take some time (in worst-case scenarios, where related service 
has an unplanned downtime), these dependencies are living even longer  than in synchronous 
scenarios.  
Example: There is a new text field in the Notification service that can be maintained by customers 
via the Customer UI5 app. The text field is stored in the Product Management service. Already by 
this simple example, these services (although decoupled from a runtime perspective) get very much 
related on a semantical level: Only if the field is available in the notification and product service  then 
the field should be offered to the customer (otherwise, a user would enter that field, but it cannot be 
handled consistently). 
This advanced dependency handling is supported by Deploy with Confidence. 
SAP Cloud ALM microservices are reviewed by the architecture board. The review process 
and list of microservices can be found at: https://wiki.one.int.sap/wiki/x/QNxxiQ

Page 34:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 34 of 66 
 
4. Domain Driven Design and API-First Methodology 
API first, Modeled Microservices and aligned Domain Models as best practices 
This means APIs must be kept stable. 
We strive for an aligned domain model for every development. 
SAP Cloud ALM adopts the Domain Driven Design approach to understand and design domains and 
bounded contexts. This is a prerequisite for us before the development design and implementation 
phases can start.  
An API-first approach means that for any given development project, your APIs are treated as "first-
class citizens." Everything about a project revolves around the idea that the product and, hence, APIs 
will be consumed by client applications. An API -first approach involves developing APIs that are 
consistent and reusable, which can be accomplished by using an  API description language  to 
establish a contract for how the API is supposed to behave.  Establishing a contract involves spending 
more time thinking about the design of an API. It also often involves additional planning and 
collaboration with the stakeholders , providing feedback on the design of an API before any code is 
written. 
Public CALM APIs have already been released in the SAP API Business Hub. API Roadmap. 
 
SAP Open Connectors can be utilized to connect SAP Cloud ALM. Open Connector is a component 
of the SAP Integration Suite , which helps to interface various SAP and non -SAP products quickly. 
SAP Open Connectors comes with a large catalog of pre-built connectors, including JIRA. An example 
integration of SAP Cloud ALM with Jira is described in this blog. 
Domain Driven Design approach and API-first methodology are detailed in the wiki page: 
https://wiki.wdf.sap.corp/wiki/x/dsj6q

Page 35:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 35 of 66 
 
5. Testability 
Choose architecture decisions that support good test coverage and simplify the setup of tests. 
For example, we use the subscription model with the capability to have many independent test and 
demo tenants for our end-to-end tests in CALM. To make that work, we use schema separation per 
customer per domain (only exceptionally shared schemas across tenants are allowed). 
Testability is relevant for the complete technology stack and on all layers of the test pyramid. 
 
Details see  
• E2E Test Wiki: https://wiki.wdf.sap.corp/wiki/x/JPWJhw  
• Cloud Quality wiki: https://wiki.wdf.sap.corp/wiki/x/Vwime  
 
6. Secure by Default 
Secure by Default: Built-in security is recognized as a key challenge. - No compromises!  
We got the feedback from Hacker Simulation: "We see security is already from a concept point of 
view designed into the solution". This is what we head for and want to keep! 
Technically, Legally, and Trust-wise, we need to ensure that customers can accept our architecture 
and the risks.  
We follow the Secure Software Development and Operations Lifecycle: SDOL 
 
 
7. Simplicity for Customer 
A seamless, easy onboarding experience is needed. → We go the last mile (if needed, also for 
other groups at SAP). For instance, CALM has its own automated onboarding process. For details, 
see Chapter 6.16

Page 36:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 36 of 66 
 
8. Works aligned with SAP technology guidelines 
SAP Cloud ALM is embedded in the end-to-end Technology Guidelines as an orchestration layer: 
 
Figure 22 – Technology Guideline: Overall Architecture Diagram of ALM cluster 
See Sharepoint for a better resolution of the diagram 
Detail description of the technology guidelines: 
https://github.tools.sap/CentralEngineering/TechnologyGuidelines/blob/latest/tg31/README.md 
 
9. Consistent Architecture across Areas 
Consistent architecture across markets is an asset.  
Similar things SHOULD be done the same way across the markets.  
We align and decide together (Identity, Launchpad, Landscape, Connectivity, Messaging/Eventing, 
Onboarding, Commercialization Model, etc.) 
 
10. TCO 
TCO is our TCO!  
Decisions must lead to the lowest possible infrastructure costs for customers and SAP. 
We carefully monitor the TCO of SAP Cloud ALM and take active measures to optimize. Especially 
with many tenants, we target a low TCO per tenant. The following diagram shows the current 
extrapolated cost per tenant when the number of tenants grows.

Page 37:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 37 of 66 
 
The main cost drivers are HANA Memory and cloud foundry application runtime. SAP Cloud ALM 
monitors the consumption and costs thoroughly. TCO Dashboard: 
https://internal-dashboards.qod.cxs.only.sap/d/iygGLzAMk/tenant-monthly-shared-cost-estimation?orgId=1  
 
 
Figure 23 - Infrastructure Costs Dashboard for SAP Cloud ALM (2022-03-02) 
 
 
Figure 24 - Infrastructure Costs Dashboard for SAP Cloud ALM (2023-02-15) 
 
Details: See TCO considerations for SAP Cloud ALM in the wiki: 
https://wiki.one.int.sap/wiki/x/VvH7jg

Page 38:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 38 of 66 
 
11. Use the most appropriate toolset 
 
Use the most appropriate toolset for the job, adapt the architecture 
 
A default architecture path is defined in this ACD. 
Teams can use different than the established technologies (since we use microservices, that is, in 
principle, possible). BUT maintenance, integration, and onboarding must be covered by the teams - 
with proper TCO/TCD.  
Remain flexible of the Technology Stack: Consider frameworks that provide flexibility 
regarding the underlying technology stack. Avoid vendor lock-ins. 
 
Significant architecture decisions MUST be reviewed by the CXS Architecture board,

Page 39:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 39 of 66 
 
6 Architecture Decisions  
This chapter lists architecture and organizational decisions for SAP Cloud ALM.  
Besides the basic decisions in this ACD document, you can find further decisions in our Architecture 
Decision Records (ADRs) at: https://wiki.one.int.sap/wiki/x/-CHdtw  
Over time, we will streamline the decisions documented in this ACD and move more details to the 
ADRs.  
 
Design decisions can be grouped based on the layer they influence: 
 
The following table summarizes the main technology stack decisions. 
Architecture Area Layer Technologies to be Used 
Cloud Development 
Stack 
Cross Built-on SAP Business Technology Platform – Cloud Foundry 
environment 
Development 
Environment 
Cross Visual Studio Code, Eclipse, SAP Business Application Studio 
Lifecycle 
Management 
Cross GitHub, Piper-based pipelines executed on JaaS. Deploy with 
Confidence for Daily Deployment 
Clients Front End HTML 5 Clients (modern web browsers) 
Presentation Layer / 
User Interface 
Front End SAP UI5 (Java Script), Fiori for Tools (CRUN), Fiori (Service and 
CBuild); CDM Fiori Launchpad as a central entry point. 
Business Logic 
Layer 
Business 
Logic 
• Cloud Application Programming Model (CAP)  
HANA CDS Views with OData Services on Top, Java Applications 
based on CAP.  
Java Spring Boot to extend CAP  
• Node.js for Service Delivery Cloud was discussed as a valid option. 
But not chosen (surrounding teams were trained in Java already). 
• Reuse SAP Cloud SDK and Programming Guidance 
Other models need approval from the CXS Architecture Board. 
Data Persistency Persistency • Default: HANA Cloud:  HANA with HDI container as data separation; 
Be careful with costs (1GB HANA is 10 up to 30 € / month).  
The recommendation is to stick to CAP/CDS (as much as possible, 
without introducing HANA-dependent SQL) to allow database-
independent design time. 
• SAP BTP Document Management Service (MongoDB) for large 
Blobs like attachments

Page 40:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 40 of 66 
 
Integration 
Middleware  
Connectivity • BTP Kafka for asynchronous / Event Based communication  
• between our microservice (service-to-service inside the mesh) 
• between our data centers (service-to-service across our 
meshes) 
• between Cloud-LoBs & CALM 
• Jupiter Router for provisioning of external (synchronous) API. 
Jupiter has a cheap way to secure, measure, meter, etc. APIs can 
be published in SAP API Hub. (SAP API Management was not 
chosen due to weak integration with DwC, additional complexity 
(negative impact on resilience), and costs; documented in ADR) 
• For asynchronous communication with CALM outside world, 
Business Event Bus/Event Mesh (TG27) plays a role in connecting 
with Business Systems. However, scalability and functional gaps are 
huge. So, this event technology cannot be used for technical 
integration communication as needed for Integration Monitoring, 
Process Monitoring, etc. 
So, we invented our own Kafka-based solution to connect managed 
tenants with CALM using the app-to-app integration pattern. Kafka 
allows scaling, buffering, and potentially logging (Event log 
Architecture!) incoming and outgoing asynchronous messages. 
Note: We strive for an event-based, asynchronous microservice 
architecture. Ideally, synchronous communication between 
microservices is to be avoided.  
Asynchronous replication of data is an accepted pattern in case it 
supports decoupling of the services 
Reuse Tools and 
Guidance 
Cross https://wiki.wdf.sap.corp/wiki/x/H1W4eQ 
provides details on application logging, performance measurement, test 
automation, metering, security, scalability, analytics, Workflow, etc. 
BTP Reuse Service 
usage 
 The current list can be found at https://wiki.wdf.sap.corp/wiki/x/8mBTg  
 
 
The following sub-chapters describe several of these decisions in more detail.

Page 41:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 41 of 66 
 
6.1 Data Persistency: HANA Cloud as Default 
The recommendation for "Build-on SAP BTP" products is to use HANA as the default database. We 
follow this use-HANA guidance in SAP Cloud ALM Build, Run , and Cloud Service Delivery . HANA 
Cloud is used for OLAP and OLTP-based data. 
Large unstructured data BLOBs like attachments SHOULD NOT be saved into the HANA database 
but into the SAP BTP document management service. 
CDS Views/annotations are recommended to be used as an abstraction layer on top of HANA.  So, 
we are more flexible in case a move to another database is needed or to enable local testing with a 
database mock.  HANA-stored procedures can be used in case CDS modeling is not advanced 
enough. 
6.2 Data Separation in Customer Subscription Model  
In SAP Cloud ALM , data separation is implemented by using different database schemas per 
customer and domain. CALM uses the recommended tenancy model of Schema Separation (=HDI 
Container). See the architecture decision record at https://wiki.one.int.sap/wiki/x/MdOfuQ.  
The HANA service manager is used to create the corresponding HDI container automatically, 
orchestrated by DwC. 
For customer business data, schema separation (or HDI separation) SHALL be used. 
 
Figure 25 - Subscription Model with HDI Container - Simplified 
To ensure resilience, we decided to have a separate HDI container per customer per domain. A 
domain in this context is a set of logically bundled microservices (e.g., task management, change 
management, integration monitoring, etc.). How the domains are modeled in detail is subject to the 
Software Design Documents of the corresponding areas. 
HDI stands for Hana Deployment Infrastructure and indicates that there is a bit more behind it than 
just a database schema. 
 
The following figure shows the subscription, HANA Instance, and HDI container handling in more 
detail.

Page 42:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 42 of 66 
 
 
Figure 26 - Subscription Model with HDI Container – Detail (Visio) 
A. Each customer has their own separate global account for SAP Cloud ALM and subscribes 
to SAP Cloud ALM into (usually one) sub-account. 
For simplification reasons, just three single customer accounts (Customer A, B, C) and 
CALM Subscription are depicted here. 
B. Customers have multiple options for identity provider assignment. A corporate IDP can be 
reused, or a separate BTP IDP can be provided (the latter is not depicted in the diagram). 
C. SAP can have multiple demo accounts, too. Besides doing demos, this can be used for 
testing purposes and for support reasons (reproducing errors of customer accounts) 
D. All functionality is provided by the SAP CXS Provider Account. Resources like CPU, 
Memory, and persistence are provided centrally, too. The customer accounts do not need 
their own runtime quota. 
E. All CXS applications are subscribed as one bundle (no individual selection of sub-services), 
F. Data Separation by HDI container per Subscription-Tenant and Application area. 
The colored boxes on the right with the title "HANA" in the Provider Account illustrate the 
HDI container, which is created as a consequence of the subscription process.  
a. Each SAP HANA database instance is created manually by SAP in the provider account. 
b. The size of an existing DB instance can be increased over time. 
c. New DB instances can be created by the CALM Operations team to put new customers in 
separate DB instances.  
G. Very restricted SAP user access  to the provider account (only for Update/Upgrade and in 
emergency cases…) 
H. Data Exchange with the CXS Service and Support Data Lake. The Data Lake gets data from 
CALM Tenants, XALM, and any SAP Backbone infrastructure like Service Provider Cockpit 
(SPC),

Page 43:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 43 of 66 
 
The diagram shows how much focus we spend to keep the customers and their data separated as 
much as possible – at a reasonable cost. 
Reuse services like Workflow, etc.  SHALL  be checked not to violate that level of separation . The 
assumption is that all BTP reuse services are multi -tenant aware and provide the proper level of 
isolation. 
6.3 Subscription Model 
The customer consumes SAP Cloud ALM exclusively per subscription. There will be no software 
deployment into any customer account. Th e license materials must be assigned to the global 
accounts of the customer-owned SAP BTP Sub-Accounts so that the software can be subscribed to. 
The complete costs are accumulated in the global provider account operated by SAP CXS.  
To better understand the BTP Subscription model, some introduction to the BTP Domain Model is 
helpful:
 
Figure 27 – SAP BTP Domain Model

Page 44:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 44 of 66 
 
 
Figure 28 – SAP BTP subaccounts and subscription from provider account 
 
 
Figure 29 - Subscription Model (details see Jam) 
 
6.4 CALM@DwC Account Setup 
Use the Amalthea Cockpit to check the different sub-accounts and spaces that are set up for CALM: 
https://dashboard.dwc.tools.sap/org/CALM/landscape/overview  
CALM follows the standard recommendations of DwC for account setup.

Page 45:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 45 of 66 
 
6.5 XALM - Cross Customer SAP Cloud ALM 
Details: https://wiki.wdf.sap.corp/wiki/x/lTz_nQ  
CALM is an external customer-facing solution; all applications and features are available for all 
customers' tenants. 
There are use cases where SAP-internal facing tenant(s) must be supported. SAP employees 
need to access SAP-specific or internal tenants. Access to these applications and features must be 
protected from external customers. And that access usually has the semantics to 
manage ALL CALM customer tenants (across the various CALM data centers). Therefore, we 
configured XALM: XALM stands for Cross - X Cloud ALM. 
6.5.1 XALM Use Cases 
There are several use cases from different SAP areas for cross-customer XALM accounts. Some of 
the use cases are shown below. Major business requirements are from the Cloud Service Delivery 
area, where SAP consultants deliver services based on check procedures and service definitions 
created by service/content owners. Similarly , there are other areas where content is created, 
managed, and distributed to CALM customers. 
CALM Build 
▪ Standard business process content 
CALM Run 
▪ Health Monitoring authoring 
CALM Service 
▪ Service Asset Maintenance 
▪ Service Authoring 
CALM Cross 
▪ Project and Task management usage metrics extractors and SAP for Me Integration 
▪ Central Job Status Management 
▪ Cross Customer Analytics  
▪ Machine Learning – integration with Data Lake 
6.5.2 BTP Space Setup for XALM 
There is one shared ingress space for XALM and CALM in the EU20 data center (that will change 
once DwC supports setting up Jupiter Instances per application CF space, then we will separate). 
The spaces where the actual microservices are deployed are separated. So , XALM runs separated 
from CALM even though both are deployed in the same DC. The reason is that we make sure that in 
the EU20 data center, we already have a similar communication using external APIs like it is when 
calling between EU10 and EU20.

Page 46:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 46 of 66 
 
 
Figure 30 - BTP Cloud-Foundry Space Setup for XALM and CALM in EU20 and EU10 
 
In Amalthea, the setup looks as depicted below: 
 
Figure 31 - CALM Landscape Setup in DwC 
The different types of services (A / B /C) are a logical grouping of where our microservices are 
deployed. Details are described in the next chapter.

Page 47:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 47 of 66 
 
6.5.3 XALM / CALM separation of features vie toggle  
Since we need different feature toggle set configurations in XALM and CALM, we need separate 
landscapes with different software vectors. XALM Provider account has been configured in EU20.   
We have the following types of microservices:  
▪ Common in both internal and customer-facing scenarios 
▪ Specific to XALM (internal) 
▪ Specific to CALM (customer-facing) 
This can be illustrated as shown below: 
 
A permanent feature toggle x_xalm_cross_customer_tenant has been created to protect XALM 
and CALM features for microservices that are deployed in XALM and CALM . The following table 
illustrates different deployment options:

Page 48:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 48 of 66 
 
6.5.4 Data Separation in XALM 
In XALM, discriminator column data separation is allowed: Discriminator column data separation will 
be used in the SAP account, where data of different customers are persisted. In this account, only 
SAP employees have access to the application. So, in one managed HDI container, data from 
multiple customers is included. Still, per XALM tenant, one HDI container per domain is created. 
 
Figure 32 – XALM - Cross Customer account with Discriminator Column Data Separation 
Architecture decision regarding tenant-specific HDI container model is documented in ADR: 
https://github.tools.sap/CALM/design/blob/master/adr/adr-0190-hdi-schema.md. 
 
The diagram also shows the two ways to integrate XALM with the different CALM accounts:  
1. Asynchronous communication via our Kafka -based cross-data center communication 
infrastructure. This is the preferred way for integration for messages up to 0.5 MB. 
2. Synchronous calls using the DwC Internal API Users  (we use the X.509 compliant setup) . 
We use this way only if asynchronous communication is not feasible.  
 
6.5.5 Integration of XALM with CALM 
XALM's target persona is the SAP internal employee. Related persons can be from  the service 
delivery organization  and admin users who perform cross -customer operations , monitoring, and 
further integration scenarios.  
XALM is not an isolated application. Several integration and data replication scenarios exist with SAP 
Cloud ALM, SAP backbone systems, SAP for Me, etc. The below picture shows XALM communication 
with SAP Cloud ALM and SAP Backbone systems:

Page 49:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 49 of 66 
 
 
Figure 33 – High-level block diagram: Integration CALM, XALM, SAP Support Backbone 
 
The below diagram shows the asynchronous Kafka-based Cross Datacenter Communication: 
 
 
Figure 34 - Cross Customer Account Integration (wiki) 
The diagram also describes a new way to integrate with SAP Managed Cloud services: App2App. 
Details: https://wiki.wdf.sap.corp/wiki/x/IaUzkg

Page 50:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 50 of 66 
 
 
Figure 35 - Integration CALM-XALM including data separation, subscription,… - Detail (Visio) 
I. Synchronous API calls: Customer subscription tenants can exchange data with the central 
XALM account. 
J. The Central Services can access data from SAP Support Backbone.  
Preferred is access via technical user provided centrally (no need to have customers 
maintain s-users manually in their provider account). 
K. The central XALM account shall not be accessible by customer users for security reasons. 
We separate customer-access use cases and SAP-internal user access. The main XALM 
account with the cross-customer functionality of Service Delivery Cloud shall only be 
accessed by SAP users, like CSMs (Customer Success Managers) 
Here, SAP users see data that customer tenants actively push to SAP (customer needs to 
opt-in to send data).

Page 51:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 51 of 66 
 
L. Asynchronous messaging: Datacenter to datacenter exchange of events: Bi-directional Data 
Exchange is possible via Kafka, e.g. , sending  a service result from the Service Delivery 
central XALM services to the customer account. 
M. The central services offer a cross-customer view by design. Therefore, in one HDI 
container, there will be data of many customer CALM tenants (Discriminator Column data 
separation). Still, we create for each XALM tenant an own HDI-container in XALM to allow 
an easy test- and demo account setup. 
 
 
6.5.6 Integration of XALM with SAP Support Backbone Systems 
Integration of CALM with SAP support backbone systems is done via XALM tenants. From a security 
point of view, we don't connect SAP support backbone systems directly to CALM tenants. 
The service delivery center in XALM has integration with the ICP system, as shown below:  
 
Service result in XALM has integration to CBX system as shown below:

Page 52:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 52 of 66 
 
6.5.7 Integration of XALM with consumers like SAP for Me or Data Lake 
Some use cases require the central collection and storage of CALM data in XALM . This is, e.g., 
required to collect project data from the individual CALM tenants to provide the integration of this data 
in SAP for Me or to do benchmarking across all customers in the Service & Support data lake. 
To collect the data , we make use of Cross Data Center (CDC) Communication. Each change  of 
project data in the CA-ANA microservice will trigger an event to be sent to a dedicated Kafka message 
queue, which will then be forwarded to XALM via the CDC distributor component. The CDC Router 
component in XALM receives the message and puts it into the XALM Kafka inbound message queue. 
The microservice x-metrics-collector gets this message, parses it , and persists it in the cross-
customer HDI container, which is an HDI container per subscriber tenant model. On top, a REST API 
is created that can be consumed by SAP for Me or by the Data Lake using the service key. 
 
Figure 36 – x-metrics-collector architecture

Page 53:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 53 of 66 
 
6.6 PALM - Public ALM 
Public ALM (PALM) is one of the building blocks of Powered by CALM. 
There are use cases where a customer might not (yet) have their own SAP Cloud ALM tenant. A 
significant driver use case of PALM has been Process Navigator by SAP (formerly called SAP Best 
Practices Explorer). The main requirement consists of allowing S-users and P-users who are not 
necessarily SAP Cloud ALM customer end users yet to access and navigate through various best 
practices and business processes offered by SAP. This requirement is also aligned with the "off-
Neo" initiative. Another motivation of PALM is to provide an overview to S-users and P-users and 
give a glimpse of the capabilities that they can get by subscribing to SAP Cloud ALM. Therefore, we 
configured PALM, where P stands for Public ALM.  
Today, the SAP ONE Support Launchpad (in transition to SAP for Me) is positioned as a single-
entry point for support of all the SAP Customers using S/C/D/I/(P) users (hence Universal ID). 
The entry point (UI) of all service/support-related apps should migrate from SAP One Support 
Launchpad to SAP for Me. More information about the transition can be found here | recording. 
Therefore, Public ALM will not be "visible" as a new product with its own launchpad to end users, 
but PALM applications running in the PALM shell will be invoked by SAP for Me and displayed in an 
iFrame. Several integration options between SAP for Me and PALM have been considered. The 
decision to embed PALM applications in an iFrame in SAP for Me and not call them in a separate 
browser window has been documented in the ADR-0600. 
The picture below shows where the SAP Process Navigator, an example of a PALM application, is 
planned to be integrated with SAP for Me, mainly in the Services & Support area. 
 
Figure 37 - SAP for Me integration area for PALM applications 
 
The header and the footer of the PALM shell are hidden. Other services like the Web Assistant, 
Qualtrics, Search, and user settings will be triggered via the SAP for Me shell. Communication 
between the PALM application UI and the SAP for Me UI will happen via events. 
 
Applications that are deployed in CALM and in PALM need to implement the usage of certain 
features (e.g., Web Assistant, Qualtrics, Search) twice. This is needed because the standard shell 
is used in CALM, whereas in SAP for Me, the applications run as iFrame within the SAP for Me 
shell. The applications use a permanent feature toggle to differentiate whether they are running in 
PALM or CALM. 
 
The following picture shows the integration of the PALM applications into SAP for Me. The PALM 
shell uses a generic custom style sheet to run in the SAP for Me iFrame in a headerless mode. That

Page 54:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 54 of 66 
 
means that the header and footer of the PALM shell are hidden. SAP for Me and PALM use the 
SAP IDP (accounts.sap.com) for user authentication.  
The PALM shell is also responsible for collecting and submitting usage data via the usage data 
collector microservice. Some generic KPIs like "DB memory consumption" and "Clicks per UI 
component" are collected centrally by the usage data collector microservice. Application-specific 
KPIs can be collected by the PALM applications using the metering library.  
Other services (like Qualtrics surveys, Search, or Web Assistant) that are included in the SAP for 
Me header bar can be called directly by the PALM applications. 
 
 
Figure 38 - SAP for Me integration area for PALM applications

Page 55:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 55 of 66 
 
Should I migrate to SAP for me or PALM/CALM? 
As explained before, the user journey can start in SAP for Me. However , how to implement UI and 
Backend services differs. And one has the choice of implementing in SAP for Me directly or leveraging 
PALM/CALM. 
The following table shows some criteria to help you make this decision. 
Implement on SAP for Me infrastructure  Implement on Powered by SAP Cloud ALM 
(PALM/CALM) 
• Tight UI integration with other SAP for Me use 
cases is planned. 
• From a call with Kristian about SAP for Me: 
• Display-Framework is the focus - "SAP for 
Me component model to simplify end-user 
access" (SAP for Me team does not offer 
backend business logic infrastructure; 
business logic must be provided by the 
teams, based on existing backbone assets 
(like ABAP-based CB*, ABAP-based 
W7*, ODP, ...)) 
• SAP for Me is not meant as a general-
purpose platform. SAP for Me focuses on 
oData V4 + SAP UI5  (and basic Java 
backend) + D3 for graphics    
• For its own complex business 
logic/backend, a team needs to handle its 
own accounts, delivery process, 
monitoring/operation of HANA, etc.  
• A clear business value for CALM  
• Not the new platform for pure pre-sales 
positioning → That is SAP for Me 
• Entered data can easily integrate with 
CALM/XALM 
• Will not break Cloud Native Pattern (e.g., Data 
Separation) 
• Improve development excellence (e.g., Daily) by 
DwC development culture. 
• Reduce operation costs by harmonizing on a 
paved road. 
• Continuous innovation culture/effort (no throw-
over-the-fence after one year of development) 
• The need for strong data separation and 
customer-managed keys can be fulfilled in 
CALM. 
• Long-term private cloud deployments might be 
possible (CALM-only) 
For PALM use cases, see https://wiki.one.int.sap/wiki/x/qM8-sg  
For more info on the account setup for PALM, see https://wiki.one.int.sap/wiki/x/ugKGsw  
For details on authorization management in PALM, see https://wiki.one.int.sap/wiki/x/uU-kwg

Page 56:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 56 of 66 
 
6.7 Asynchronous Messaging and Eventing with Kafka 
We adopt asynchronous messaging for all communications in CALM with Kafka as the messaging 
broker. Our goal is to enable this for all our communication use cases within and outside of CALM.  
Adherence to this approach is the general architecture guidance, as this is important with our growing 
number of tenants and the need for resilience and scalability with this growth. 
Currently, we cover the following scenarios 
• Service-to-Service communication between the services within a DwC -Vector version (and 
also future versions of the vector).  
o Details: https://wiki.wdf.sap.corp/wiki/x/ypPrhw  
• Cross data center communication enables communication across different CALM and XALM 
provider accounts.  
o e.g CALM-EU10  CALM-EU20, XALM-EU20 CALM-EU10… 
o Details: https://wiki.wdf.sap.corp/wiki/x/mRFJmQ 
• Application-to-Application Communication. 
o e.g., Consume events that are received via CALM/XALM inbound APIs (e.g., metrics 
sent by Ariba-managed tenant) 
o Details: https://wiki.wdf.sap.corp/wiki/x/IaUzkg 
 
Unified Kafka Library 
CALM invests in an inner-sourced unified Kafka library to support the adoption  of asynchronous 
messaging using Kafka, covering the above-mentioned scenarios in the context of DwC. 
 
Figure 39 - Unified Kafka Library – Mission 
 
 
Figure 40 - Unified Kafka Library - Block Diagram

Page 57:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 57 of 66 
 
6.8 Embedded Analytics in CALM 
For operational reporting (analytics here is typically integrated/embedded into the SAP Cloud ALM 
Applications), we reuse the data and CDS models as created by the transactional application use 
cases. We typically share the same data model within one domain. The benefit is to avoid redundant 
definitions of metadata and to ensure data consistency. 
For complexity and cost reasons, SAP Analytics Cloud is not used for Embedded Analytics in CALM. 
For analytics use cases that go beyond microservices and are not possible to integrate on the UI 
layer, we collect the relevant data into a central analytics microservice. For instance, for CALM Build 
Overview Page: 
 
Figure 41 – CALM Build Overview Page 
Details: https://wiki.wdf.sap.corp/wiki/x/ibZVfQ  
 
6.9 SAP Analytics Cloud (SAC) – Integration Option 
Customers who have their own SAP Analytics Cloud (SAC) tenant can use the SAP Cloud ALM 
Analytics API that is published in the SAP API Business Hub. The SAP Cloud ALM Analytics API is 
implemented as a service broker and provides a REST / oData API to access the CALM analytics 
data. Customers need to first subscribe to the service broker and then create a service instance and 
a service key in their CALM customer account. With this service key, they can create an oData Service 
connection in their SAP Analytics Cloud tenant. The oData Service connection only supports data 
acquisition, with no live connectivity. After customers create SAC models based on the SAP Cloud 
ALM Analytics API, they can extract data from CALM and persist in their SAC tenant. 
It's also possible to provide pre-built content that customers can access within the Content repository 
within SAC (see also the Analytics Technology Guideline TG32).  
It would also be possible to embed SAC content directly in the CALM application, but this would 
require automated SAC tenant provisioning. It was decided not to embed SAC content due to higher 
TCO.

Page 58:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 58 of 66 
 
6.10 Service & Support Data Lake 
With the Service & Support Data Lake  platform, we want to provide data -driven innovations for our 
stakeholders in Customer Solution Support & Innovation (CSI). The platform runs on Kubernetes on 
Converged Cloud and includes several components to do data integration, machine learning, logging, 
and provisioning of ML services for several applications. Service and Support data is extracted to the 
Service & Support Data Lake and stored there for data exploration. The data is then analyzed by data 
scientists, and ML models are created  based on the  CSI business requirements. These ML models 
are exposed as  ML services and can then be consumed by the applications via the API Gateway 
(Kong). 
 
Figure 42 - Service & Support Data Lake  
More information can be found below 
• Recording of Service & Support Data Lake – introduction (BAM) 
• Service & Support Data Lake Wiki page 
 
6.11  Metering and Usage Analysis 
Within SAP Cloud ALM , we collect usage metrics to provide transparency about the adoption and 
usage intensity of our product . This helps our product management make investment decisions as 
well as the development to gain insights on how the individual parts of the product are used . In 
addition, we use the usage data to integrate with CPEA for billing purposes (for the HDI container 
usage as well as for external API consumption by customers). 
For collecting the usage metrics in SAP Cloud ALM, we introduced a microservice called "Usage data 
collector" that is responsible for collecting the usage data from the individual application microservices 
via the metering library and sending them via the SAP M etering Service from BTP to the Cloud 
reporting and CPEA for billing purposes (for those metrics that are billing-relevant). 
The microservices can submit usage data regularly to the usage data collector. Alternatively, usage 
data can be pulled by the usage data collector from the microservices via a job. The usage data 
collector stores the usage data in a shared HDI container, and periodically, the usage data is sent to 
the Metering service. Metering service then forwards to Cloud Reporting. In Cloud Reporting, there 
is a spec ific dashboard with all usage data that is specific to SAP Cloud ALM.  There, additional 
customer and tenant master data can be used to do data analysis. Also , other data sources (e.g ., 
ServiceNow cases) are integrated with the CALM Cloud reporting dashboard.

Page 59:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 59 of 66 
 
 
Figure 43 – CALM Usage Measurement Architecture 
 
Customers who use more than 8 GB of HANA memory will be charged based on the additional HANA 
memory usage. Therefore, we measure the HANA memory usage of all tenants on a monthly basis.  
As a prerequisite , customers who overuse 8 GB of memory need to subscribe to the SAP CALM 
memory extension service in their CPEA account. Then, the usage data collector will send the usage 
data of those customers associated with their CPEA account so that they can get charged based on 
their usage. In the CPEA account, the customers see the HANA memory usage and the related costs. 
In addition, the information about the HDI container usage is also sent to the health monitoring 
application so that customers get  information about which application is using most of th e HANA 
memory so that they can potentially do clean-ups if, e.g., data is not required anymore. 
To ensure the data quality of the usage data, we use Focused Run. There, we defined rules (e.g., to 
check the latest usage numbers against the standard deviation) and thresholds that can be used to 
alert and notify the developers of potential issues. 
Details: https://wiki.wdf.sap.corp/wiki/x/-sjEfg  
 
6.12  Backing Services and Scalability 
SAP BTP / Cloud Foundry offers several backing services, which are being consumed by SAP Cloud 
ALM. These backing services are generic services  and avoid the need for  every application to 
implement such functionality on their own. Typical backing services are Cloud Logging, Audit Log, 
Application Autoscaler, and the like. The list of the consumed backing services of SAP Cloud ALM  
can be found in the service toolchain application at 
 https://services.tools.sap/#/perspective/inventory/service/SERVICE-440 (tab "Required Services"). 
The list is also maintained at https://wiki.one.int.sap/wiki/x/8mBTg. 
The plan for SAP Cloud ALM is to finally have around 50.000 customers. We must be prepared for a 
larger number of customers. Currently, around 74.000 customers are entitled to use SAP Cloud ALM. 
Since we don't plan to run SAP Cloud ALM in one single data center exclusively, the assumption is 
not to have more than 5.000 customers in one data center until 2024. 
To handle 5.000 customers per data center, SAP Cloud ALM needs to ensure that the consumed 
backing services scale accordingly and can handle the load. Missing scalability of consumed

Page 60:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 60 of 66 
 
backing services will end up in showstoppers for the rollout activities for SAP Cloud ALM. There is a 
separate workstream on performance and scalability.  
In the early days when the workstream was started, we had to look at the scalability of the backing 
services by ourselves. We estimated the load per customer per day, and we extrapolated the load 
accordingly. Based on this data, we check with the particular BTP service owners to see if the 
service can handle the expected load. In August 2021, BTP Core (India) set up its own team to run 
load tests based on our requests. The documentation of the tasks in this workstream is listed at 
https://wiki.wdf.sap.corp/wiki/x/9BHRiw. 
 
6.13  Identity and Access Management 
SAP Cloud ALM is a customer-managed SaaS. T herefore, the customer is responsible for user 
authentication. SAP supports the customer with best practices on how user authentication shall be 
done. Note: Identity and Access Management is not the same as Authorization Management. 
In the customer onboarding process, SAP Cloud ALM offers fully automated provisioning . The  
customer user who requested the SAP Cloud ALM tenant can log on to the application without further 
configuration activities. So, the basic SAP BTP Cockpit configuration is done within the provisioning 
automation. Additional configuration effort is required so all SAP Cloud ALM features  can be used. 
Such configuration can include setting up connectivity to managed tenants and managed systems. 
As part of the automated provisioning, the customer gets their own IAS tenant for authentication 
purposes. If there is already a customer-owned IAS tenant, this tenant is reused. I f there is no 
customer-owned IAS tenant so far, a new IAS tenant for the customer is created. If an existing IAS 
tenant is used, it is ensured that the user who requested the SAP Cloud ALM tenant gets a user in 
this customer IAS tenant. In case this user gets created in the customer IAS tenant, the user receives 
an identity confirmation email. In case a new IAS tenant is set up, the user who requested the SAP 
Cloud ALM tenant gets a user in this customer-owned IAS tenant , and in addition , this user is 
maintained as administrator of this newly created IAS tenant. 
There is a license bundling of the customer-owned IAS tenant and SAP Cloud ALM, so the customer-
owned IAS tenant is free of charge for the customer in the context of SAP Cloud ALM. 
The process of adding customer users to the customer-owned IAS tenant is not part of the SAP Cloud 
ALM process. Customers have several standard options: 
• Maintain the users in customer IAS tenant manually 
• Maintain the users in customer IAS tenant by replication from S/4HANA or by SFSF 
• Any other option provided by IAS 
The users of the customer-owned IAS tenant are available in SAP Cloud ALM and in the SAP BTP 
Cockpit. In both places, authorization can be granted to these users. 
 
6.14  User Role Assignment (Authorization Management) 
In every application, the capabilities of the application are protected by defined role collections and 
scopes. In customer-managed SaaS applications, the applications provide the available role 
collections as part of the deployment. Customers are allowed to create additional customer-specific 
role collections to suit their needs. 
In customer-managed SaaS applications, the user-role assignment is done in the SAP BTP Cockpit. 
These SAP BTP Cockpit UIs are very technical and not intuitive. In addition, the list of available role 
collections is a mix of SAP BTP Cockpit roles, SaaS application roles, and customer-specific roles. 
For SAP Cloud ALM, the user who requested the SAP Cloud ALM tenant gets the "Global 
Administrator" role assigned to SAP Cloud ALM. With this role assignment, the user is authorized to 
execute all capabilities of the SAP Cloud ALM application.

Page 61:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 61 of 66 
 
To overcome that usability restriction in SAP BTP Cockpit, SAP Cloud ALM introduced its own 
microservice: https://github.tools.sap/CALMBuild/uam-userservice. This is a cross-application user 
management application with excellent usability and is embedded in the SAP Cloud ALM 
launchpad. That way, the user-role assignment maintenance can be done within the SAP Cloud 
ALM application. Users will not need to use the BTP Cockpit. It is just a special role assignment of 
the SAP Cloud ALM application. By that, we ensure the ability to separate the application business 
administrators from the application technical configuration administrators.  
The user roles maintained by CALM uam-userservice are 100% compatible with the users 
maintained in the BTP cockpit. The user-role assignment, which is maintained in the CALM uam-
userservice, is therefore visible in the SAP BTP Cockpit. 
The UAM microservice UI is optimized for SAP Cloud ALM but could be used in other SaaS 
applications as well. The SAP Cloud ALM-specific role collections are displayed in an intuitive UI 
(see screenshot). Role collection assignment in the UI is ordered according to the capabilities in 
SAP Cloud ALM. SAP BTP Cockpit-related role collections are hidden and cannot be granted to any 
user in this UI. Additional application-related roles can be granted to users in the "Custom Roles" 
section. The roles displayed here are either customer-specific roles or, in the future, roles from 
additional subscribed applications like CIAS, CTMS, etc… 
 
 
Figure 44 – User authorization maintenance in SAP Cloud ALM 
 
The user role concept for XALM is described here: https://wiki.wdf.sap.corp/wiki/x/lTz_nQ  
 
No UAM Service in XALM 
We decided to deploy only CALM microservices, which are strictly required in XALM. By that, we keep 
XALM as "lightweight" as possible. Therefore, as of February 2022, UAM is not part of XALM. It's 
been decided that XALM applications that need to access the first and last name of a given user ID 
to get the list of users assigned to a role, etc., will implement the required capabilities through a new 
library/microservice. 
 
6.15  SAP Cloud ALM Commercialization 
The SAP Cloud ALM commercialization model can be separated into two parts:  
1. All order-2-cash-related process steps 
2. The tenant provisioning process. 
In this ACD, we focus on provisioning processes. The process steps for order -2-cash are not in the 
scope of this document since they are bound to the SAP Cloud ALM Commercialization / Business

Page 62:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 62 of 66 
 
Model. See also the figure below: the process marked in the orange boxes is related to the order-2-
cash process. The fulfillment order triggers the provisioning. The fulfillment order also takes care that 
the technical installation number is created and that the iBase is updated accordingly. 
https://wiki.wdf.sap.corp/wiki/x/Azo2b 
  
 
Figure 45 – SAP Entitlement and Cloud Provisioning Process 
 
As shown in Figure 45, the fulfillment request triggers the provisioning of the customer tenant. Either 
in the Service Provider Cockpit or in SAP BTP CIS (Commercial Infrastructure Services). Depending 
on the product that is ordered by the customer and assigned to the Provider Contract, Cloud 
Entitlement Set and Fulfillment Request. For a better understanding, we need to clarify the two cloud 
product types of SAP: 
1. SAP-managed SaaS Application 
For an SAP-managed SaaS Application, the provisioning procedure is performed by the 
Service Provider Cockpit.  
In an SAP-managed SaaS Application, the global account is provided by SAP, as well as 
the IAS Tenant. The customer gets provided with his or her own subaccount, activates the 
subscription, gets a user in the subaccount, and is notified by mail, which includes a link 
that he or she can start working. 
There is no access to any SAP BTP administration tool (SAP BTP Cockpit) to manage 
destinations, user-role assignments, and other tasks. Hence, these need to be provided in 
the application. The customer does not even know that the application runs on the SAP 
BTP environment. 
 
2. Customer-managed SaaS Application 
For a customer-managed SaaS Application, the provisioning procedure is performed by 
SAP BTP - CIS 
In a customer-managed SaaS Application, the customer has full control of his SAP BTP 
Account. Therefore, the provisioning creates a customer-owned global account (if there is 
not already an existing global account), assigns an entitlement (the license material that is 
ordered by the customer in the order-2-cash process) to the global account, adds the user 
of the contract as admin user to this global account, and notifies the user via mail (with link 
to SAP BTP Cockpit) that all other tasks need to be done manually.

Page 63:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 63 of 66 
 
For SAP Cloud ALM, the customer needs full access to the SAP BTP Cockpit to maintain the 
destinations to the customers' cloud tenants as well as to the customers' on-premise systems. Only 
a customer-managed SaaS scenario offers this type of access to the customer landscape. Hence, 
SAP Cloud ALM uses the customer-managed SaaS model. 
6.16  SAP Cloud ALM Customer Onboarding 
All customers with a valid Enterprise Support contract or higher (MaxAttention, Preferred Success, 
and the like) are entitled to request a n SAP Cloud ALM tenant. For all these customers , there is an 
SAP Cloud ALM-specific entitlement set (see Figure 23). All in all, about 74.000 customers are entitled 
to request an SAP Cloud ALM tenant. 
For details about commercialization, see https://wiki.wdf.sap.corp/wiki/x/Azo2b. 
Since we don't want to create 74.000 SAP Cloud ALM tenants, and the customer might not even use 
their SAP Cloud ALM tenant, it was decided to go for a manual call -off to get an SAP Cloud ALM 
tenant provisioned.  
The currently available application to trigger the call-off is ONE Support Launchpad (OSLP). See the 
figure below:  
 
Figure 24 – SAP Cloud ALM Call-off application in OSLP 
The admin user of a customer is allowed to request an SAP Cloud ALM tenant. In this application, 
the customer admin user must specify the hyperscaler region (e.g ., AWS Frankfurt or Azure 
Amsterdam) and the subdomain of the customer BTP subaccount, where the SAP Cloud ALM 
application will be consumed. 
By April 2022, this SAP Cloud ALM call-off application will also be available in SAP 4 Me as part of 
the overall call-off application, where the customer user requests the call -off for all the customers' 
cloud tenants. 
Every call-off request is persisted in  the SAP Support Portal backend system for customer call -off 
logging purposes and even more for provisioning monitoring purposes. See the figure below:

Page 64:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 64 of 66 
 
 
Figure 25 – SAP Cloud ALM provisioning monitoring 
When the call-off request is persisted in the SAP Support Portal, the trigger in the ICP fulfillment order 
is called to start the provisioning. The provisioning for SAP Cloud ALM is highly automated  to keep 
the manual configuration steps for the customer after the provisioning at a minimum. Technically, the 
provisioning procedure consists of 2 parts: one part in CIS and one part in SPC.  
In detail, the steps in the provision are: 
• (CIS) Create one global customer account 
• (CIS) Assign the entitlement for SAP Cloud ALM  
• (CIS) Assign the customer user from OSLP who requested the SAP Cloud ALM tenant  as 
admin to the global account 
• (SPC) Create a sub-account 
• (SPC) Activate the subscription 
• (SPC) Assign the customer IAS tenant (usually a customer has only 1) to the sub-account (or 
create a new customer IAS tenant) 
• (SPC) Create the first user in the IAS tenant (the customer user from OSLP who requested 
the SAP Cloud ALM tenant) 
• Assign the Global Administrator role collection from SAP Cloud ALM to the user  
• Send a mail to the user with the URL to the application and the URL to the SAP BTP Cockpit 
After this provisioning, the customer user who requested the call -off in OSLP  is enabled to 
authenticate at the customer's IAS tenant and start working with SAP Cloud ALM. 
Technically, when the SAP Cloud ALM tenant provisioning is finished, a new entry is available in the 
CLD of the SPC, which is replicated into the customer system data store in the SAP Support Portal. 
This new tenant, together with the customer's call-off request, is the basis for the monitoring of the 
SAP Cloud ALM provisioning shown in Figure 26. 
Currently, the SAP Cloud ALM license material is maintained (in CIS) to allow only one subscription 
per global account. This means the customer is allowed to create additional sub-accounts in the 
customer's global account, but SAP Cloud ALM can be subscribed only once. This is at least the 
current status but is subject to change. Depending on requirements from SAP Cloud ALM product 
management or technical requirements (e.g., for the tenant to move from one data center to another 
one), the number of allowed subscriptions might change. 
In addition, there are ongoing discussions that there will be a combined provisioning of SAP Cloud 
ALM in the context of SAP S/4HANA Cloud and SAP SuccessFactors tenant provisioning.  
6.17 Hyperscaler Strategy / Region Strategy 
The current roadmap for hyperscaler / data center support is listed can be found in 
https://wiki.wdf.sap.corp/wiki/x/5ZPNj

Page 65:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 65 of 66 
 
6.18  DevOps and Operations Processes 
For an introduction to CALM DevOps, see the following links: 
• Engineering Excellence by Continuous Delivery to Production, Daily 
• Carpe Diem - A Day in the Cloud 
• For 24x7 operation processes and tools, see sub-pages of SAP Cloud ALM Operations  
(owned by CALMs 24x7 operations team).  
• See also Chapter 4.8 - Tools for DevOps Monitoring 
• Special interpretation of Site Reliability Engineering (SRE): SRE@CALM wiki 
 
6.19  PPMS Model 
SAP Cloud ALM, with its three sub-areas Build, Run, and Service, are handled as one PPMS product 
(with three separate software components): 
 
Figure 46 - PPMS view on SAP Cloud ALM (link) 
 
6.20 Product Standards  
There are no special product standards for SAP Cloud ALM Build, Run , and Service Delivery. The 
general SAP product standards for SaaS applications apply. See related Sirius project.  
The SAP-Term for the delivery type CALM is using so-called Micro-Delivery. 
For further information on product standards,: go/productstandards. 
Overview session SAP Product Standards for SAP Cloud ALM Engineers: 
https://video.sap.com/media/t/1_uij1tcu3  
 
In the Program Management wiki, you can find contacts and guidance: 
https://wiki.wdf.sap.corp/wiki/x/P7omm  
 
High-Availability and Disaster Recovery 
As a Cloud Foundry application on the BTP, the corresponding statement applies to SAP Cloud 
ALM as well. Details on help.sap.com 
The paper Principles and Patterns for Developing Highly Available S/4HANA Cloud Applications 
is relevant for CALM as well. 
6.21 Cloud Native KPIs Score - Assessment 
Based on the CALM architecture, we can measure a cloud-native score for SAP Cloud ALM. Details: 
https://wiki.wdf.sap.corp/wiki/x/WLENqQ

Page 66:
Architecture Concept: SAP Cloud ALM 
 
© Copyright SAP SE 2023 Internal Page 66 of 66 
 
 
 
 
www.sap.com/contactsap 
 
© 2022 SAP SE or an SAP affiliate company. All rights reserved. 
No part of this publication may be reproduced or transmitted in any form or for any purpose without the express permission of SAP SE or an SAP affiliate company. 
The information contained herein may be changed without prior notice. Some software products marketed by SAP SE and its distr ibutors contain proprietary software components of other software 
vendors. National product specifications may vary. 
These materials are provided by SAP SE or an SAP affiliate company for informational purposes only, without representation or  warranty of any kind, and SAP or its affiliated companies shall not be 
liable for errors or omissions with respect to the material s. The only warranties for SAP or SAP affiliate company products and services are those that are set forth in the express war ranty statements 
accompanying such products and services, if any. Nothing herein should be construed as constituting an additional warranty.  
In particular, SAP SE or its affiliated companies have no obligation to pursue any course of business outlined in this docume nt or any related presentation, or to develop or release any functionality 
mentioned therein. This document, or any related presentation, and SAP SE’s or its affiliated companies’ strategy and possible future developments, products, and/or platform directions and functionality 
are all subject to change and may be changed by SAP SE or its affiliated companies at any time for any reason  without notice. The information in this document is not a commitment, promise, or legal 
obligation to deliver any material, code, or functionality. All forward-looking statements are subject to various risks and uncertainties that could cause actual results to differ materially from expectations. 
Readers are cautioned not to place undue reliance on these forward-looking statements, and they should not be relied upon in making purchasing decisions. 
 
SAP and other SAP products and services mentioned herein as well as their respective logos are trademarks or registered trade marks of SAP SE (or an SAP affiliate company) in Germany and other 
countries. All other product and service names mentioned are the trademarks of their respective companies. See www.sap.com/copyright  for additional trademark information and notices.

Links Found:
- http://global12.sap.com/corporate-en/legal/copyright/index.epx (Page 2)
- https://github.tools.sap/CALM/design (Page 2)
- https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf (Page 2)
- https://github.tools.sap/CALM/design/raw/master/ACD_Cloud-Native_Development_in_CXS.pdf (Page 2)
- https://sap.sharepoint.com/:w:/r/teams/CALMFoundation/_layouts/15/Doc.aspx?action=edit&sourcedoc=%7BDAE5BA07-0E41-422C-94D7-A5F0C3F03843%7D (Page 2)
- https://sap.sharepoint.com/:w:/s/124503/EVSyU_CBHTVCjNJ7bsruL3MBVMD0R_GkikhYezknKwA9OQ?e=AhOZZt (Page 2)
- https://workzone.one.int.sap/site#workzone-home&/groups/elzbHoZqbLQ2grOBgxgvbw/overview_page/N9hFAySVIixkFWvw1jE9ZK (Page 4)
- https://wiki.one.int.sap/wiki/display/CXSDEV/HOME#HOME-ContactsforEngineersinCXS (Page 4)
- https://www.ietf.org/rfc/rfc2119.txt (Page 4)
- https://dwc.tools.sap/ (Page 5)
- https://support.sap.com/en/alm/sap-cloud-alm.html (Page 7)
- https://jam4.sapjam.com/groups/FPGyb1NgPwUQTTLghWdNhw/documents/fEFImHBHloixve5MjAl33V/slide_viewer (Page 8)
- https://wiki.wdf.sap.corp/wiki/x/RyWWpg (Page 8)
- https://d.dam.sap.com/s/i/a/HuUyuNr/Golden%20Path%20Guidance%20Paper.pdf (Page 9)
- https://github.tools.sap/deploy-with-confidence/solar-system/raw/master/docs/documentation/guides/Culture_of_Cloud_Native_Development.pdf (Page 9)
- https://pages.github.tools.sap/deploy-with-confidence/solar-system/ (Page 9)
- https://wiki.one.int.sap/wiki/x/p02-fw (Page 9)
- https://www.devops-research.com/quickcheck.html (Page 9)
- https://wiki.wdf.sap.corp/wiki/display/CXSDEV/HOME (Page 10)
- https://wiki.wdf.sap.corp/wiki/x/dg5rbQ (Page 11)
- https://12factor.net/ (Page 11)
- https://workzone.one.int.sap/site#workzone-home&/groups/eopqUq5S182gY7JFrbdwis/documents/mCpWcQuXG9SAHYneoRkQ5l/slide_viewer (Page 12)
- https://help.sap.com/viewer/DRAFT/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/00823f91779d4d42aa29a498e0535cdf.html (Page 12)
- https://d.dam.sap.com/s/i/a/HuUyuNr/Golden%20Path%20Guidance%20Paper.pdf (Page 12)
- https://d.dam.sap.com/s/i/a/HuUyuNr/Golden%20Path%20Guidance%20Paper.pdf (Page 12)
- https://wiki.one.int.sap/wiki/x/pZcCww (Page 13)
- https://github.tools.sap/CentralEngineering/TechnologyGuidelines/tree/master/tg11 (Page 14)
- https://sap.sharepoint.com/:f:/s/107231/EmbJzCWJMGFErfdAUgEVoqkBy3wTlJ-PzicxAm0GMQfjhA?e=vWdISg (Page 14)
- https://sap.sharepoint.com/:f:/s/107231/EmbJzCWJMGFErfdAUgEVoqkBy3wTlJ-PzicxAm0GMQfjhA?e=vWdISg (Page 14)
- https://news.sap.com/2020/05/sap-cloud-alm-enhances-support-for-cloud-based-solutions/ (Page 16)
- https://support.sap.com/en/alm/sap-cloud-alm.html (Page 16)
- https://wiki.one.int.sap/wiki/x/qM8-sg (Page 17)
- https://wiki.one.int.sap/wiki/pages/viewpage.action?pageId=2990526376 (Page 18)
- https://wiki.one.int.sap/wiki/x/64zNug (Page 19)
- https://dwc.tools.sap/ (Page 20)
- https://martinfowler.com/articles/continuousIntegration.html (Page 22)
- https://dashboard.dwc.tools.sap/org/CALM/deliveries/b78f2447-7e3a-4f11-b69e-ebc3cc9c75e2 (Page 22)
- https://martinfowler.com/articles/feature-toggles.html (Page 23)
- https://dashboard.dwc.tools.sap/org/CALM/featureToggles (Page 23)
- https://wiki.one.int.sap/wiki/x/p02-fw (Page 27)
- https://wiki.one.int.sap/wiki/x/p16Ti (Page 27)
- https://wiki.one.int.sap/wiki/x/DmSngw (Page 28)
- https://internal-dashboards.qod.cxs.only.sap/d/adUWAqiGkcalm/cloud-engineering-tools?orgId=1&refresh=5m (Page 28)
- https://internal-dashboards.qod.cxs.only.sap/d/adUWAqiGkcalm/cloud-engineering-tools?orgId=1&refresh=5m (Page 28)
- https://app.slack.com/client/T9AJD7FNU/CUFRS0WF2 (Page 28)
- https://bdt3.jaas-gcp.cloud.sap.corp/job/Business-Data-Transformation-Solution/ (Page 28)
- https://gkecrun.jaas-gcp.cloud.sap.corp/job/CALMRun/ (Page 28)
- https://dashboard.dwc.tools.sap/org/CALM/landscape/overview (Page 29)
- https://wiki.one.int.sap/wiki/x/Gal-hQ (Page 29)
- https://blogs.sap.com/2020/06/15/quality-innovations-at-sap-cloud-alm/ (Page 29)
- https://internal-dashboards.qod.cxs.only.sap/d/adUWAqiGkcalm/cloud-engineering-tools?orgId=1&refresh=5m (Page 30)
- https://wiki.one.int.sap/wiki/x/9pO6jg (Page 30)
- https://wiki.wdf.sap.corp/wiki/x/P_uPhQ (Page 31)
- https://wiki.wdf.sap.corp/wiki/x/P_uPhQ (Page 31)
- https://wiki.one.int.sap/wiki/x/Y5V8hw (Page 31)
- https://wiki.one.int.sap/wiki/x/-CHdtw (Page 32)
- https://www.youtube.com/watch?v=3vX2iVIJMFQ (Page 32)
- https://wiki.one.int.sap/wiki/x/QNxxiQ (Page 33)
- https://swagger.io/resources/articles/difference-between-api-documentation-specification/ (Page 34)
- https://api.sap.com/package/SAPCloudALM/rest (Page 34)
- https://blogs.sap.com/2021/08/05/sap-cloud-alm-extend-with-apis-introduction-use-cases/ (Page 34)
- https://www.sap.com/products/business-technology-platform/use-cases/open-connectors.html (Page 34)
- https://www.sap.com/products/integration-suite.html (Page 34)
- https://blogs.sap.com/2021/09/29/integrate-sap-cloud-alm-with-jira/ (Page 34)
- https://wiki.wdf.sap.corp/wiki/x/dsj6q (Page 34)
- https://wiki.wdf.sap.corp/wiki/x/JPWJhw (Page 35)
- https://wiki.wdf.sap.corp/wiki/x/Vwime (Page 35)
- https://wiki.wdf.sap.corp/wiki/x/Gm77j (Page 35)
- https://sap.sharepoint.com/:u:/r/teams/IESTechnology/_layouts/15/Doc.aspx?sourcedoc=%7Bb7bbd1de-f99f-435d-a370-2d72aa8ae690%7D&action=view&cid=14f06665-a4f9-460a-8406-4516ce399d58 (Page 36)
- https://github.tools.sap/CentralEngineering/TechnologyGuidelines/blob/latest/tg31/README.md (Page 36)
- https://internal-dashboards.qod.cxs.only.sap/d/iygGLzAMk/tenant-monthly-shared-cost-estimation?orgId=1 (Page 36)
- https://internal-dashboards.qod.cxs.only.sap/d/iygGLzAMk/tenant-monthly-shared-cost-estimation?orgId=1 (Page 37)
- https://wiki.one.int.sap/wiki/x/VvH7jg (Page 37)
- https://wiki.one.int.sap/wiki/x/-CHdtw (Page 39)
- https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/3a7a0bece0d044eca59495965d8a0237.html (Page 39)
- https://developers.sap.com/germany/topics/s4hana-cloud-sdk.html (Page 39)
- https://github.tools.sap/CALM/design/blob/master/adr/adr-0170-api-mngt.md (Page 40)
- https://github.tools.sap/CentralEngineering/TechnologyGuidelines/blob/master/tg27/README.md (Page 40)
- https://wiki.wdf.sap.corp/wiki/x/H1W4eQ (Page 40)
- https://wiki.wdf.sap.corp/wiki/x/8mBTg (Page 40)
- https://wiki.one.int.sap/wiki/x/MdOfuQ (Page 41)
- https://sap.sharepoint.com/:u:/r/teams/CALMFoundation/Shared%20Documents/General/ACD_Cloud_Development_in_CXS.vsdx?d=w43ae59d80c6445bb8c3b4a4d1c53bc25&csf=1&web=1&e=TwFMH3 (Page 42)
- https://jam4.sapjam.com/groups/eopqUq5S182gY7JFrbdwis/documents/BCKggXxFQrWW5FIYZSWXYW/slide_viewer (Page 44)
- https://dashboard.dwc.tools.sap/org/CALM/landscape/overview (Page 44)
- https://wiki.wdf.sap.corp/wiki/x/lTz_nQ (Page 45)
- https://github.tools.sap/CALM/design/blob/master/adr/adr-0190-hdi-schema.md (Page 48)
- https://pages.github.tools.sap/deploy-with-confidence/solar-system/documentation/configuration/landscape-configuration/#internal-api-users (Page 48)
- https://wiki.wdf.sap.corp/wiki/x/mRFJmQ (Page 49)
- https://wiki.wdf.sap.corp/wiki/x/IaUzkg (Page 49)
- https://sap.sharepoint.com/:u:/r/teams/CALMFoundation/Shared%20Documents/General/ACD_Cloud_Development_in_CXS.vsdx?d=w43ae59d80c6445bb8c3b4a4d1c53bc25&csf=1&web=1&e=TwFMH3 (Page 50)
- https://launchpad.support.sap.com/ (Page 53)
- https://me.sap.com/home (Page 53)
- https://jam4.sapjam.com/groups/VWcmkP1pb0i4WAeFZ1rP5o/overview_page/PcW7J13vKejtO3ShJmJPzg (Page 53)
- https://support.sap.com/en/my-support.html (Page 53)
- https://sap-my.sharepoint.com/:v:/p/arno_helmling/EVPV_E3rqqdLnKG5KaPD2PwBh14UcbBWVOV3liZ-fiHWuA (Page 53)
- https://wiki.one.int.sap/wiki/x/Qkeeyg (Page 53)
- https://wiki.one.int.sap/wiki/x/qM8-sg (Page 55)
- https://wiki.one.int.sap/wiki/x/ugKGsw (Page 55)
- https://wiki.one.int.sap/wiki/x/uU-kwg (Page 55)
- https://wiki.wdf.sap.corp/wiki/x/ypPrhw (Page 56)
- https://wiki.wdf.sap.corp/wiki/x/mRFJmQ (Page 56)
- https://wiki.wdf.sap.corp/wiki/x/IaUzkg (Page 56)
- https://wiki.wdf.sap.corp/wiki/x/ibZVfQ (Page 57)
- https://api.sap.com/api/CALM_ANALYTICS/overview (Page 57)
- https://api.sap.com/api/CALM_ANALYTICS/overview (Page 57)
- https://github.tools.sap/CentralEngineering/TechnologyGuidelines/tree/master/tg32 (Page 57)
- https://video.sap.com/media/t/1_phdsi5ki (Page 58)
- https://wiki.wdf.sap.corp/wiki/x/GsuQgw (Page 58)
- https://github.tools.sap/CALMBuild/ca-usage-collector (Page 58)
- https://reporting.ondemand.com/sap/crp/cdo?type=crp_db&db_id=p-core-am-01 (Page 58)
- https://wiki.wdf.sap.corp/wiki/x/-sjEfg (Page 59)
- https://services.tools.sap/#/perspective/inventory/service/SERVICE-440 (Page 59)
- https://wiki.one.int.sap/wiki/x/8mBTg (Page 59)
- https://wiki.wdf.sap.corp/wiki/x/9BHRiw (Page 60)
- https://github.tools.sap/CALMBuild/uam-userservice (Page 61)
- https://wiki.wdf.sap.corp/wiki/x/lTz_nQ (Page 61)
- https://wiki.wdf.sap.corp/wiki/x/Azo2b (Page 62)
- https://wiki.wdf.sap.corp/wiki/x/Azo2b (Page 63)
- https://wiki.wdf.sap.corp/wiki/x/5ZPNj (Page 64)
- https://wiki.wdf.sap.corp/wiki/display/CXSDEV/Guidance+for+CALM+Engineering+-+Engineering+Excellence+by+Continuous+Delivery+to+Production%2C+Daily (Page 65)
- https://wiki.wdf.sap.corp/wiki/display/CXSDEV/5+Carpe+Diem+-+A+Day+in+the+Cloud (Page 65)
- https://wiki.wdf.sap.corp/wiki/display/CXSDEV/SAP+Cloud+ALM+Operations (Page 65)
- https://wiki.wdf.sap.corp/wiki/x/4JO6jg (Page 65)
- https://i7p.wdf.sap.corp/ppmslight/#/details/p/73554900100800002513/overview (Page 65)
- https://ifp.bss.net.sap/sirius/#/program/174E3CBEC8CF234A004B70CC609F7DF7 (Page 65)
- https://portal.wdf.sap.corp/go/productstandards (Page 65)
- https://video.sap.com/media/t/1_uij1tcu3 (Page 65)
- https://wiki.wdf.sap.corp/wiki/x/P7omm (Page 65)
- https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/350356d1dc314d3199dca15bd2ab9b0e.html#loio001180644f8a428bb422cd41caebb95f (Page 65)
- https://sap.sharepoint.com/:w:/s/107697/EUebmYma27dEgcHpwJgAtC0BhQf6EjojM9qziuMhqcXfBg?e=DYcfRB (Page 65)
- https://wiki.wdf.sap.corp/wiki/x/WLENqQ (Page 65)
- https://www.sap.com/copyright (Page 66)
